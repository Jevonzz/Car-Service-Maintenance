com.google.firebase.ktx.FirebaseCommonKtxRegistrar
com.google.android.gms.measurement.AppMeasurementService
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable
com.swmansion.reanimated.NativeProxy$SensorSetter
androidx.appcompat.widget.ButtonBarLayout
com.facebook.common.time.AwakeTimeSinceBootClock
androidx.emoji2.text.EmojiCompatInitializer
com.facebook.react.modules.appregistry.AppRegistry
com.facebook.jni.annotations.DoNotStrip
androidx.fragment.app.Fragment$5
com.google.firebase.components.ComponentDiscoveryService
com.google.android.material.internal.BaselineLayout
com.facebook.react.fabric.ReactNativeConfig
com.facebook.react.bridge.ReactContext
com.facebook.react.bridge.BackgroundExecutor
com.facebook.react.bridge.JavaMethodWrapper$8
com.facebook.hermes.intl.DateTimeFormat
me.zhanghai.android.materialprogressbar.R$string
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.facebook.react.devsupport.JSException
com.facebook.react.modules.websocket.WebSocketModule
com.facebook.react.modules.debug.DevSettingsModule
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.facebook.react.bridge.JavaOnlyArray$1
com.facebook.react.bridge.GuardedResultAsyncTask
com.facebook.react.bridge.ReactCxxErrorHandler
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder
com.google.firebase.concurrent.ExecutorsRegistrar
com.google.android.gms.auth.api.credentials.IdToken
com.facebook.react.bridge.ModuleSpec
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
com.facebook.jni.DestructorThread$Destructor
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate
com.google.android.material.transformation.ExpandableBehavior
me.zhanghai.android.materialprogressbar.R$drawable
com.facebook.react.bridge.JavaMethodWrapper
com.facebook.react.uimanager.RootViewManager
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
com.facebook.react.bridge.JavaMethodWrapper$1
com.facebook.react.bridge.CatalystInstanceImpl$1
com.facebook.soloader.SoLoader
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.facebook.jni.CppSystemErrorException
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
androidx.media.AudioAttributesImplApi21Parcelizer
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.facebook.fbreact.specs.NativeLinkingManagerSpec
androidx.viewpager2.adapter.FragmentStateAdapter$5
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
io.invertase.firebase.app.ReactNativeFirebaseAppModule
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.devsupport.JSCHeapCapture
androidx.media.AudioAttributesCompatParcelizer
androidx.fragment.app.DialogFragment
org.reactnative.maskedview.RNCMaskedViewManager
com.facebook.react.bridge.JavaOnlyMap$2
com.google.firebase.installations.FirebaseInstallationsRegistrar
com.google.android.gms.common.data.DataHolder
com.facebook.react.bridge.JavaMethodWrapper$5
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.facebook.react.bridge.JSApplicationCausedNativeException
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.jni.DestructorThread$Terminus
com.facebook.imagepipeline.platform.PreverificationHelper
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
com.facebook.jni.DestructorThread$DestructorStack
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
com.facebook.react.bridge.ReactSoftExceptionLogger
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat
com.google.android.material.button.MaterialButton
com.google.android.gms.common.api.GoogleApiActivity
me.zhanghai.android.materialprogressbar.R$color
com.reactcommunity.rndatetimepicker.RNDatePickerDialogFragment
com.facebook.react.bridge.CatalystInstanceImpl$5
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.facebook.react.views.view.ReactClippingViewManager
com.facebook.react.views.slider.ReactSliderManager
com.facebook.react.modules.systeminfo.AndroidInfoModule
android.support.v4.media.MediaMetadataCompat
com.facebook.react.bridge.ReactBridge
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.reactcommunity.rndatetimepicker.RNTimePickerDialogFragment
com.facebook.react.bridge.PerformanceCounter
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.react.bridge.ReadableNativeMap$1$1
com.facebook.react.common.futures.SimpleSettableFuture
androidx.appcompat.widget.AlertDialogLayout
com.google.android.material.internal.NavigationMenuItemView
com.google.android.gms.common.SupportErrorDialogFragment
com.google.android.material.textfield.TextInputLayout
com.facebook.jni.MapIteratorHelper
com.facebook.react.common.LifecycleState
com.swmansion.reanimated.ReanimatedModule
com.facebook.common.time.RealtimeSinceBootClock
com.google.firebase.components.ComponentRegistrar
com.facebook.react.bridge.WritableNativeMap
com.facebook.jni.HybridClassBase
com.facebook.react.bridge.DynamicFromArray
com.firebase.ui.auth.ui.email.TroubleSigningInFragment
com.google.android.material.transformation.FabTransformationScrimBehavior
com.facebook.react.bridge.PromiseImpl
com.facebook.react.bridge.CatalystInstanceImpl$1$1
androidx.appcompat.widget.ActionBarContextView
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.facebook.react.modules.dialog.AlertFragment
me.zhanghai.android.materialprogressbar.R$id
com.facebook.react.bridge.NativeModuleRegistry
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
com.facebook.react.module.model.ReactModuleInfo
com.facebook.react.defaults.DefaultComponentsRegistry
com.facebook.hermes.intl.NumberFormat
com.facebook.react.uimanager.UIManagerModule
androidx.core.app.RemoteActionCompatParcelizer
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.android.material.theme.MaterialComponentsViewInflater
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.react.jscexecutor.JSCExecutor
com.facebook.react.bridge.UnexpectedNativeTypeException
androidx.appcompat.widget.SearchView$SearchAutoComplete
me.zhanghai.android.materialprogressbar.BasePaintDrawable
com.yalantis.ucrop.view.GestureCropImageView
com.google.firebase.auth.FirebaseAuthRegistrar
com.facebook.react.bridge.ReactContext$2
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
androidx.appcompat.widget.DialogTitle
com.facebook.react.bridge.CallbackImpl
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec
me.zhanghai.android.materialprogressbar.R$anim
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable
com.facebook.react.bridge.Inspector$RemoteConnection
com.firebase.ui.auth.ui.email.EmailLinkCrossDeviceLinkingFragment
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
me.zhanghai.android.materialprogressbar.Interpolators
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.material.internal.CheckableImageButton
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$1
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.facebook.react.fabric.events.EventBeatManager
androidx.activity.result.ActivityResultRegistry$1
com.facebook.jni.ThreadScopeSupport
android.support.v4.media.session.MediaSessionCompat$Token
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.facebook.react.bridge.ReactCallback
com.facebook.react.bridge.FallbackJSBundleLoader
com.firebase.ui.auth.ui.email.RecoverPasswordActivity
com.facebook.react.bridge.Callback
com.google.android.material.internal.NavigationMenuView
com.facebook.react.bridge.DynamicFromMap
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
com.facebook.react.bridge.ReactMethod
com.google.firebase.FirebaseCommonRegistrar
androidx.core.app.CoreComponentFactory
me.zhanghai.android.materialprogressbar.MaterialProgressBar
com.facebook.react.bridge.ReactMarkerConstants
me.zhanghai.android.materialprogressbar.BaseDrawable$1
com.facebook.react.modules.sound.SoundManagerModule
com.facebook.react.uimanager.BaseViewManager
com.facebook.react.bridge.ReactMarker$MarkerListener
com.facebook.react.modules.clipboard.ClipboardModule
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable
com.google.android.material.datepicker.MaterialCalendarGridView
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.bridge.JSIModuleHolder
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.google.android.gms.common.annotation.KeepName
com.facebook.hermes.intl.Collator
com.reactnativecommunity.picker.TextViewImpl
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
com.facebook.fbreact.specs.NativeDevSettingsSpec
android.support.v4.media.session.ParcelableVolumeInfo
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.react.turbomodule.core.TurboModulePerfLogger
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.react.bridge.JavaMethodWrapper$2
com.facebook.react.turbomodule.core.TurboModuleManager
com.swmansion.reanimated.NativeProxy$EventHandler
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.facebook.react.bridge.ReactModuleWithSpec
androidx.appcompat.widget.Toolbar
com.firebase.ui.auth.util.ui.SupportVectorDrawablesButton
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.facebook.react.bridge.JavaScriptModule
me.zhanghai.android.materialprogressbar.TintableDrawable
com.google.android.gms.common.api.Scope
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_START
com.facebook.react.modules.debug.SourceCodeModule
com.facebook.react.common.mapbuffer.ReadableMapBuffer
com.firebase.ui.auth.ui.email.CheckEmailFragment
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
me.zhanghai.android.materialprogressbar.R$layout
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor
com.google.android.gms.common.api.internal.BasePendingResult
com.google.android.gms.measurement.AppMeasurementReceiver
com.facebook.fbreact.specs.NativeVibrationSpec
com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater
com.facebook.react.config.ReactFeatureFlags
com.facebook.react.bridge.NativeArray
com.google.android.gms.auth.api.signin.GoogleSignInOptions
com.facebook.react.bridge.ProxyJavaScriptExecutor
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule
com.reactnativecommunity.picker.ReactDropdownPickerManager
com.google.android.material.transformation.FabTransformationBehavior
androidx.activity.ComponentActivity$5
com.firebase.ui.auth.ui.phone.CountryListSpinner
com.facebook.react.bridge.InvalidIteratorException
com.firebase.ui.auth.KickoffActivity
com.facebook.react.uimanager.ViewManager
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
com.google.android.gms.common.GooglePlayServicesManifestException
com.swmansion.rnscreens.SearchBarManager
com.facebook.react.bridge.JavaMethodWrapper$7
com.firebase.ui.auth.ui.idp.SingleSignInActivity
com.facebook.react.bridge.JSBundleLoader$1
com.facebook.react.modules.toast.ToastModule
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_END
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
android.support.v4.media.RatingCompat
com.facebook.react.animated.NativeAnimatedModule
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.facebook.react.modules.deviceinfo.DeviceInfoModule
com.facebook.hermes.unicode.AndroidUnicodeUtils
me.zhanghai.android.materialprogressbar.BaseProgressDrawable
com.facebook.react.views.scroll.ReactScrollViewManager
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState
com.reactnativecommunity.picker.ReactPickerManager
com.facebook.react.turbomodule.core.interfaces.TurboModule
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.react.bridge.DefaultJSExceptionHandler
androidx.savedstate.SavedStateRegistry$1
com.facebook.react.bridge.DynamicFromMap$1
androidx.appcompat.widget.FitWindowsFrameLayout
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
androidx.recyclerview.widget.RecyclerView
kotlin.internal.jdk8.JDK8PlatformImplementations
androidx.lifecycle.FullLifecycleObserverAdapter
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
com.facebook.react.bridge.JavaOnlyMap
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.facebook.react.fabric.ComponentFactory
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
com.facebook.react.views.view.ReactViewManager
com.facebook.react.modules.blob.BlobModule
com.facebook.react.modules.debug.AnimationsDebugModule
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.facebook.react.modules.image.ImageLoaderModule
com.facebook.react.uimanager.ComponentNameResolverManager
com.facebook.jni.UnknownCppException
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.modules.fabric.ReactFabric
com.facebook.react.fabric.SurfaceHandlerBinding
com.google.android.gms.common.util.DynamiteApi
com.facebook.react.animated.EventAnimationDriver
com.facebook.react.modules.core.JSTimers
com.google.firebase.auth.FirebaseAuth
com.google.firebase.analytics.FirebaseAnalytics
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.facebook.react.bridge.Promise
com.facebook.react.bridge.JavaMethodWrapper$9
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.react.bridge.JavaMethodWrapper$4
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.firebase.ui.auth.ui.idp.AuthMethodPickerActivity
com.facebook.react.bridge.CatalystInstanceImpl$4
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
androidx.appcompat.view.menu.ExpandedMenuView
com.google.android.material.appbar.AppBarLayout$Behavior
com.facebook.react.bridge.CatalystInstanceImpl$3
com.google.android.material.appbar.MaterialToolbar
com.firebase.ui.auth.ui.email.EmailLinkErrorRecoveryActivity
com.facebook.react.bridge.GuardedRunnable
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable
com.facebook.react.views.text.ReactTextViewManager
com.google.android.material.bottomsheet.BottomSheetBehavior
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate
com.firebase.ui.auth.ui.phone.CheckPhoneNumberFragment
com.facebook.react.modules.permissions.PermissionsModule
com.facebook.react.uimanager.events.RCTEventEmitter
com.facebook.yoga.YogaLogger
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.facebook.react.uimanager.ViewGroupManager
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.facebook.react.bridge.Inspector
com.google.android.gms.auth.api.signin.SignInAccount
com.facebook.hermes.instrumentation.HermesSamplingProfiler
com.google.android.material.datepicker.MaterialDatePicker
androidx.emoji2.text.EmojiCompatInitializer$1
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate
com.facebook.fbreact.specs.NativeClipboardSpec
com.facebook.react.bridge.ReactMarker
com.facebook.react.bridge.UIManager
com.facebook.react.views.text.ReactVirtualTextViewManager
com.facebook.react.bridge.Dynamic
androidx.appcompat.widget.ActionMenuView
com.facebook.react.bridge.AssertionException
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
com.swmansion.rnscreens.ScreenContainerViewManager
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
androidx.appcompat.widget.ViewStubCompat
androidx.lifecycle.Lifecycling$1
com.swmansion.reanimated.layoutReanimation.LayoutAnimations
androidx.media.AudioAttributesImplApi21
com.facebook.react.bridge.OnBatchCompleteListener
me.zhanghai.android.materialprogressbar.R$styleable
androidx.appcompat.view.menu.ListMenuItemView
com.google.android.gms.common.internal.ReflectedParcelable
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule
com.reactnativecommunity.picker.CheckedTextViewImpl
com.facebook.react.bridge.ReadableNativeArray
com.swmansion.gesturehandler.react.RNGestureHandlerModule
com.facebook.react.views.switchview.ReactSwitchManager
com.facebook.hermes.intl.Intl
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.react.fabric.FabricUIManager
com.swmansion.reanimated.NativeProxy$AnimationFrameCallback
com.facebook.common.internal.DoNotStrip
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable
androidx.media.AudioAttributesImpl
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar
com.th3rdwave.safeareacontext.SafeAreaProviderManager
androidx.recyclerview.widget.LinearLayoutManager
me.zhanghai.android.materialprogressbar.Interpolators$LINEAR
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
com.facebook.react.bridge.SoftAssertions
com.facebook.react.bridge.ReactApplicationContext
com.facebook.react.bridge.JSCJavaScriptExecutor
com.facebook.react.modules.vibration.VibrationModule
com.facebook.react.bridge.ReadableMapKeySetIterator
com.google.firebase.auth.internal.RecaptchaActivity
com.facebook.react.bridge.NativeModule
com.facebook.soloader.Api18TraceUtils
com.facebook.react.devsupport.LogBoxModule
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
com.facebook.react.bridge.JavaOnlyMap$1
com.google.android.material.chip.ChipGroup
com.swmansion.reanimated.nodes.EventNode
com.facebook.yoga.YogaNative
com.firebase.ui.auth.ui.email.WelcomeBackPasswordPrompt
com.swmansion.reanimated.NativeProxy
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.facebook.react.fabric.CoreComponentsRegistry
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.facebook.react.views.image.ReactImageManager
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.react.bridge.RuntimeScheduler
com.facebook.react.views.modal.ReactModalHostManager
me.zhanghai.android.materialprogressbar.CircularProgressDrawable
androidx.media.AudioAttributesCompat
com.reactnative.ivpusic.imagepicker.PickerModule
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.swmansion.reanimated.Scheduler
com.facebook.react.bridge.ReadableNativeMap$3
com.facebook.react.bridge.JSIModuleRegistry
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1
androidx.fragment.app.FragmentManager$6
com.google.android.gms.common.api.internal.zzd
com.reactcommunity.rndatetimepicker.DatePickerModule
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
com.facebook.react.common.mapbuffer.WritableMapBuffer
androidx.recyclerview.widget.GridLayoutManager
com.facebook.react.fabric.mounting.mountitems.MountItem
com.yalantis.ucrop.view.OverlayView
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
me.zhanghai.android.materialprogressbar.internal.DrawableCompat
com.facebook.react.bridge.ReadableNativeMap$2
com.google.android.gms.measurement.AppMeasurement
com.facebook.react.bridge.JSIModule
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.react.bridge.JSInstance
com.facebook.react.bridge.WindowFocusChangeListener
com.facebook.yoga.YogaLogLevel
com.google.android.material.textfield.TextInputEditText
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.reactnative.ivpusic.imagepicker.IvpusicImagePickerFileProvider
com.google.android.material.snackbar.SnackbarContentLayout
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
com.yalantis.ucrop.view.widget.AspectRatioTextView
androidx.startup.InitializationProvider
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.facebook.jni.HybridData
com.facebook.react.modules.appstate.AppStateModule
com.th3rdwave.safeareacontext.SafeAreaViewManager
com.facebook.jni.CppException
com.facebook.fbreact.specs.NativeAppearanceSpec
me.zhanghai.android.materialprogressbar.R$style
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
com.google.android.material.textview.MaterialTextView
com.facebook.fbreact.specs.NativeBugReportingSpec
me.zhanghai.android.materialprogressbar.BaseDrawable
com.facebook.react.uimanager.ReanimatedUIManager
com.facebook.react.modules.statusbar.StatusBarModule
com.facebook.yoga.YogaNodeJNIBase
com.facebook.react.modules.camera.ImageStoreManager
com.facebook.react.fabric.StateWrapperImpl
com.facebook.react.bridge.ReadableNativeMap$1
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.facebook.react.uimanager.ComponentNameResolver
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
androidx.activity.ComponentActivity$3
com.facebook.react.bridge.NoSuchKeyException
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.facebook.react.modules.blob.BlobCollector
androidx.versionedparcelable.CustomVersionedParcelable
com.facebook.react.uimanager.SimpleViewManager
com.facebook.imagepipeline.nativecode.Bitmaps
androidx.transition.FragmentTransitionSupport
com.facebook.react.uimanager.events.ReactEventEmitter
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable
com.facebook.react.bridge.queue.MessageQueueThreadHandler
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable
com.firebase.ui.auth.data.client.AuthUiInitProvider
com.facebook.react.views.text.ReactRawTextManager
com.facebook.react.modules.i18nmanager.I18nManagerModule
com.facebook.react.bridge.ReadableType
com.facebook.react.bridge.Systrace
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.facebook.react.modules.blob.FileReaderModule
com.facebook.systrace.TraceListener
com.carservicemanagement.MainActivity
com.facebook.react.bridge.ReadableArray
androidx.appcompat.view.menu.ActionMenuItemView
androidx.lifecycle.SavedStateHandleController$1
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.facebook.react.modules.intent.IntentModule
com.facebook.imagepipeline.nativecode.NativeCodeInitializer
com.firebase.ui.auth.ui.idp.WelcomeBackIdpPrompt
com.facebook.react.bridge.ReactIgnorableMountingException
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView
com.facebook.react.bridge.JavaJSExecutor$Factory
androidx.viewpager2.adapter.FragmentStateAdapter$2
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo
com.facebook.react.perflogger.NativeModulePerfLogger
com.facebook.react.bridge.CxxModuleWrapper
com.facebook.fbreact.specs.NativeShareModuleSpec
com.facebook.react.modules.share.ShareModule
com.facebook.react.bridge.WritableNativeArray
androidx.appcompat.widget.ActionBarContainer
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.facebook.react.bridge.MemoryPressure
com.facebook.fbreact.specs.NativeImageEditorSpec
me.zhanghai.android.materialprogressbar.MaterialProgressDrawable
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation
com.facebook.react.bridge.ColorPropConverter
com.facebook.react.views.text.ReactTextAnchorViewManager
com.google.android.material.transformation.ExpandableTransformationBehavior
com.airbnb.android.react.lottie.LottieAnimationViewManager
com.facebook.react.bridge.ReadableNativeMap
me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable
com.firebase.ui.auth.ui.phone.SubmitConfirmationCodeFragment
androidx.core.util.Pools$SimplePool
com.facebook.proguard.annotations.DoNotStrip
kotlin.internal.jdk7.JDK7PlatformImplementations
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.facebook.react.bridge.JSIModuleType
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
androidx.activity.ComponentActivity$4
com.swmansion.rnscreens.ScreenViewManager
com.facebook.react.bridge.ReadableNativeArray$1
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X
me.zhanghai.android.materialprogressbar.ShowBackgroundDrawable
com.google.android.gms.measurement.AppMeasurementJobService
com.google.android.material.transformation.FabTransformationSheetBehavior
com.facebook.react.modules.core.TimingModule
com.facebook.react.bridge.ReactContext$1
com.facebook.soloader.SysUtil$LollipopSysdeps
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.facebook.react.bridge.JSBundleLoader$3
com.carservicemanagement.MainApplication
com.facebook.react.bridge.NativeArrayInterface
me.zhanghai.android.materialprogressbar.Animators
com.facebook.soloader.SysUtil$Api14Utils
androidx.media.AudioAttributesImplBaseParcelizer
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase
androidx.browser.browseractions.BrowserActionsFallbackMenuView
me.zhanghai.android.materialprogressbar.internal.ThemeUtils
com.firebase.ui.auth.ui.InvisibleFragmentBase
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$1
com.facebook.react.modules.network.NetworkingModule
com.facebook.jni.IteratorHelper
com.google.android.gms.auth.api.credentials.HintRequest
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.react.bridge.ContextBaseJavaModule
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
com.facebook.jni.DestructorThread$DestructorList
com.facebook.react.bridge.UiThreadUtil
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.yalantis.ucrop.task.BitmapCropTask
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN
com.facebook.react.bridge.Arguments$2
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.react.util.RCTLog
androidx.core.widget.NestedScrollView
com.facebook.react.bridge.CatalystInstance
com.firebase.ui.auth.ui.email.WelcomeBackEmailLinkPrompt
com.firebase.ui.auth.ui.email.RegisterEmailFragment
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform
com.firebase.ui.auth.ui.email.EmailLinkFragment
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.react.bridge.JSIModuleProvider
com.yalantis.ucrop.view.UCropView
com.facebook.react.bridge.JavaMethodWrapper$3
com.facebook.react.bridge.ReactNoCrashSoftException
com.facebook.react.bridge.JSBundleLoaderDelegate
com.reactcommunity.rndatetimepicker.TimePickerModule
com.facebook.react.modules.dialog.DialogModule
com.firebase.ui.auth.ui.credentials.CredentialSaveActivity
javax.inject.Provider
com.facebook.react.bridge.JavaScriptExecutorFactory
com.google.android.gms.common.api.Status
com.facebook.react.bridge.GuardedAsyncTask
com.google.android.gms.auth.api.signin.internal.SignInConfiguration
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
androidx.constraintlayout.widget.ConstraintLayout
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.react.bridge.DynamicFromObject
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
com.swmansion.rnscreens.ScreenStackViewManager
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.google.android.gms.auth.api.credentials.Credential
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat
com.facebook.react.turbomodule.core.TurboModuleManager$1
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.facebook.hermes.reactexecutor.HermesExecutor
com.firebase.ui.auth.ui.phone.PhoneActivity
com.google.android.material.datepicker.MaterialCalendar
com.firebase.ui.auth.ui.phone.SpacedEditText
com.facebook.react.bridge.CxxCallbackImpl
androidx.appcompat.app.AlertController$RecycleListView
com.google.android.gms.common.api.internal.LifecycleCallback
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.activity.ImmLeaksCleaner
com.google.firebase.provider.FirebaseInitProvider
com.facebook.react.bridge.JavaScriptContextHolder
com.facebook.react.bridge.WritableMap
androidx.appcompat.widget.ActionBarOverlayLayout
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.facebook.react.bridge.CatalystInstanceImpl
com.facebook.react.modules.appearance.AppearanceModule
me.zhanghai.android.materialprogressbar.R$dimen
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.firebase.ui.auth.ui.FragmentBase
com.facebook.react.bridge.JSBundleLoader$2
android.support.v4.media.MediaDescriptionCompat
com.facebook.react.modules.core.DeviceEventManagerModule
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
me.zhanghai.android.materialprogressbar.R$attr
com.facebook.fbreact.specs.NativeModalManagerSpec
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.google.android.material.datepicker.MaterialTextInputPicker
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
com.facebook.react.bridge.ObjectAlreadyConsumedException
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX
androidx.core.app.RemoteActionCompat
com.facebook.react.fabric.CppViewMutationsWrapper
androidx.lifecycle.SavedStateHandleController
com.facebook.fbreact.specs.NativeDevMenuSpec
com.firebase.ui.auth.ui.email.EmailLinkCatcherActivity
com.facebook.react.bridge.UIManagerListener
me.zhanghai.android.materialprogressbar.BuildConfig
com.facebook.react.views.textinput.ReactTextInputManager
com.google.android.gms.auth.api.credentials.CredentialPickerConfig
com.facebook.jni.DestructorThread$1
com.facebook.react.bridge.JSIModulePackage
com.swmansion.rnscreens.ScreenFragment
android.support.v4.media.session.PlaybackStateCompat$CustomAction
me.zhanghai.android.materialprogressbar.R
com.facebook.react.bridge.JSBundleLoader
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
androidx.lifecycle.SingleGeneratedAdapterObserver
com.facebook.react.devsupport.HMRClient
android.support.v4.media.MediaBrowserCompat$ItemReceiver
androidx.lifecycle.ProcessLifecycleInitializer
com.facebook.react.bridge.JavaModuleWrapper
com.facebook.jni.DestructorThread
com.facebook.react.bridge.ReadableMap
androidx.appcompat.widget.SearchView
android.support.v4.media.session.PlaybackStateCompat
androidx.annotation.Keep
com.facebook.react.bridge.ActivityEventListener
com.facebook.react.bridge.MemoryPressureListener
com.facebook.react.fabric.Binding
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.firebase.ui.auth.ui.email.EmailLinkPromptEmailFragment
com.facebook.react.bridge.JavaMethodWrapper$10
androidx.versionedparcelable.ParcelImpl
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.facebook.react.bridge.NativeArgumentsParseException
com.facebook.react.bridge.JSIModuleSpec
com.facebook.react.bridge.queue.MessageQueueThreadImpl
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable
com.google.android.material.behavior.SwipeDismissBehavior
com.facebook.react.bridge.JsonWriterHelper
com.swmansion.rnscreens.ScreenStackFragment
me.zhanghai.android.materialprogressbar.AnimationScaleIndeterminateCircularProgressDrawable
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat
com.facebook.react.bridge.queue.ReactQueueConfiguration
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.facebook.jni.HybridData$Destructor
androidx.media.AudioAttributesImplBase
com.facebook.react.bridge.JavaMethodWrapper$6
androidx.appcompat.widget.ContentFrameLayout
com.facebook.react.bridge.JSBundleLoader$5
com.facebook.react.bridge.JavaOnlyArray
com.facebook.react.bridge.JavaScriptModuleRegistry
me.zhanghai.android.materialprogressbar.R$integer
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
com.facebook.react.bridge.Arguments
io.invertase.firebase.common.ReactNativeFirebaseModule
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$1
com.firebase.ui.auth.ui.email.EmailActivity
com.reactnativecommunity.asyncstorage.AsyncStorageModule
com.facebook.proguard.annotations.KeepGettersAndSetters
com.facebook.react.fabric.CppComponentRegistry
com.facebook.soloader.DoNotOptimize
com.facebook.react.bridge.JSExceptionHandler
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop
com.google.android.material.chip.Chip
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.facebook.react.bridge.NativeMap
com.facebook.fbreact.specs.NativeTimingSpec
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager
androidx.core.graphics.drawable.IconCompatParcelizer
com.facebook.react.bridge.CatalystInstanceImpl$2
com.facebook.react.bridge.Inspector$Page
com.facebook.react.modules.fresco.FrescoModule
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.swmansion.reanimated.CopiedEvent$1
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.react.bridge.NativeModule$NativeMethod
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.react.bridge.JavaJSExecutor
com.google.android.gms.auth.api.signin.RevocationBoundService
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory
androidx.savedstate.Recreator
androidx.coordinatorlayout.widget.CoordinatorLayout
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec
com.google.firebase.auth.internal.GenericIdpActivity
com.facebook.jni.NativeRunnable
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.fbreact.specs.NativeRedBoxSpec
com.facebook.react.bridge.LifecycleEventListener
androidx.constraintlayout.widget.Barrier
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
com.facebook.react.bridge.ModuleHolder
com.oblador.vectoricons.VectorIconsModule
com.reactnativecommunity.picker.ReactDialogPickerManager
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
com.facebook.react.bridge.Arguments$1
androidx.core.graphics.drawable.IconCompat
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.react.turbomodule.core.TurboModuleManager$2
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable
com.yalantis.ucrop.UCropActivity
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.facebook.fbreact.specs.NativeSoundManagerSpec
com.facebook.react.bridge.WritableArray
com.facebook.react.bridge.BaseJavaModule
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
android.support.v4.graphics.drawable.IconCompatParcelizer
me.zhanghai.android.materialprogressbar.MaterialProgressBar$1
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.bridge.JSBundleLoader$4
me.zhanghai.android.materialprogressbar.R$bool
com.facebook.react.bridge.RuntimeExecutor
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
me.zhanghai.android.materialprogressbar.R$styleable: int[] MenuGroup
org.reactnative.maskedview.RNCMaskedViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$bool: int abc_config_actionMenuItemAllCaps
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_trackTintMode
me.zhanghai.android.materialprogressbar.R$attr: int selectableItemBackground
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: int PROGRESS_INTRINSIC_SIZE_DP
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_height
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
me.zhanghai.android.materialprogressbar.R$attr: int autoCompleteTextViewStyle
com.google.android.gms.internal.measurement.zzgd: long zzM
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
me.zhanghai.android.materialprogressbar.R$layout: int select_dialog_item_material
me.zhanghai.android.materialprogressbar.R$attr: int actionModeCopyDrawable
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
me.zhanghai.android.materialprogressbar.R$dimen: int compat_notification_large_icon_max_height
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
com.google.android.gms.internal.measurement.zzey: java.lang.String zzf
com.facebook.react.views.slider.ReactSliderManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$attr: int dialogPreferredPadding
me.zhanghai.android.materialprogressbar.R$string: int abc_menu_shift_shortcut_label
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation mRingRotation
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener ON_CHANGE_LISTENER
me.zhanghai.android.materialprogressbar.R$attr: int actionModeSelectAllDrawable
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzgp zza
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_DISALLOW_INTERRUPTION
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.google.android.gms.internal.firebase-auth-api.zzro: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_part_chronometer
me.zhanghai.android.materialprogressbar.R$attr: int titleMarginBottom
me.zhanghai.android.materialprogressbar.R$id: int forever
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_START
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: java.lang.Object sValueAnimatorSDurationScaleFieldLock
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Caption
me.zhanghai.android.materialprogressbar.R$integer: int abc_config_activityShortDur
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_icon
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
me.zhanghai.android.materialprogressbar.R$color: int button_material_light
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$dimen: int abc_edit_text_inset_top_material
com.google.firebase.auth.FacebookAuthCredential: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ratingbar_small_material
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_low_pressed
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_iconTint
me.zhanghai.android.materialprogressbar.R$color: int error_color_material_dark
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.firebase-auth-api.zzjz: com.google.android.gms.internal.firebase-auth-api.zzmw zze
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMarginEnd
me.zhanghai.android.materialprogressbar.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
me.zhanghai.android.materialprogressbar.R$style: int Widget_Compat_NotificationActionContainer
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
me.zhanghai.android.materialprogressbar.R$attr: int drawerArrowStyle
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_vertical_padding
com.google.firebase.auth.PlayGamesAuthCredential: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_typeface
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map propManagersMap
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_search_api_material
me.zhanghai.android.materialprogressbar.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
me.zhanghai.android.materialprogressbar.R$drawable: int notification_action_background
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.android.gms.internal.firebase-auth-api.zznk: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
me.zhanghai.android.materialprogressbar.R$styleable: int[] GradientColorItem
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MIN_POINTERS
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
me.zhanghai.android.materialprogressbar.R$attr: int divider
com.google.android.gms.internal.measurement.zzgd: int zzC
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.reactnative.ivpusic.imagepicker.PickerModule: boolean disableCropperColorSetters
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_singleChoiceItemLayout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetStart
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzei zza
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_id
me.zhanghai.android.materialprogressbar.R$string: int abc_toolbar_collapse_description
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzey zze
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.google.android.gms.safetynet.HarmfulAppsData: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
me.zhanghai.android.materialprogressbar.R$id: int default_activity_button
me.zhanghai.android.materialprogressbar.R$color: int material_grey_300
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.google.android.gms.internal.measurement.zzfv: long zzf
com.google.android.gms.internal.measurement.zzei: int zze
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_collapseIcon
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
com.google.android.gms.internal.firebase-auth-api.zzpe: com.google.android.gms.internal.firebase-auth-api.zzacc zze
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_stacked_max_height
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_arrow_drop_right_black_24dp
me.zhanghai.android.materialprogressbar.R$attr: int actionMenuTextAppearance
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
me.zhanghai.android.materialprogressbar.R$id: int search_src_text
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_enabled
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$Companion Companion
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionBarLayout
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatImageView_tint
com.facebook.react.config.ReactFeatureFlags: boolean enableCppPropsIteratorSetter
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.google.android.gms.internal.firebase-auth-api.zzma: com.google.android.gms.internal.firebase-auth-api.zzlu zze
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry registry
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
me.zhanghai.android.materialprogressbar.R$id: int chronometer
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ButtonBar
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.content.res.ColorStateList mSecondaryProgressTint
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_android_popupBackground
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mStateful
me.zhanghai.android.materialprogressbar.R$attr: int autoSizeMinTextSize
com.yalantis.ucrop.model.AspectRatio: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzkm zzg
com.google.android.gms.internal.firebase-auth-api.zzjw: com.google.android.gms.internal.firebase-auth-api.zzmt zzf
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.ReanimatedEventDispatcher reanimatedEventDispatcher
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
com.airbnb.android.react.lottie.LottieAnimationViewManager: int COMMAND_RESET
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_background
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_clear
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textFontWeight
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzfz zzac
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzgy zza
com.google.android.gms.internal.firebase-auth-api.zzti: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_CAMERA_PERMISSION_MSG
me.zhanghai.android.materialprogressbar.R$attr: int closeItemLayout
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetLeft
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableTint
me.zhanghai.android.materialprogressbar.R$id: int italic
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzkm zzd
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzg
com.google.android.gms.internal.firebase-auth-api.zzoe: com.google.android.gms.internal.firebase-auth-api.zzoe zzb
me.zhanghai.android.materialprogressbar.R$styleable: int View_theme
me.zhanghai.android.materialprogressbar.R$color: int secondary_text_disabled_material_dark
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
me.zhanghai.android.materialprogressbar.R$color: int abc_primary_text_material_light
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_START: android.graphics.Path PATH_TRIM_PATH_START
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzacc zze
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceListItem
com.google.firebase.auth.internal.zzr: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int switchStyle
me.zhanghai.android.materialprogressbar.R$dimen: int notification_right_side_padding_top
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_icon_vertical_padding_material
me.zhanghai.android.materialprogressbar.R$style: int Base_Animation_AppCompat_Tooltip
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzi
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowActionBar
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_check_to_on_mtrl_015
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar_TabText
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_NoActionBar
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND
me.zhanghai.android.materialprogressbar.R$attr: int actionBarWidgetTheme
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
me.zhanghai.android.materialprogressbar.R$string: int abc_action_bar_up_description
com.google.android.gms.internal.firebase-auth-api.zzaal: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancelledContinuation: int _resumed
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
com.google.android.gms.internal.measurement.zzfr: long zzf
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.lang.String mLastPhoneNumber
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$dimen: int hint_pressed_alpha_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarStyle
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X: android.view.animation.Interpolator INSTANCE
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_PICKER_CANCELLED_KEY
io.invertase.firebase.common.ReactNativeFirebaseModule: io.invertase.firebase.common.TaskExecutorService executorService
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.firebase-auth-api.zzkl: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderFetchStrategy
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: android.graphics.RectF RECT_PROGRESS_BOUND
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_logo
com.google.android.gms.internal.firebase-auth-api.zzmd: com.google.android.gms.internal.firebase-auth-api.zzmg zze
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.String[] val$iteratorKeys
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.google.android.gms.internal.measurement.zzgd: int zze
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_ACTIVITY_DOES_NOT_EXIST
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_backgroundSplit
me.zhanghai.android.materialprogressbar.R$attr: int tickMark
me.zhanghai.android.materialprogressbar.R$attr: int maxButtonHeight
com.google.android.gms.internal.measurement.zzff: java.lang.String zzf
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_queryHint
me.zhanghai.android.materialprogressbar.R$drawable: int notification_icon_background
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.google.android.gms.internal.firebase-auth-api.zzoj: int zzf
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_hideOnContentScroll
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderFetchTimeout
com.google.firebase.auth.internal.zzx: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
me.zhanghai.android.materialprogressbar.R$attr: int actionDropDownStyle
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: int NUM_POINTS
me.zhanghai.android.materialprogressbar.R$id: int search_voice_btn
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
me.zhanghai.android.materialprogressbar.R$id: int expanded_menu
com.facebook.jni.HybridData$Destructor: long mNativePointer
me.zhanghai.android.materialprogressbar.R$styleable: int[] ViewBackgroundHelper
me.zhanghai.android.materialprogressbar.R$attr: int buttonGravity
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int sHolderCount
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_CompoundButton_CheckBox
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.reactnative.ivpusic.imagepicker.PickerModule: boolean multiple
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarSplitStyle
me.zhanghai.android.materialprogressbar.R$id: int decor_content_parent
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Display1
me.zhanghai.android.materialprogressbar.R$attr: int radioButtonStyle
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_checkable
me.zhanghai.android.materialprogressbar.R$dimen: int abc_button_padding_horizontal_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
me.zhanghai.android.materialprogressbar.R$attr: int progressBarPadding
me.zhanghai.android.materialprogressbar.R$attr: int isLightTheme
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_alphabeticShortcut
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mOpacity
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_android_gravity
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
me.zhanghai.android.materialprogressbar.R$dimen: int notification_media_narrow_margin
me.zhanghai.android.materialprogressbar.R$attr: int colorSwitchThumbNormal
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzoe: int zze
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_NoActionBar
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgp zzf
com.google.firebase.auth.PhoneMultiFactorInfo: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int trackTintMode
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_FAILED_TO_SHOW_PICKER
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzk
com.facebook.react.modules.network.NetworkingModule: java.lang.String NAME
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int topPanel
me.zhanghai.android.materialprogressbar.R$attr: int actionViewClass
me.zhanghai.android.materialprogressbar.R$color: int button_material_dark
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_SearchView
me.zhanghai.android.materialprogressbar.BaseDrawable: int mAlpha
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_suggestionRowLayout
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Large_NoPadding
me.zhanghai.android.materialprogressbar.R$layout: int select_dialog_multichoice_material
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
me.zhanghai.android.materialprogressbar.R$attr: int title
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_navigationMode
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mHasTintMode
me.zhanghai.android.materialprogressbar.R$id: int search_bar
me.zhanghai.android.materialprogressbar.R$attr: int backgroundStacked
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
com.google.android.gms.internal.firebase-auth-api.zzqy: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int RecycleListView_paddingBottomNoButtons
me.zhanghai.android.materialprogressbar.R$attr: int checkedTextViewStyle
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager$Companion Companion
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_RESOURCES
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mCheckedConstantState
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
me.zhanghai.android.materialprogressbar.R$styleable: int View_paddingEnd
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$attr: int showAsAction
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int PROGRESS_INTRINSIC_SIZE_DP
me.zhanghai.android.materialprogressbar.R$attr: int itemPadding
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
com.google.android.gms.safetynet.zza: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzet: java.lang.String zzf
me.zhanghai.android.materialprogressbar.R$drawable: int abc_seekbar_track_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorError
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_fixed_width_minor
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Small
me.zhanghai.android.materialprogressbar.R$attr: int actionModeCutDrawable
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.content.res.ColorStateList mProgressTint
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
me.zhanghai.android.materialprogressbar.R$styleable: int CoordinatorLayout_statusBarBackground
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_POINTERS
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
me.zhanghai.android.materialprogressbar.R$layout: int notification_action
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar_Solid
me.zhanghai.android.materialprogressbar.R$styleable: int[] AnimatedStateListDrawableItem
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object[] val$iteratorValues
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_commitIcon
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.google.android.gms.internal.measurement.zzff: java.lang.String zzk
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_icon
com.facebook.jni.CppSystemErrorException: int errorCode
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_PopupMenu
me.zhanghai.android.materialprogressbar.R$attr: int activityChooserViewStyle
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Time
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.facebook.react.modules.appstate.AppStateModule: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemPaddingRight
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasProgressBackgroundTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_startX
com.google.android.gms.internal.measurement.zzgm: com.google.android.gms.internal.measurement.zzgm zza
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_inverse_material_dark
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener FABRIC_PERF_LOGGER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_titleTextStyle
me.zhanghai.android.materialprogressbar.R$attr: int windowNoTitle
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: float mTrimPathOffset
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
me.zhanghai.android.materialprogressbar.R$attr: int actionBarDivider
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzg
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: java.lang.Runnable mAnimationRunnable
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_switch_to_on_mtrl_00001
me.zhanghai.android.materialprogressbar.R$id: int tag_unhandled_key_listeners
me.zhanghai.android.materialprogressbar.R$attr: int actionModeShareDrawable
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_listItemLayout
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_windowAnimationStyle
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsDoneCreatingModule
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzX
me.zhanghai.android.materialprogressbar.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.google.android.gms.internal.firebase-auth-api.zzjq: com.google.android.gms.internal.firebase-auth-api.zzjt zze
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState mDrawableContainerState
com.google.android.gms.internal.measurement.zzer: com.google.android.gms.internal.measurement.zzer zza
com.swmansion.reanimated.nodes.Node: java.util.Map mMemoizedValue
com.google.android.gms.internal.measurement.zzet: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_textLocale
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_voice
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressTintMode
com.google.android.gms.internal.firebase-auth-api.zzsy: android.os.Parcelable$Creator CREATOR
com.facebook.react.config.ReactFeatureFlags: boolean enableRemoveDeleteTreeInstruction
me.zhanghai.android.materialprogressbar.R$drawable: int abc_text_cursor_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_PopupWindow
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
me.zhanghai.android.materialprogressbar.R$string: int abc_activitychooserview_choose_application
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_CompactMenu
me.zhanghai.android.materialprogressbar.R$color: int abc_primary_text_disable_only_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int[] DrawerArrowToggle
me.zhanghai.android.materialprogressbar.R$id: int scrollView
com.google.android.gms.internal.measurement.zzgm: long zzh
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Display4
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
me.zhanghai.android.materialprogressbar.R$attr: int collapseIcon
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_part_time
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.google.firebase.auth.PhoneAuthCredential mCredential
me.zhanghai.android.materialprogressbar.R$id: int line3
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_ab_back_material
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
me.zhanghai.android.materialprogressbar.R$attr: int mpb_secondaryProgressTint
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int mPaddedIntrinsicHeight
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Body1
com.google.android.gms.internal.measurement.zzgd: int zzf
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Small_Inverse
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_checkboxStyle
me.zhanghai.android.materialprogressbar.R$attr: int arrowShaftLength
com.reactcommunity.rndatetimepicker.DatePickerModule: java.lang.String NAME
com.google.android.gms.internal.firebase-auth-api.zzku: int zzd
com.google.android.gms.internal.measurement.zzek: int zzd
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_ERROR_WHILE_CLEANING_FILES
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceSmallPopupMenu
me.zhanghai.android.materialprogressbar.R$id: int icon_group
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: java.lang.String MODULE_ID
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_default_padding_end_material
me.zhanghai.android.materialprogressbar.R$attr: int tintMode
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Dialog
com.google.android.gms.internal.measurement.zzfh: java.lang.String zzf
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_determinateCircularProgressStyle
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_RatingBar_Indicator
me.zhanghai.android.materialprogressbar.R$string: int abc_menu_enter_shortcut_label
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.graphics.ColorFilter mColorFilter
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_low
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
com.google.android.gms.internal.firebase-auth-api.zzki: int zzd
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.google.android.gms.internal.firebase-auth-api.zzlx: com.google.android.gms.internal.firebase-auth-api.zzma zzd
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_cut_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_corner_radius_material
com.google.android.gms.internal.firebase-auth-api.zzaag: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.BaseViewManager: java.util.Map sStateDescription
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_switchTextAppearance
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
me.zhanghai.android.materialprogressbar.R$anim: int abc_shrink_fade_out_from_bottom
me.zhanghai.android.materialprogressbar.R$styleable: int View_android_focusable
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_fontFamily
com.google.android.gms.internal.firebase-auth-api.zzmz: int zzd
com.google.android.gms.internal.measurement.zzet: int zze
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_display_1_material
me.zhanghai.android.materialprogressbar.R$string: int abc_prepend_shortcut_label
com.google.android.gms.internal.measurement.zzfd: java.lang.String zze
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
me.zhanghai.android.materialprogressbar.R$dimen: int abc_alert_dialog_button_dimen
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Inverse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: android.graphics.Path PATH_PROGRESS
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzgk zza
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_colored_material
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
me.zhanghai.android.materialprogressbar.R$layout: int abc_popup_menu_header_item_layout
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
me.zhanghai.android.materialprogressbar.R$color: int material_blue_grey_950
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_popupTheme
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mChildrenChangingConfigurations
me.zhanghai.android.materialprogressbar.R$attr: int tooltipText
com.facebook.jni.IteratorHelper: java.lang.Object mElement
com.google.android.gms.internal.measurement.zzfh: java.lang.String zze
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.google.android.gms.internal.measurement.zzfx: java.lang.String zze
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
me.zhanghai.android.materialprogressbar.R$attr: int textAllCaps
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_showDividers
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.google.android.gms.internal.firebase-auth-api.zzon: com.google.android.gms.internal.firebase-auth-api.zzoq zze
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasProgressTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int CompoundButton_android_button
me.zhanghai.android.materialprogressbar.R$attr: int actionBarPopupTheme
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Small
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.google.android.gms.internal.firebase-auth-api.zzlg: com.google.android.gms.internal.firebase-auth-api.zzacc zze
me.zhanghai.android.materialprogressbar.R$id: int edit_query
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
me.zhanghai.android.materialprogressbar.R$styleable: int[] PopupWindowBackgroundState
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzgr zza
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatSeekBar
me.zhanghai.android.materialprogressbar.R$attr: int alphabeticModifiers
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableRightCompat
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: boolean mMutated
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String[] val$iteratorKeys
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_spinBars
me.zhanghai.android.materialprogressbar.R$attr: int panelMenuListTheme
me.zhanghai.android.materialprogressbar.R$id: int search_mag_icon
me.zhanghai.android.materialprogressbar.R$attr: int layout_anchorGravity
me.zhanghai.android.materialprogressbar.R$attr: int popupTheme
com.google.android.gms.internal.firebase-auth-api.zzzd: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_ratingBarStyleSmall
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMarginTop
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_default_height_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
me.zhanghai.android.materialprogressbar.R$layout: int abc_alert_dialog_title_material
com.google.android.gms.internal.firebase-auth-api.zznk: com.google.android.gms.internal.firebase-auth-api.zznk zzb
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeTheme
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_controlBackground
com.google.android.gms.internal.firebase-auth-api.zzkf: int zze
me.zhanghai.android.materialprogressbar.R$styleable: int CoordinatorLayout_Layout_layout_behavior
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperToolbarWidgetColor
com.google.firebase.auth.GithubAuthCredential: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int notification_action_icon_size
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_inverse_material_light
me.zhanghai.android.materialprogressbar.R$id: int textSpacerNoButtons
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeStyle
com.airbnb.android.react.lottie.LottieAnimationViewManager: int VERSION
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
com.google.android.gms.internal.firebase-auth-api.zzof: com.google.android.gms.internal.firebase-auth-api.zzadk zze
me.zhanghai.android.materialprogressbar.R$id: int search_edit_frame
me.zhanghai.android.materialprogressbar.R$string: int abc_capital_off
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$styleable: int StateListDrawable_android_dither
me.zhanghai.android.materialprogressbar.R$id: int title_template
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
me.zhanghai.android.materialprogressbar.R$drawable: int abc_popup_background_mtrl_mult
me.zhanghai.android.materialprogressbar.R$layout: int abc_tooltip
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressStyle
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.facebook.react.config.ReactFeatureFlags: boolean warnOnLegacyNativeModuleSystemUse
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar_TabBar
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
me.zhanghai.android.materialprogressbar.R$attr: int mpb_determinateCircularProgressStyle
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$id: int multiply
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMarginBottom
me.zhanghai.android.materialprogressbar.Animators: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT1_SCALE_X
me.zhanghai.android.materialprogressbar.R$id: int action_image
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Info
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_TEMP_DIRECTORY
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
me.zhanghai.android.materialprogressbar.R$dimen: int abc_control_inset_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
com.swmansion.rnscreens.SearchBarManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_large_material
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.google.android.gms.internal.measurement.zzei: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableRight
me.zhanghai.android.materialprogressbar.R$dimen: int highlight_alpha_material_colored
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_backgroundStacked
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListView_DropDown
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
me.zhanghai.android.materialprogressbar.R$attr: int autoSizeStepGranularity
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
me.zhanghai.android.materialprogressbar.R$dimen: int highlight_alpha_material_light
me.zhanghai.android.materialprogressbar.R$style: int Base_AlertDialog_AppCompat_Light
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT2_SCALE_X
me.zhanghai.android.materialprogressbar.R$anim: int abc_slide_out_bottom
me.zhanghai.android.materialprogressbar.R$attr: int keylines
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
me.zhanghai.android.materialprogressbar.R$dimen: int abc_seekbar_track_progress_height_material
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.Scheduler: com.facebook.jni.HybridData mHybridData
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mCxxModuleProvider
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.graphics.Rect mConstantPadding
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_borderlessButtonStyle
me.zhanghai.android.materialprogressbar.R$layout: int abc_screen_simple_overlay_action_mode
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: float mBackgroundAlpha
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetStartWithNavigation
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
me.zhanghai.android.materialprogressbar.R$attr: int spinnerStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasProgressBackgroundTint
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_search_material
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzH
com.reactnative.ivpusic.imagepicker.PickerModule: int width
me.zhanghai.android.materialprogressbar.R$styleable: int ViewStubCompat_android_id
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.google.android.gms.internal.firebase-auth-api.zzoe: int zzf
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_CANNOT_LAUNCH_CAMERA
me.zhanghai.android.materialprogressbar.R$style: int Base_V22_Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_voiceIcon
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int mCurIndex
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetEndWithActions
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_showText
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.util.Iterator mIterator
com.google.android.gms.internal.firebase-auth-api.zzoa: com.google.android.gms.internal.firebase-auth-api.zzoa zzb
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzgb zza
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_android_textOn
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar_TabText
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_DrawerArrowToggle
com.facebook.react.modules.blob.FileReaderModule: java.lang.String NAME
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.util.HashMap mCachedResolvers
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatImageView_android_src
com.google.android.gms.internal.measurement.zzfj: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzkf: com.google.android.gms.internal.firebase-auth-api.zzkf zzb
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_subtitleTextColor
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_DialogWhenLarge
me.zhanghai.android.materialprogressbar.Animators: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X
com.reactnative.ivpusic.imagepicker.PickerModule: int IMAGE_PICKER_REQUEST
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzp
com.google.android.gms.internal.measurement.zzfb: int zzd
com.google.android.gms.internal.firebase-auth-api.zzmo: com.google.android.gms.internal.firebase-auth-api.zzmo zzb
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_shadowDx
me.zhanghai.android.materialprogressbar.R$attr: int suggestionRowLayout
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_custom_big
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
me.zhanghai.android.materialprogressbar.R$attr: int textColorSearchUrl
me.zhanghai.android.materialprogressbar.R$id: int shortcut
me.zhanghai.android.materialprogressbar.R$style: int Base_V28_Theme_AppCompat_Light
com.facebook.react.config.ReactFeatureFlags: boolean enableTurboModulePromiseAsyncDispatch
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int mProgressIntrinsicHeight
com.google.android.gms.internal.firebase-auth-api.zzpb: com.google.android.gms.internal.firebase-auth-api.zzpb zzb
me.zhanghai.android.materialprogressbar.R$style: int AlertDialog_AppCompat_Light
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricLogs
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
me.zhanghai.android.materialprogressbar.R$id: int search_badge
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_min_width_major
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableTopCompat
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_WIDTH
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableCompat_android_dither
me.zhanghai.android.materialprogressbar.R$id: int circular
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_bar_up_container
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$attr: int windowActionModeOverlay
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_min_width_minor
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
me.zhanghai.android.materialprogressbar.R$attr: int buttonStyleSmall
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory[] handlerFactories
com.facebook.react.fabric.CppViewMutationsWrapper: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.measurement.zzft: long zzh
com.google.android.gms.internal.firebase-auth-api.zztk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzL
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.measurement.zzgd: long zzn
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat
com.google.android.gms.internal.firebase-auth-api.zzjw: com.google.android.gms.internal.firebase-auth-api.zzkc zze
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkm zzg
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
me.zhanghai.android.materialprogressbar.R$style: int Base_V22_Theme_AppCompat
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzmo: com.google.android.gms.internal.firebase-auth-api.zzok zze
com.google.android.gms.internal.measurement.zzfd: com.google.android.gms.internal.measurement.zzfd zza
me.zhanghai.android.materialprogressbar.R$attr: int alertDialogTheme
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableLeft
me.zhanghai.android.materialprogressbar.R$styleable: int[] StateListDrawableItem
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
me.zhanghai.android.materialprogressbar.R$id: int alertTitle
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_showProgressBackground
com.swmansion.reanimated.nodes.Node: java.lang.Double ZERO
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
me.zhanghai.android.materialprogressbar.R$drawable: int abc_switch_thumb_material
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_divider_material
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: int PADDED_INTRINSIC_SIZE_DP
me.zhanghai.android.materialprogressbar.R$attr: int customNavigationLayout
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$Companion Companion
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_pressed_holo_light
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Button
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method mHandleErrorFunc
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$attr: int layout_behavior
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_edittext
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzD
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_orderInCategory
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowActionModeOverlay
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_fontVariationSettings
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dropdownitem_icon_width
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
me.zhanghai.android.materialprogressbar.R$color: int background_material_light
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$dimen: int abc_alert_dialog_button_bar_height
com.google.android.gms.internal.measurement.zzfn: int zzd
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int listItemLayout
me.zhanghai.android.materialprogressbar.R$id: int start
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_SHOULD_ACTIVATE_ON_START
com.google.android.gms.internal.firebase-auth-api.zzoa: int zzf
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_goIcon
me.zhanghai.android.materialprogressbar.R$layout: int abc_list_menu_item_radio
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Display2
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_indeterminateTint
me.zhanghai.android.materialprogressbar.R$id: int add
com.google.android.gms.internal.measurement.zzfd: boolean zzg
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.google.android.gms.internal.firebase-auth-api.zzmg: com.google.android.gms.internal.firebase-auth-api.zzacc zzg
me.zhanghai.android.materialprogressbar.R$styleable: int[] RecycleListView
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX RECT_1_TRANSFORM_X
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_menu_material
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.SerialExecutor executor
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_dividerPadding
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_radioButtonStyle
com.google.android.gms.internal.firebase-auth-api.zzot: com.google.android.gms.internal.firebase-auth-api.zzot zzb
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX RECT_2_TRANSFORM_X
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_SeekBar_Discrete
me.zhanghai.android.materialprogressbar.R$styleable: int ViewBackgroundHelper_backgroundTint
me.zhanghai.android.materialprogressbar.R$attr: int actionBarStyle
me.zhanghai.android.materialprogressbar.R$drawable: int abc_item_background_holo_light
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.content.res.ColorStateList mTintList
com.google.android.gms.internal.measurement.zzcl: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$color: int background_floating_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_useIntrinsicPadding
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.events.EventBeatManager mEventBeatManager
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_color
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_START
me.zhanghai.android.materialprogressbar.R$attr: int actionLayout
com.google.android.gms.internal.firebase-auth-api.zzoa: boolean zzg
me.zhanghai.android.materialprogressbar.R$id: int action_bar_title
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_iconifiedByDefault
com.google.android.gms.internal.firebase-auth-api.zzkl: com.google.android.gms.internal.firebase-auth-api.zzkl zzb
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ButtonBar
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Caption
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NEEDS_POINTER_DATA
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzae
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
me.zhanghai.android.materialprogressbar.R$id: int message
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzem zzg
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.transitions.TransitionModule mTransitionManager
com.facebook.react.config.ReactFeatureFlags: boolean enableViewRecycling
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzacc zze
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
me.zhanghai.android.materialprogressbar.R$attr: int paddingStart
me.zhanghai.android.materialprogressbar.R$attr: int drawableSize
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorControlNormal
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.R$dimen: int notification_top_pad_large_text
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.reactnative.ivpusic.imagepicker.PickerModule: boolean freeStyleCropEnabled
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.reactnativecommunity.picker.ReactDialogPickerManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager mNodesManager
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_BOTTOM
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzh
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_EditText
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_pressed_holo_dark
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzsi: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
me.zhanghai.android.materialprogressbar.R$attr: int expandActivityOverflowButtonDrawable
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int mProgressIntrinsicSize
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_horizontalDivider
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeSplitBackground
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: java.lang.Object sValueAnimatorGetDurationScaleMethodLock
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat
com.google.android.gms.measurement.internal.zzq: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int thickness
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.google.android.gms.internal.measurement.zzgg: int zze
me.zhanghai.android.materialprogressbar.R$attr: int actionBarItemBackground
me.zhanghai.android.materialprogressbar.R$attr: int windowFixedHeightMajor
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dividerVertical
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
me.zhanghai.android.materialprogressbar.R$attr: int colorControlActivated
me.zhanghai.android.materialprogressbar.R$drawable: int abc_tab_indicator_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
me.zhanghai.android.materialprogressbar.R$attr: int mpb_useIntrinsicPadding
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dividerHorizontal
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarTabTextStyle
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_spinner
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.google.android.gms.internal.firebase-auth-api.zzpe: int zzd
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
me.zhanghai.android.materialprogressbar.R$attr: int thumbTextPadding
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzy
me.zhanghai.android.materialprogressbar.R$color: int abc_primary_text_disable_only_material_dark
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_defaultQueryHint
com.facebook.react.config.ReactFeatureFlags: boolean useGlobalCallbackCleanupScopeUsingRetainJSCallback
me.zhanghai.android.materialprogressbar.R$id: int tag_unhandled_key_event_manager
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
me.zhanghai.android.materialprogressbar.R$attr: int ratingBarStyleSmall
me.zhanghai.android.materialprogressbar.R$styleable: int[] StateListDrawable
com.google.android.gms.internal.firebase-auth-api.zzrc: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
me.zhanghai.android.materialprogressbar.R$attr: int tint
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_textAllCaps
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_navigationContentDescription
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressBackgroundTintMode
me.zhanghai.android.materialprogressbar.R$drawable: int abc_item_background_holo_dark
me.zhanghai.android.materialprogressbar.R$attr: int defaultQueryHint
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatImageView_srcCompat
com.google.android.gms.internal.firebase-auth-api.zzof: com.google.android.gms.internal.firebase-auth-api.zzof zzb
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzf
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarSize
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Horizontal_NoPadding
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
me.zhanghai.android.materialprogressbar.R$style: int Platform_ThemeOverlay_AppCompat_Dark
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_android_focusable
me.zhanghai.android.materialprogressbar.R$attr: int lineHeight
me.zhanghai.android.materialprogressbar.R$color: int abc_color_highlight_material
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Map mTurboModuleHolders
com.google.android.gms.internal.firebase-auth-api.zzkx: int zze
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionButton_CloseMode
me.zhanghai.android.materialprogressbar.R$attr: int listLayout
me.zhanghai.android.materialprogressbar.R$attr: int dropdownListPreferredItemHeight
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
me.zhanghai.android.materialprogressbar.R$attr: int actionModeBackground
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListView
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzet zza
me.zhanghai.android.materialprogressbar.R$styleable: int StateListDrawable_android_visible
me.zhanghai.android.materialprogressbar.R$styleable: int[] AlertDialog
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
me.zhanghai.android.materialprogressbar.R$styleable: int[] FontFamily
me.zhanghai.android.materialprogressbar.BuildConfig: java.lang.String FLAVOR
com.airbnb.android.react.lottie.LottieAnimationViewManager: int COMMAND_RESUME
me.zhanghai.android.materialprogressbar.R$id: int none
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonStyle
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_Colored
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
com.google.android.gms.internal.firebase-auth-api.zzok: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_titleTextStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform mRingPathTransform
com.google.android.gms.internal.measurement.zzgd: boolean zzF
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
me.zhanghai.android.materialprogressbar.R$attr: int iconTint
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfz zza
com.reactnative.ivpusic.imagepicker.PickerModule: boolean includeBase64
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: int MODULE_VERSION
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleTextColor
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_END
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
com.facebook.react.bridge.DynamicFromArray: int mIndex
com.google.android.gms.internal.measurement.zzfd: boolean zzf
me.zhanghai.android.materialprogressbar.R$attr: int alpha
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetRight
com.google.android.gms.internal.firebase-auth-api.zzsc: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: int zzJ
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mConstantHeight
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzg
com.firebase.ui.auth.AuthMethodPickerLayout: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ProgressBar
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeBackground
me.zhanghai.android.materialprogressbar.R$drawable: int abc_switch_track_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_itemTextAppearance
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzkm zzh
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.google.android.gms.internal.measurement.zzfx: java.lang.String zzf
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String NAME
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$attr: int toolbarStyle
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
me.zhanghai.android.materialprogressbar.R$integer: int abc_config_activityDefaultDur
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_Colored
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: float mTranslateX
me.zhanghai.android.materialprogressbar.R$style: int Platform_V25_AppCompat
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_ttcIndex
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
me.zhanghai.android.materialprogressbar.R$id: int time
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorButtonNormal
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_numericModifiers
com.google.android.gms.internal.firebase-auth-api.zzpb: com.google.android.gms.internal.firebase-auth-api.zzadk zze
me.zhanghai.android.materialprogressbar.R$style: int Animation_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: android.animation.Animator[] mAnimators
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable mBackgroundDrawable
com.swmansion.reanimated.NativeProxy$EventHandler: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.firebase-auth-api.zzadc: com.google.android.gms.internal.firebase-auth-api.zzacx zzb
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_menuCategory
me.zhanghai.android.materialprogressbar.R$drawable: int notification_template_icon_bg
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_Solid
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_fixed_height_major
me.zhanghai.android.materialprogressbar.R$styleable: int StateListDrawable_android_exitFadeDuration
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.firebase-auth-api.zznh: com.google.android.gms.internal.firebase-auth-api.zznh zzb
me.zhanghai.android.materialprogressbar.BasePaintDrawable: android.graphics.Paint mPaint
com.google.android.gms.internal.firebase-auth-api.zzjq: int zzd
com.google.android.gms.internal.firebase-auth-api.zzmd: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
com.reactnative.ivpusic.imagepicker.PickerModule: boolean cropping
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_holo_light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonStyleSmall
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: android.graphics.Rect mHotspotBounds
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button
com.google.android.gms.internal.firebase-auth-api.zzns: java.lang.String zzd
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_subhead_material
me.zhanghai.android.materialprogressbar.R$color: int abc_background_cache_hint_selector_material_dark
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
me.zhanghai.android.materialprogressbar.R$layout: int abc_list_menu_item_layout
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableEndCompat
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzm
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String NAME
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsTryingToCreate
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzla zzb
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitecture
me.zhanghai.android.materialprogressbar.R$dimen: int abc_switch_padding
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.content.res.ColorStateList mProgressBackgroundTint
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListMenuView
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.swmansion.reanimated.ReanimatedModule: com.facebook.react.uimanager.UIManagerModule mUIManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_checkableBehavior
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mJavaModuleProvider
me.zhanghai.android.materialprogressbar.R$color: int material_deep_teal_500
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
com.google.android.gms.internal.measurement.zzkf: com.google.android.gms.internal.measurement.zzmp zzc
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
com.reactnative.ivpusic.imagepicker.PickerModule: int height
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mConstantSize
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX mRect2TransformX
me.zhanghai.android.materialprogressbar.R$id: int action_bar_container
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.google.android.gms.internal.firebase-auth-api.zzjw: int zzd
me.zhanghai.android.materialprogressbar.R$color: int abc_hint_foreground_material_dark
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.util.SparseArray mDrawableFutures
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
me.zhanghai.android.materialprogressbar.R$id: int bottom
com.google.android.gms.internal.firebase-auth-api.zzrw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.credentials.CredentialRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzr
me.zhanghai.android.materialprogressbar.R$styleable: int[] SwitchCompat
me.zhanghai.android.materialprogressbar.R$id: int action_bar_activity_content
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String TAG
me.zhanghai.android.materialprogressbar.BuildConfig: java.lang.String VERSION_NAME
me.zhanghai.android.materialprogressbar.R$styleable: int[] LinearLayoutCompat
me.zhanghai.android.materialprogressbar.Animators: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT2_SCALE_X
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
me.zhanghai.android.materialprogressbar.R$id: int normal
me.zhanghai.android.materialprogressbar.R$attr: int queryHint
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: java.lang.String TAG
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mAutoMirrored
com.google.android.gms.internal.firebase-auth-api.zzsk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzer: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_progressBarPadding
me.zhanghai.android.materialprogressbar.R$attr: int ttcIndex
com.google.android.gms.internal.measurement.zzff: long zze
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzad
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_fontStyle
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
me.zhanghai.android.materialprogressbar.R$attr: int subMenuArrow
me.zhanghai.android.materialprogressbar.R$layout: int select_dialog_singlechoice_material
com.google.android.gms.internal.firebase-auth-api.zznk: com.google.android.gms.internal.firebase-auth-api.zznn zze
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_textAllCaps
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVATE_AFTER_LONG_PRESS
com.google.android.gms.internal.measurement.zzfx: long zzg
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzj
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzfp: boolean zzh
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_low_normal
me.zhanghai.android.materialprogressbar.R$attr: int seekBarStyle
com.swmansion.reanimated.nodes.Node: java.util.List mChildren
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.google.android.gms.safetynet.zzh: android.os.Parcelable$Creator CREATOR
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_IMAGE_DATA_FOUND
com.swmansion.reanimated.NativeProxy$SensorSetter: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzer zzi
me.zhanghai.android.materialprogressbar.R$attr: int numericModifiers
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: java.lang.reflect.Method sValueAnimatorGetDurationScaleMethod
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_disabled_holo_dark
me.zhanghai.android.materialprogressbar.R$color: int primary_material_dark
com.google.android.gms.internal.firebase-auth-api.zzma: com.google.android.gms.internal.firebase-auth-api.zzma zzb
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBarLayout_android_layout_gravity
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_PopupMenu_Overflow
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_popupTheme
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_fontWeight
me.zhanghai.android.materialprogressbar.R$color: int material_deep_teal_200
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener mAccessibilityServiceChangeListener
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_SearchView
com.google.android.gms.internal.firebase-auth-api.zzkc: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
me.zhanghai.android.materialprogressbar.R$dimen: int highlight_alpha_material_dark
com.facebook.react.bridge.ReadableNativeMap$2: int currentIndex
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetEnd
me.zhanghai.android.materialprogressbar.R$color: int dim_foreground_material_dark
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mExitFadeDuration
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$attr: int actionMenuTextColor
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Body2
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.ColorFilter mColorFilter
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_START
me.zhanghai.android.materialprogressbar.R$bool: int abc_action_bar_embed_tabs
me.zhanghai.android.materialprogressbar.R$attr: int state_above_anchor
me.zhanghai.android.materialprogressbar.R$dimen: int abc_button_padding_vertical_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionButton
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_textLocale
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textColorHint
me.zhanghai.android.materialprogressbar.R$dimen: int hint_pressed_alpha_material_dark
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorControlHighlight
com.facebook.react.bridge.CallbackImpl: int mCallbackId
me.zhanghai.android.materialprogressbar.R$style: int Base_V26_Theme_AppCompat_Light
com.google.android.gms.internal.measurement.zzff: int zzg
com.swmansion.reanimated.nodes.Node: com.swmansion.reanimated.NodesManager mNodesManager
me.zhanghai.android.materialprogressbar.R$color: int abc_search_url_text_normal
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.google.android.gms.internal.firebase-auth-api.zzjz: com.google.android.gms.internal.firebase-auth-api.zzkf zzd
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.google.android.gms.internal.firebase-auth-api.zzaaw: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textColorSearchUrl
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_ttcIndex
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
me.zhanghai.android.materialprogressbar.R$anim: int abc_tooltip_exit
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_END
com.google.android.gms.internal.firebase-auth-api.zzko: int zze
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_layout
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Tooltip
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_X
me.zhanghai.android.materialprogressbar.R$id: int icon
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_orderInCategory
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColorItem_android_offset
com.reactnative.ivpusic.imagepicker.PickerModule: boolean includeExif
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_divider_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_disabled_holo_light
me.zhanghai.android.materialprogressbar.R$attr: int titleMargin
me.zhanghai.android.materialprogressbar.R$styleable: int[] View
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
me.zhanghai.android.materialprogressbar.R$styleable: int[] AnimatedStateListDrawableCompat
com.google.android.gms.internal.auth-api.zbu: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_android_minHeight
me.zhanghai.android.materialprogressbar.R$id: int action_bar_root
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$attr: int singleChoiceItemLayout
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mVariablePadding
me.zhanghai.android.materialprogressbar.R$attr: int panelBackground
me.zhanghai.android.materialprogressbar.R$attr: int navigationContentDescription
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.google.android.gms.internal.measurement.zzgd: long zzN
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_body_1_material
me.zhanghai.android.materialprogressbar.R$id: int wrap_content
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.google.android.gms.internal.measurement.zzgd: int zzQ
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetEnd
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_android_layout
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXTERNAL_DIRECTORY
me.zhanghai.android.materialprogressbar.R$string: int abc_action_mode_done
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListView_Menu
com.google.android.gms.internal.firebase-auth-api.zzot: int zzd
me.zhanghai.android.materialprogressbar.R$layout: int abc_search_view
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_itemBackground
me.zhanghai.android.materialprogressbar.R$style: int Base_V26_Widget_AppCompat_Toolbar
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textSize
me.zhanghai.android.materialprogressbar.R$styleable: int CompoundButton_buttonCompat
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat mOwner
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzek zza
me.zhanghai.android.materialprogressbar.R$attr: int mpb_indeterminateTint
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
me.zhanghai.android.materialprogressbar.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderPackage
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColorItem_android_color
me.zhanghai.android.materialprogressbar.R$attr: int track
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.google.android.gms.internal.firebase-auth-api.zzlu: com.google.android.gms.internal.firebase-auth-api.zznx zzd
com.google.android.gms.internal.firebase-auth-api.zzru: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_V23_Theme_AppCompat_Light
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.oblador.vectoricons.VectorIconsModule: java.lang.String REACT_CLASS
com.google.android.gms.internal.firebase-auth-api.zzld: int zze
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Subhead_Inverse
com.google.android.gms.internal.firebase-auth-api.zzlx: com.google.android.gms.internal.firebase-auth-api.zzlx zzb
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Spinner_DropDown
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_alpha
me.zhanghai.android.materialprogressbar.R$styleable: int PopupWindow_android_popupAnimationStyle
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_Y
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_submitBackground
me.zhanghai.android.materialprogressbar.R$dimen: int notification_action_text_size
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_closeIcon
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_indeterminateProgressStyle
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabView
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_font
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
me.zhanghai.android.materialprogressbar.R$id: int dynamic
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_headline_material
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_LEFT
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_margin
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat
com.google.android.gms.internal.measurement.zzio: int zzb
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_normal
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.google.firebase.auth.UserProfileChangeRequest: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatTextHelper
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.util.HashMap mMultiFactorSessions
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzem zza
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzkm zzf
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate mSurfaceDelegate
me.zhanghai.android.materialprogressbar.R$styleable: int[] MenuItem
me.zhanghai.android.materialprogressbar.R$attr: int theme
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.google.android.gms.internal.measurement.zzek: boolean zzj
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_CACHE_DIRECTORY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$styleable: int[] MenuView
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressBackgroundTint
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkm zzf
com.google.firebase.auth.internal.zzp: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_HASH
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_android_lStar
me.zhanghai.android.materialprogressbar.R$dimen: int notification_right_icon_size
me.zhanghai.android.materialprogressbar.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$layout: int abc_activity_chooser_view_list_item
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: me.zhanghai.android.materialprogressbar.BaseDrawable this$0
me.zhanghai.android.materialprogressbar.R$id: int action_menu_divider
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
me.zhanghai.android.materialprogressbar.R$color: int highlighted_text_material_light
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_Small
me.zhanghai.android.materialprogressbar.R$attr: int textAppearancePopupMenuHeader
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.airbnb.android.react.lottie.LottieAnimationViewManager: int COMMAND_PLAY
me.zhanghai.android.materialprogressbar.R$dimen: int compat_button_padding_horizontal_material
me.zhanghai.android.materialprogressbar.R$attr: int icon
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
com.swmansion.reanimated.nodes.Node: java.lang.Double ONE
me.zhanghai.android.materialprogressbar.R$attr: int ratingBarStyle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_button_material
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter mFabricEventEmitter
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule mModule
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.airbnb.lottie.LottieAnimationView$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_NoActionBar
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_android_entries
me.zhanghai.android.materialprogressbar.R$attr: int imageButtonStyle
com.google.firebase.auth.internal.zzae: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int mModuleId
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.facebook.react.uimanager.ViewManager: java.util.HashMap mRecyclableViews
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_search
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean mShowBackground
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_DIRECTION
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.graphics.PorterDuff$Mode mIndeterminateTintMode
me.zhanghai.android.materialprogressbar.R$id: int spacer
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List sListeners
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mDither
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzer zzf
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzkm zzd
me.zhanghai.android.materialprogressbar.R$styleable: int CoordinatorLayout_keylines
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_showAsAction
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.google.firebase.auth.internal.zzbb: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int searchIcon
me.zhanghai.android.materialprogressbar.R$attr: int lastBaselineToBottomHeight
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String MODULE_NAME
me.zhanghai.android.materialprogressbar.R$dimen: int compat_button_padding_vertical_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableBottom
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dropdownitem_text_padding_right
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzf
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_fontVariationSettings
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzgi zza
com.google.android.gms.internal.firebase-auth-api.zzmg: com.google.android.gms.internal.firebase-auth-api.zzma zze
me.zhanghai.android.materialprogressbar.R$styleable: int ViewBackgroundHelper_android_background
com.google.android.gms.internal.firebase-auth-api.zzabc: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasSecondaryProgressTint
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.google.android.gms.internal.firebase-auth-api.zzkr: int zzd
me.zhanghai.android.materialprogressbar.R$attr: int alertDialogStyle
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MAX_POINTERS
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
me.zhanghai.android.materialprogressbar.R$attr: int subtitleTextStyle
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_background_transition_holo_dark
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderAuthority
me.zhanghai.android.materialprogressbar.R$attr: int actionModeCloseButtonStyle
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_title
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_y_offset_touch
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_CompoundButton_RadioButton
me.zhanghai.android.materialprogressbar.R$dimen: int abc_button_inset_vertical_material
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressBackgroundTint
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: int LEVEL_MAX
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_material_dark
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleTextAppearance
me.zhanghai.android.materialprogressbar.R$attr: int popupMenuStyle
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken mForceResendingToken
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_END: android.graphics.Path PATH_TRIM_PATH_END
me.zhanghai.android.materialprogressbar.R$id: int select_dialog_listview
com.google.android.gms.internal.measurement.zzff: int zzd
com.swmansion.reanimated.nodes.Node: int mNodeID
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_default
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperToolbarTitle
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_lStar
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_elevation_material
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mCheckedConstantSize
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzj
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listMenuViewStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_viewInflaterClass
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mEnterFadeDuration
me.zhanghai.android.materialprogressbar.R$attr: int actionButtonStyle
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_END
me.zhanghai.android.materialprogressbar.R$attr: int iconTintMode
com.google.android.gms.internal.firebase-auth-api.zzoa: java.lang.String zzh
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.google.android.gms.internal.measurement.zzgd: long zzV
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasProgressTint
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_barLength
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.util.HashMap mAuthListeners
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_collapseContentDescription
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Body1
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_go_search_api_material
me.zhanghai.android.materialprogressbar.R$attr: int showTitle
me.zhanghai.android.materialprogressbar.R$attr: int layout
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.google.android.gms.internal.firebase-auth-api.zzow: com.google.android.gms.internal.firebase-auth-api.zznx zze
com.google.android.gms.internal.measurement.zzei: boolean zzh
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.swmansion.reanimated.NativeProxy$EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureSoftExceptions
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
me.zhanghai.android.materialprogressbar.R$attr: int backgroundTint
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetLeft
me.zhanghai.android.materialprogressbar.R$attr: int titleTextStyle
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_customNavigationLayout
com.google.android.gms.internal.firebase-auth-api.zzkc: com.google.android.gms.internal.firebase-auth-api.zzki zze
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DIST
com.google.android.gms.internal.measurement.zzek: boolean zzh
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkl zze
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_default_padding_start_material
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetStart
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_mode_close_item_material
com.google.android.gms.internal.measurement.zzfx: float zzh
me.zhanghai.android.materialprogressbar.R$dimen: int notification_large_icon_width
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
me.zhanghai.android.materialprogressbar.R$attr: int backgroundTintMode
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int titleMarginStart
com.swmansion.reanimated.CopiedEvent$1: com.swmansion.reanimated.CopiedEvent this$0
me.zhanghai.android.materialprogressbar.MaterialProgressBar: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$attr: int navigationMode
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
me.zhanghai.android.materialprogressbar.R$id: int action_mode_bar
me.zhanghai.android.materialprogressbar.R$styleable: int[] Toolbar
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_android_inputType
me.zhanghai.android.materialprogressbar.R$styleable: int[] GradientColor
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
me.zhanghai.android.materialprogressbar.R$attr: int homeAsUpIndicator
me.zhanghai.android.materialprogressbar.R$dimen: int abc_edit_text_inset_bottom_material
me.zhanghai.android.materialprogressbar.R$dimen: int abc_disabled_alpha_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarItemBackground
com.google.android.gms.internal.firebase-auth-api.zzkr: com.google.android.gms.internal.firebase-auth-api.zzkr zzb
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionButton
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.String mName
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.google.android.gms.internal.measurement.zzet: boolean zzh
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Large
me.zhanghai.android.materialprogressbar.R$styleable: int[] CompoundButton
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
me.zhanghai.android.materialprogressbar.R$attr: int closeIcon
me.zhanghai.android.materialprogressbar.R$attr: int dialogTheme
me.zhanghai.android.materialprogressbar.R$attr: int preserveIconSpacing
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$attr: int layout_dodgeInsetEdges
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.facebook.react.modules.intent.IntentModule: java.lang.String EXTRA_MAP_KEY_FOR_VALUE
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_share_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_VERTICAL
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_lineHeight
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.google.android.gms.internal.firebase-auth-api.zzon: com.google.android.gms.internal.firebase-auth-api.zzon zzb
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_itemPadding
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorPrimaryDark
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableStart
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatSeekBar_tickMarkTint
me.zhanghai.android.materialprogressbar.R$dimen: int notification_small_icon_size_as_large
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat
com.google.android.gms.internal.firebase-auth-api.zzph: com.google.android.gms.internal.firebase-auth-api.zzph zzb
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.facebook.react.animated.EventAnimationDriver: int mViewTag
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderQuery
me.zhanghai.android.materialprogressbar.R$attr: int autoSizeTextType
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mCanConstantState
com.reactnative.ivpusic.imagepicker.PickerModule: boolean enableRotationGesture
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String REACT_CLASS
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int parentPanel
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatSeekBar_android_thumb
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
me.zhanghai.android.materialprogressbar.R$dimen: int abc_disabled_alpha_material_dark
com.facebook.react.turbomodule.core.TurboModulePerfLogger: boolean sIsSoLibraryLoaded
com.google.android.gms.internal.firebase-auth-api.zzkf: com.google.android.gms.internal.firebase-auth-api.zzki zzd
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Spinner
me.zhanghai.android.materialprogressbar.R$attr: int initialActivityCount
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.graphics.PorterDuff$Mode mProgressTintMode
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_displayOptions
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_button_min_width_material
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
me.zhanghai.android.materialprogressbar.R$attr: int displayOptions
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetEnd
me.zhanghai.android.materialprogressbar.R$id: int tag_transition_group
me.zhanghai.android.materialprogressbar.R$attr: int colorBackgroundFloating
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_DarkActionBar
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$attr: int titleMargins
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_query
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_overflow_padding_start_material
com.google.android.gms.internal.measurement.zzfz: java.lang.String zze
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_precise_anchor_threshold
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.reactnative.ivpusic.imagepicker.PickerModule: boolean cropperCircleOverlay
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_AutoCompleteTextView
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_enabled
me.zhanghai.android.materialprogressbar.R$attr: int colorError
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
me.zhanghai.android.materialprogressbar.R$styleable: int StateListDrawable_android_enterFadeDuration
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String mediaType
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dropDownListViewStyle
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemHeightSmall
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Headline
me.zhanghai.android.materialprogressbar.R$color: int secondary_text_default_material_light
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
me.zhanghai.android.materialprogressbar.R$color: int material_grey_600
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_android_color
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_Borderless
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: float mRotation
me.zhanghai.android.materialprogressbar.R$string: int abc_capital_on
com.reactnativecommunity.picker.ReactPickerManager: int BLUR_PICKER
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
me.zhanghai.android.materialprogressbar.R$attr: int listPopupWindowStyle
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
me.zhanghai.android.materialprogressbar.R$layout: int abc_dialog_title_material
me.zhanghai.android.materialprogressbar.R$styleable: int ColorStateListItem_android_alpha
me.zhanghai.android.materialprogressbar.R$drawable: int abc_tab_indicator_material
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_preserveIconSpacing
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.graphics.PorterDuff$Mode mProgressBackgroundTintMode
com.google.android.gms.internal.measurement.zzfv: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.google.android.gms.internal.firebase-auth-api.zzaay: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.google.android.gms.internal.firebase-auth-api.zzot: com.google.android.gms.internal.firebase-auth-api.zzow zze
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.facebook.react.uimanager.ViewManager: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
me.zhanghai.android.materialprogressbar.R$attr: int statusBarBackground
com.google.firebase.auth.internal.zzt: android.os.Parcelable$Creator CREATOR
com.facebook.react.turbomodule.core.TurboModuleManager: java.lang.Object mTurboModuleCleanupLock
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_android_prompt
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzf
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.List roots
me.zhanghai.android.materialprogressbar.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_START
me.zhanghai.android.materialprogressbar.R$dimen: int abc_seekbar_track_background_height_material
com.google.android.gms.internal.firebase-auth-api.zzss: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$anim: int abc_grow_fade_in_from_bottom
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int editTextColor
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.oblador.vectoricons.VectorIconsModule: java.util.Map sTypefaceCache
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderCerts
com.google.android.gms.auth.api.credentials.Credential: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricPendingEventQueue
me.zhanghai.android.materialprogressbar.R$string: int abc_menu_meta_shortcut_label
com.google.android.gms.internal.measurement.zzgd: long zzw
com.google.android.gms.internal.measurement.zzgd: boolean zzab
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
me.zhanghai.android.materialprogressbar.R$id: int listMode
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzi
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_DIST
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_android_textOff
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_secondaryProgressTintMode
me.zhanghai.android.materialprogressbar.R$style: int Base_Animation_AppCompat_DropDownUp
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
me.zhanghai.android.materialprogressbar.R$attr: int titleTextColor
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int abc_config_prefDialogWidth
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionMode
com.google.android.gms.internal.measurement.zzer: java.lang.String zzi
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_toolbarStyle
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionBar_TabView
com.google.android.gms.internal.measurement.zzgg: int zzd
com.google.android.gms.internal.firebase-auth-api.zzzt: android.os.Parcelable$Creator CREATOR
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_focused_holo
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listDividerAlertDialog
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzfx zza
me.zhanghai.android.materialprogressbar.R$styleable: int[] FontFamilyFont
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String NAME
com.google.android.gms.internal.firebase-auth-api.zzmt: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.google.android.gms.internal.measurement.zzfn: java.lang.String zze
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_fontVariationSettings
me.zhanghai.android.materialprogressbar.R$attr: int tooltipForegroundColor
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Display3
me.zhanghai.android.materialprogressbar.R$drawable: int abc_seekbar_thumb_material
me.zhanghai.android.materialprogressbar.R$color: int ripple_material_dark
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_disabled_material_dark
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_popupWindowStyle
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
me.zhanghai.android.materialprogressbar.R$id: int right_icon
me.zhanghai.android.materialprogressbar.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
com.google.android.gms.internal.measurement.zzfb: boolean zzg
me.zhanghai.android.materialprogressbar.R$string: int abc_search_hint
com.google.android.gms.internal.firebase-auth-api.zzte: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int iconifiedByDefault
me.zhanghai.android.materialprogressbar.R$attr: int actionBarTabBarStyle
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DialogWhenLarge
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
me.zhanghai.android.materialprogressbar.R$attr: int listMenuViewStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Toolbar
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_PERF_LOGS
me.zhanghai.android.materialprogressbar.R$attr: int arrowHeadLength
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_default_mtrl_shape
me.zhanghai.android.materialprogressbar.R$color: int abc_primary_text_material_dark
com.swmansion.reanimated.ReanimatedModule: java.util.ArrayList mOperations
com.google.android.gms.internal.firebase-auth-api.zzlp: com.google.android.gms.internal.firebase-auth-api.zzlp zzb
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_switch_track
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
me.zhanghai.android.materialprogressbar.R$style: int Platform_V21_AppCompat_Light
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mConstantWidth
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$attr: int commitIcon
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Subhead
com.google.android.gms.internal.measurement.zzfh: int zzd
com.google.android.gms.internal.firebase-auth-api.zzlj: com.google.android.gms.internal.firebase-auth-api.zzlj zzb
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_material_light
com.google.android.gms.internal.measurement.zzfj: java.lang.String zzf
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Headline
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
me.zhanghai.android.materialprogressbar.R$attr: int mpb_indeterminateTintMode
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_display_3_material
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int PADDED_INTRINSIC_SIZE_DP
com.google.android.gms.internal.firebase-auth-api.zzok: com.google.android.gms.internal.firebase-auth-api.zzok zzb
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
com.google.android.gms.internal.firebase-auth-api.zzrm: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_seekBarStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Menu
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mAccessibilityServiceEnabled
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.google.android.gms.internal.measurement.zzgd: long zzx
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionMenuTextAppearance
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Dark
com.google.android.gms.internal.measurement.zzgd: int zzK
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_android_imeOptions
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_panelBackground
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
me.zhanghai.android.materialprogressbar.R$layout: int abc_select_dialog_material
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderFetchTimeout
com.google.android.gms.internal.firebase-auth-api.zzsu: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Medium
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceListItemSecondary
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_disabled_material_dark
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.android.gms.internal.firebase-auth-api.zzmd: com.google.android.gms.internal.firebase-auth-api.zzmd zzb
com.google.android.gms.internal.firebase-auth-api.zzlm: com.google.android.gms.internal.firebase-auth-api.zzlm zzb
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderQuery
com.facebook.react.turbomodule.core.TurboModuleManager: boolean mTurboModuleCleanupStarted
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Display1
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: int LEVEL_MAX
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
me.zhanghai.android.materialprogressbar.R$color: int highlighted_text_material_dark
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_centerColor
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
me.zhanghai.android.materialprogressbar.R$attr: int fontWeight
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_END
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: java.lang.reflect.Field sValueAnimatorSDurationScaleField
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetRight
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableTintMode
me.zhanghai.android.materialprogressbar.R$attr: int colorControlHighlight
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: long mEnterAnimationEnd
com.google.android.gms.internal.measurement.zzfx: int zzd
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$attr: int windowFixedWidthMinor
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$drawable: int abc_edit_text_material
me.zhanghai.android.materialprogressbar.R$styleable: int CompoundButton_buttonTint
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
me.zhanghai.android.materialprogressbar.R$id: int group_divider
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzfp zza
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Switch
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_alertDialogTheme
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_headerBackground
me.zhanghai.android.materialprogressbar.R$styleable: int View_android_theme
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.ResultCollector resultCollector
com.google.android.gms.measurement.internal.zzaw: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int progress_horizontal
com.google.android.gms.internal.measurement.zzfd: int zzd
com.firebase.ui.auth.data.model.User: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: android.graphics.drawable.Drawable mCurrDrawable
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.google.android.gms.internal.firebase-auth-api.zzjz: com.google.android.gms.internal.firebase-auth-api.zzjz zzb
me.zhanghai.android.materialprogressbar.R$styleable: int CoordinatorLayout_Layout_layout_keyline
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_menu
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionMode
me.zhanghai.android.materialprogressbar.R$id: int search_go_btn
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_padding_material
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
com.google.android.gms.internal.measurement.zzgd: int zza
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.google.android.gms.internal.firebase-auth-api.zzjq: com.google.android.gms.internal.firebase-auth-api.zzjq zzb
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: boolean sValueAnimatorSDurationScaleFieldInitialized
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_homeAsUpIndicator
com.google.android.gms.internal.firebase-auth-api.zzoe: int zzg
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_FAILED_TO_OPEN_CAMERA
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.RectF RECT_PROGRESS
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzey zza
com.google.android.gms.internal.firebase-auth-api.zzlu: com.google.android.gms.internal.firebase-auth-api.zzlu zzb
com.google.android.gms.internal.firebase-auth-api.zzadf: int zzd
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.util.HashMap mIdTokenListeners
me.zhanghai.android.materialprogressbar.R$id: int action_bar_spinner
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable mProgressDrawable
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Medium
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int mRecommendedTimeout
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.animated.EventAnimationDriver: java.lang.String mEventName
me.zhanghai.android.materialprogressbar.R$dimen: int abc_control_padding_material
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int DETERMINATE_CIRCULAR_PROGRESS_STYLE_DYNAMIC
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_PopupMenu
com.facebook.react.uimanager.events.ReactEventEmitter: boolean $assertionsDisabled
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_popupMenuStyle
me.zhanghai.android.materialprogressbar.R$color: int secondary_text_disabled_material_light
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_endColor
com.google.android.gms.internal.measurement.zzfj: int zzd
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_content_inset_material
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
com.google.android.gms.internal.firebase-auth-api.zzoj: int zze
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_queryBackground
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$attr: int switchPadding
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zzla: int zzd
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
me.zhanghai.android.materialprogressbar.R$attr: int popupWindowStyle
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
me.zhanghai.android.materialprogressbar.R$id: int left
me.zhanghai.android.materialprogressbar.MaterialProgressBar: boolean mSuperInitialized
me.zhanghai.android.materialprogressbar.R$styleable: int[] AnimatedStateListDrawableTransition
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_display_2_material
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_closeItemLayout
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Display4
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.facebook.react.config.ReactFeatureFlags: boolean enableEarlyScheduledMountItemExecution
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzE
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_Borderless
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatSeekBar_tickMark
me.zhanghai.android.materialprogressbar.R$color: int primary_text_default_material_dark
com.google.android.gms.internal.measurement.zzft: java.lang.String zzf
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
me.zhanghai.android.materialprogressbar.R$style: int Animation_AppCompat_DropDownUp
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: int mPaddedIntrinsicSize
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: android.graphics.RectF RECT_BOUND
com.google.android.gms.common.internal.safeparcel.SafeParcelable: java.lang.String NULL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
me.zhanghai.android.materialprogressbar.R$attr: int dividerPadding
com.google.android.gms.internal.firebase-auth-api.zztc: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mDensity
me.zhanghai.android.materialprogressbar.R$layout: int notification_action_tombstone
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatImageView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Subhead
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_content_inset_with_nav
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzv
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND
com.google.android.gms.internal.firebase-auth-api.zzne: com.google.android.gms.internal.firebase-auth-api.zznh zzd
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
me.zhanghai.android.materialprogressbar.R$attr: int overlapAnchor
me.zhanghai.android.materialprogressbar.R$dimen: int abc_search_view_preferred_height
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_stacked_tab_max_width
com.facebook.react.bridge.Inspector$Page: int mId
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
me.zhanghai.android.materialprogressbar.R$dimen: int notification_top_pad
me.zhanghai.android.materialprogressbar.R$layout: int abc_screen_toolbar
me.zhanghai.android.materialprogressbar.R$id: int src_in
com.google.android.gms.internal.measurement.zzer: boolean zzf
me.zhanghai.android.materialprogressbar.R$color: int notification_icon_bg_color
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperActiveWidgetColor
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_PICKER_CANCELLED_MSG
me.zhanghai.android.materialprogressbar.R$drawable: int abc_spinner_textfield_background_material
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_secondaryProgressTint
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean mMutated
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
com.google.android.gms.internal.measurement.zzgr: int zzd
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
me.zhanghai.android.materialprogressbar.R$attr: int actionOverflowButtonStyle
me.zhanghai.android.materialprogressbar.R$attr: int windowActionBar
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_SearchResult
me.zhanghai.android.materialprogressbar.R$attr: int alertDialogCenterButtons
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.google.android.gms.internal.firebase-auth-api.zzof: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_titleCondensed
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_check_material
me.zhanghai.android.materialprogressbar.R$dimen: int compat_control_corner_material
me.zhanghai.android.materialprogressbar.R$attr: int splitTrack
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_maxButtonHeight
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.RectF RECT_PROGRESS
me.zhanghai.android.materialprogressbar.R$style: int Platform_ThemeOverlay_AppCompat
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
me.zhanghai.android.materialprogressbar.R$style: int Base_V26_Theme_AppCompat
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.google.android.gms.auth.api.credentials.IdToken: android.os.Parcelable$Creator CREATOR
com.facebook.react.turbomodule.core.TurboModulePerfLogger: com.facebook.react.perflogger.NativeModulePerfLogger sNativeModulePerfLogger
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_btn_checkable
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkk zzT
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg_normal_pressed
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ratingbar_material
com.google.android.gms.internal.measurement.zzey: boolean zzg
me.zhanghai.android.materialprogressbar.R$attr: int controlBackground
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_RatingBar_Small
com.google.android.gms.internal.firebase-auth-api.zznh: int zzf
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean sIsSoLibraryLoaded
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
me.zhanghai.android.materialprogressbar.R$attr: int titleMarginEnd
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerInteractionManager interactionManager
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.google.android.gms.internal.firebase-auth-api.zzla: com.google.android.gms.internal.firebase-auth-api.zzacc zze
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
me.zhanghai.android.materialprogressbar.R$style: int Base_Animation_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_type
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_searchViewStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_clear_material
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_X
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode
com.google.android.gms.internal.firebase-auth-api.zzki: com.google.android.gms.internal.firebase-auth-api.zzki zzb
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.google.android.gms.internal.measurement.zzft: long zzg
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X: android.view.animation.Interpolator INSTANCE
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MIN_DURATION_MS
com.google.android.gms.internal.firebase-auth-api.zzsq: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_title
me.zhanghai.android.materialprogressbar.R$dimen: int abc_select_dialog_padding_start_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
me.zhanghai.android.materialprogressbar.R$id: int scrollIndicatorDown
com.google.android.gms.internal.firebase-auth-api.zzmj: int zze
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionButtonStyle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_list_padding_top_no_title
me.zhanghai.android.materialprogressbar.R$id: int end
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: float SWEEP_ANGLE_MAX
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_android_textAppearance
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzfb zza
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.google.android.gms.safetynet.zzf: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int mpb_setBothDrawables
com.google.android.gms.internal.firebase-auth-api.zzmw: int zzf
me.zhanghai.android.materialprogressbar.R$attr: int gapBetweenBars
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
com.google.android.gms.internal.measurement.zzkf: int zzd
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String REJECTION_CODE
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
com.facebook.react.config.ReactFeatureFlags: boolean calculateTransformedFramesEnabled
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetEndWithActions
com.google.android.gms.internal.firebase-auth-api.zzoq: com.google.android.gms.internal.firebase-auth-api.zzoq zzb
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
com.google.android.gms.internal.firebase-auth-api.zzns: com.google.android.gms.internal.firebase-auth-api.zzns zzb
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.zzac: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
com.google.android.gms.internal.firebase-auth-api.zzrs: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzzp: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int right_side
com.swmansion.reanimated.ReanimatedModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_buttonPanelSideLayout
me.zhanghai.android.materialprogressbar.R$attr: int switchTextAppearance
me.zhanghai.android.materialprogressbar.R$style: int AlertDialog_AppCompat
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzkm zzj
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int compat_button_inset_vertical_material
me.zhanghai.android.materialprogressbar.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_gradientRadius
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_SearchView_ActionBar
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_button_min_height_material
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
me.zhanghai.android.materialprogressbar.R$attr: int actionModeFindDrawable
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
com.google.android.gms.internal.measurement.zzem: boolean zzg
me.zhanghai.android.materialprogressbar.R$color: int background_floating_material_dark
me.zhanghai.android.materialprogressbar.R$attr: int allowStacking
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_display_4_material
com.google.android.gms.safetynet.zzd: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
me.zhanghai.android.materialprogressbar.R$style: int Base_V23_Theme_AppCompat
com.google.android.gms.internal.firebase-auth-api.zznx: java.lang.String zzd
me.zhanghai.android.materialprogressbar.R$color: int error_color_material_light
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Large
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Title_Inverse
me.zhanghai.android.materialprogressbar.R$id: int top
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_LIBRARY_DIRECTORY
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionMenuView
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_homeAsUpIndicator
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_normal_material_dark
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mConstantMinimumWidth
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable mSecondaryProgressDrawable
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_ratingBarStyle
com.google.firebase.auth.ActionCodeSettings: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_contentInsetLeft
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.google.firebase.auth.TwitterAuthCredential: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int textColorAlertDialogListItem
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_FIELDS
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: float START_ANGLE_MAX_NORMAL
com.google.android.gms.internal.measurement.zzff: boolean zzl
me.zhanghai.android.materialprogressbar.R$attr: int submitBackground
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback mBlockInvalidateCallback
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableLeftCompat
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_editTextStyle
com.google.android.gms.internal.firebase-auth-api.zzok: com.google.android.gms.internal.firebase-auth-api.zzadk zze
com.google.android.gms.internal.firebase-auth-api.zznn: com.google.android.gms.internal.firebase-auth-api.zznh zze
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgd zzd
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarTheme
me.zhanghai.android.materialprogressbar.BaseDrawable: android.content.res.ColorStateList mTintList
me.zhanghai.android.materialprogressbar.R$anim: int abc_slide_in_bottom
com.google.android.gms.internal.firebase-auth-api.zzoq: java.lang.String zzd
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzo
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressBackgroundTintMode
com.google.android.gms.internal.firebase-auth-api.zzma: int zzf
me.zhanghai.android.materialprogressbar.R$string: int abc_menu_delete_shortcut_label
me.zhanghai.android.materialprogressbar.R$color: int abc_search_url_text
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_alphabeticModifiers
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_title_material_toolbar
com.facebook.react.modules.core.TimingModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$color: int material_blue_grey_900
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.google.android.gms.internal.firebase-auth-api.zzjn: int zzd
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
me.zhanghai.android.materialprogressbar.R$attr: int titleMarginTop
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_searchHintIcon
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzkm zzf
com.google.android.gms.internal.firebase-auth-api.zznn: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int PopupWindow_overlapAnchor
me.zhanghai.android.materialprogressbar.R$attr: int titleTextAppearance
me.zhanghai.android.materialprogressbar.R$anim: int abc_fade_in
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.google.android.gms.internal.firebase-auth-api.zzmo: com.google.android.gms.internal.firebase-auth-api.zzacc zzd
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
me.zhanghai.android.materialprogressbar.R$attr: int windowActionBarOverlay
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
me.zhanghai.android.materialprogressbar.R$dimen: int abc_control_corner_material
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.facebook.react.uimanager.UIManagerModule: int mBatchId
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_menu_header_material
me.zhanghai.android.materialprogressbar.R$id: int expand_activities_button
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Large
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textColorLink
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_endX
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionButton
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
me.zhanghai.android.materialprogressbar.R$drawable: int tooltip_frame_dark
me.zhanghai.android.materialprogressbar.R$id: int notification_background
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.google.android.gms.internal.measurement.zzek: boolean zzk
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_button_min_width_overflow_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Spinner
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String moduleName
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzA
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
com.google.android.gms.internal.measurement.zzet: boolean zzi
com.google.android.gms.internal.firebase-auth-api.zzsg: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$attr: int windowMinWidthMinor
com.google.android.gms.internal.firebase-auth-api.zznx: int zzf
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceLargePopupMenu
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
me.zhanghai.android.materialprogressbar.R$styleable: int[] MaterialProgressBar
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_fontFamily
me.zhanghai.android.materialprogressbar.R$color: int abc_secondary_text_material_dark
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELAY_MS
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Toolbar
me.zhanghai.android.materialprogressbar.BuildConfig: java.lang.String BUILD_TYPE
me.zhanghai.android.materialprogressbar.R$string: int abc_action_menu_overflow_description
me.zhanghai.android.materialprogressbar.R$attr: int tickMarkTint
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Button
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_drawableTop
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Spinner_Underlined
me.zhanghai.android.materialprogressbar.R$color: int material_grey_50
com.google.android.gms.internal.measurement.zzff: java.lang.String zzo
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.google.android.gms.internal.measurement.zzgd: long zzm
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgt zza
me.zhanghai.android.materialprogressbar.R$id: int right
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_PICS_DIRECTORY
me.zhanghai.android.materialprogressbar.R$styleable: int[] CoordinatorLayout
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatSeekBar_tickMarkTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_title
me.zhanghai.android.materialprogressbar.R$string: int abc_menu_ctrl_shortcut_label
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int PROGRESS_STYLE_CIRCULAR
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceListItemSmall
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_fontVariationSettings
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetRight
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzkm zzf
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_borderless_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HORIZONTAL
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
me.zhanghai.android.materialprogressbar.BaseProgressDrawable: boolean mUseIntrinsicPadding
me.zhanghai.android.materialprogressbar.R$attr: int dividerVertical
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.lang.String mVerificationId
me.zhanghai.android.materialprogressbar.R$anim: int abc_popup_exit
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.uimanager.UIManagerModule: int mNumRootViews
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
me.zhanghai.android.materialprogressbar.R$attr: int editTextBackground
me.zhanghai.android.materialprogressbar.R$attr: int showDividers
me.zhanghai.android.materialprogressbar.R$layout: int abc_alert_dialog_material
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
me.zhanghai.android.materialprogressbar.R$color: int primary_dark_material_light
com.google.android.gms.internal.firebase-auth-api.zzkl: int zzd
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgy: int zzd
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
me.zhanghai.android.materialprogressbar.R$attr: int searchHintIcon
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_subtitleTextAppearance
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
me.zhanghai.android.materialprogressbar.R$attr: int colorAccent
me.zhanghai.android.materialprogressbar.R$attr: int layout_anchor
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: android.graphics.drawable.Drawable mLastDrawable
me.zhanghai.android.materialprogressbar.R$id: int activity_chooser_view_content
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemPaddingLeft
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_drawableSize
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
me.zhanghai.android.materialprogressbar.R$styleable: int CompoundButton_buttonTintMode
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
me.zhanghai.android.materialprogressbar.R$id: int tabMode
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: boolean mShow
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_logoDescription
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_horizontal_padding
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_TOP
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
me.zhanghai.android.materialprogressbar.R$color: int tooltip_background_dark
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean mHasAlpha
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasIndeterminateTint
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
me.zhanghai.android.materialprogressbar.R$id: int action_menu_presenter
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
me.zhanghai.android.materialprogressbar.R$id: int notification_main_column_container
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.google.android.gms.internal.firebase-auth-api.zzsw: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.google.firebase.auth.PhoneAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: int zzI
me.zhanghai.android.materialprogressbar.BaseDrawable: me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState mConstantState
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionBar
me.zhanghai.android.materialprogressbar.R$attr: int panelMenuListWidth
me.zhanghai.android.materialprogressbar.R$anim: int abc_tooltip_enter
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceSearchResultSubtitle
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_visible
me.zhanghai.android.materialprogressbar.R$attr: int layout_insetEdge
com.google.android.gms.internal.measurement.zzek: java.lang.String zzf
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$style: int Platform_Widget_AppCompat_Spinner
me.zhanghai.android.materialprogressbar.R$id: int action_text
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Small
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_android_thumb
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int mLastIndex
me.zhanghai.android.materialprogressbar.R$id: int src_atop
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizeMinTextSize
me.zhanghai.android.materialprogressbar.R$attr: int actionModeCloseDrawable
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context mContext
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mExceptionHandlerWrapper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Title
com.google.android.gms.internal.firebase-auth-api.zzlg: int zzd
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Button
me.zhanghai.android.materialprogressbar.R$attr: int viewInflaterClass
com.google.android.gms.internal.firebase-auth-api.zzsa: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
me.zhanghai.android.materialprogressbar.R$attr: int fontFamily
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_thumbTint
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
me.zhanghai.android.materialprogressbar.R$attr: int srcCompat
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
me.zhanghai.android.materialprogressbar.R$style: int Platform_V21_AppCompat
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActionMenuItemView
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_LIBRARY_PERMISSION_MSG
me.zhanghai.android.materialprogressbar.R$id: int textSpacerNoTitle
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.google.android.gms.internal.measurement.zzei: boolean zzi
me.zhanghai.android.materialprogressbar.R$style: int Platform_V25_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$attr: int hideOnContentScroll
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger mDevToolsReactPerfLogger
com.google.android.gms.internal.firebase-auth-api.zzld: com.google.android.gms.internal.firebase-auth-api.zzld zzb
com.reactnative.ivpusic.imagepicker.PickerModule: int CAMERA_PICKER_REQUEST
me.zhanghai.android.materialprogressbar.R$styleable: int StateListDrawable_android_constantSize
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_panelMenuListTheme
me.zhanghai.android.materialprogressbar.R$styleable: int RecycleListView_paddingTopNoTitle
me.zhanghai.android.materialprogressbar.R$attr: int actionModeSplitBackground
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_actionViewClass
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: android.graphics.RectF RECT_PROGRESS
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_font
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.reactnativecommunity.picker.ReactDropdownPickerManager: java.lang.String REACT_CLASS
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.lang.String TAG
com.google.android.gms.internal.measurement.zzkf: java.util.Map zza
com.google.android.gms.internal.firebase-auth-api.zznn: com.google.android.gms.internal.firebase-auth-api.zznn zzb
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_centerY
me.zhanghai.android.materialprogressbar.R$attr: int buttonStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModules
me.zhanghai.android.materialprogressbar.BuildConfig: java.lang.String APPLICATION_ID
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
me.zhanghai.android.materialprogressbar.R$attr: int actionBarTheme
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionMode
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_CompactMenu
com.google.android.gms.internal.firebase-auth-api.zzmt: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_logo
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_holo_dark
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
me.zhanghai.android.materialprogressbar.R$attr: int windowFixedHeightMinor
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionDropDownStyle
com.google.android.gms.internal.firebase-auth-api.zzmg: com.google.android.gms.internal.firebase-auth-api.zzmg zzb
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mConstantMinimumHeight
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: boolean mShowBackground
com.google.android.gms.internal.firebase-auth-api.zzjt: com.google.android.gms.internal.firebase-auth-api.zzjt zzb
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding mBinding
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzjn zzb
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.google.firebase.auth.EmailAuthCredential: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$color: int primary_material_light
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_RIGHT
me.zhanghai.android.materialprogressbar.R$attr: int dropDownListViewStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
me.zhanghai.android.materialprogressbar.R$styleable: int[] PopupWindow
me.zhanghai.android.materialprogressbar.R$style: int Base_AlertDialog_AppCompat
com.facebook.react.bridge.ReadableNativeMap$2: com.facebook.react.bridge.ReadableNativeMap this$0
me.zhanghai.android.materialprogressbar.R$layout: int abc_screen_simple
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_weightSum
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: long mExitAnimationEnd
me.zhanghai.android.materialprogressbar.R$styleable: int[] ButtonBarLayout
com.google.android.gms.internal.measurement.zzgd: boolean zzZ
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_shadowColor
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPopupWindowStyle
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_homeLayout
com.facebook.react.bridge.ReactBridge: boolean sDidInit
me.zhanghai.android.materialprogressbar.R$dimen: int disabled_alpha_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarTabStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
me.zhanghai.android.materialprogressbar.BuildConfig: int VERSION_CODE
me.zhanghai.android.materialprogressbar.R$id: int async
me.zhanghai.android.materialprogressbar.R$attr: int colorButtonNormal
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_buttonIconDimen
me.zhanghai.android.materialprogressbar.R$string: int abc_activity_chooser_view_see_all
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Button
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.google.firebase.auth.zze: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$integer: int status_bar_notification_info_maxnum
com.google.android.gms.internal.firebase-auth-api.zzaaj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.zzkw: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_overflow_padding_end_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_NoPadding
com.google.android.gms.internal.measurement.zzfd: int zzh
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarNegativeButtonStyle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
me.zhanghai.android.materialprogressbar.R$id: int search_button
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.Compression compression
com.google.android.gms.internal.firebase-auth-api.zzmt: com.google.android.gms.internal.firebase-auth-api.zzmt zzb
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_Dialog
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.google.android.gms.internal.measurement.zzey: int zzd
me.zhanghai.android.materialprogressbar.R$dimen: int notification_content_margin_start
me.zhanghai.android.materialprogressbar.R$styleable: int StateListDrawable_android_variablePadding
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
me.zhanghai.android.materialprogressbar.R$styleable: int[] LinearLayoutCompat_Layout
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_actionProviderClass
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$attr: int progressBarStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_PopupMenu
com.google.android.gms.internal.firebase-auth-api.zzns: int zzf
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_arrowShaftLength
me.zhanghai.android.materialprogressbar.R$dimen: int disabled_alpha_material_dark
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_SearchView
com.google.android.gms.internal.firebase-auth-api.zznx: com.google.android.gms.internal.firebase-auth-api.zznx zzb
com.google.android.gms.internal.measurement.zzfr: com.google.android.gms.internal.measurement.zzfr zza
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.gms.internal.firebase-auth-api.zztg: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzh
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
me.zhanghai.android.materialprogressbar.R$attr: int buttonIconDimen
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int PROGRESS_INTRINSIC_HEIGHT_DP
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_android_dropDownWidth
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzkm zze
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar_Solid
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Dialog_Alert
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_subtitleTextStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_contentDescription
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: float START_ANGLE_MAX_DYNAMIC
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
kotlinx.coroutines.DispatchedCoroutine: int _decision
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzq
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_selector_background_transition_holo_light
me.zhanghai.android.materialprogressbar.R$styleable: int PopupWindow_android_popupBackground
me.zhanghai.android.materialprogressbar.R$color: int material_grey_100
me.zhanghai.android.materialprogressbar.R$attr: int windowMinWidthMajor
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
me.zhanghai.android.materialprogressbar.R$attr: int selectableItemBackgroundBorderless
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: float mBackgroundAlpha
com.firebase.ui.auth.data.model.FlowParameters: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int subtitleTextAppearance
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_listLayout
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_background
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgg zzS
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_startColor
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int PADDED_INTRINSIC_HEIGHT_DP
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_id
com.swmansion.reanimated.nodes.EventNode: java.util.List mMapping
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mNumChildren
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorPrimary
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMargins
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.google.android.gms.internal.firebase-auth-api.zzoj: java.lang.String zzd
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.google.android.gms.internal.firebase-auth-api.zzrg: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_buttonGravity
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_thickness
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_y_offset_non_touch
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.facebook.react.bridge.RuntimeScheduler: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$attr: int logo
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Theme_AppCompat
com.google.android.gms.internal.measurement.zzer: int zze
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: int mStaticDrawableIndex
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DURATION_MS
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
me.zhanghai.android.materialprogressbar.R$string: int abc_menu_alt_shortcut_label
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$attr: int listChoiceBackgroundIndicator
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
me.zhanghai.android.materialprogressbar.R$string: int abc_menu_space_shortcut_label
me.zhanghai.android.materialprogressbar.R$id: int action_divider
me.zhanghai.android.materialprogressbar.R$layout: int abc_search_dropdown_item_icons_2line
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_Dialog
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfj: com.google.android.gms.internal.measurement.zzfj zza
me.zhanghai.android.materialprogressbar.R$string: int abc_menu_sym_shortcut_label
com.google.android.gms.internal.measurement.zzfv: com.google.android.gms.internal.measurement.zzfv zza
me.zhanghai.android.materialprogressbar.R$id: int list_item
com.google.android.gms.internal.measurement.zzgt: int zzd
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_android_verticalDivider
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
me.zhanghai.android.materialprogressbar.R$style: int Platform_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
me.zhanghai.android.materialprogressbar.R$integer: int config_tooltipAnimTime
me.zhanghai.android.materialprogressbar.R$color: int primary_text_disabled_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemHeight
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_TextView_SpinnerItem
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ratingbar_indicator_material
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzkm zzg
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Inverse
me.zhanghai.android.materialprogressbar.R$drawable: int abc_dialog_material_background
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_subtitle_top_margin_material
me.zhanghai.android.materialprogressbar.R$color: int material_grey_850
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.google.android.gms.internal.firebase-auth-api.zzow: com.google.android.gms.internal.firebase-auth-api.zzow zzb
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemHeightLarge
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
me.zhanghai.android.materialprogressbar.R$color: int material_blue_grey_800
me.zhanghai.android.materialprogressbar.R$string: int abc_action_bar_home_description
com.google.android.gms.internal.measurement.zzgd: int zzg
com.swmansion.reanimated.nodes.Node: java.util.Map mLastLoopID
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_thumbTextPadding
me.zhanghai.android.materialprogressbar.R$color: int abc_btn_colored_text_material
me.zhanghai.android.materialprogressbar.R$id: int image
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfn zzg
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_Theme_AppCompat_Dialog
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_fixed_height_minor
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarButtonStyle
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMenuItemView_android_minWidth
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.firebase.ui.auth.AuthUI$IdpConfig: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
me.zhanghai.android.materialprogressbar.R$anim: int abc_slide_in_top
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
me.zhanghai.android.materialprogressbar.R$id: int up
me.zhanghai.android.materialprogressbar.R$drawable: int abc_spinner_mtrl_am_alpha
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_END
me.zhanghai.android.materialprogressbar.R$dimen: int abc_button_inset_horizontal_material
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_CALLBACK_ERROR
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int abc_progress_bar_height_material
me.zhanghai.android.materialprogressbar.R$attr: int colorControlNormal
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderFetchStrategy
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzgg zza
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$1: me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat this$0
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_fixed_width_major
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperStatusBarColor
com.google.android.gms.internal.firebase-auth-api.zzoa: java.lang.String zze
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MAIN_BUNDLE
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
me.zhanghai.android.materialprogressbar.R$attr: int colorPrimary
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
me.zhanghai.android.materialprogressbar.R$styleable: int[] ListPopupWindow
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCloseContentDescription
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
me.zhanghai.android.materialprogressbar.R$attr: int borderlessButtonStyle
me.zhanghai.android.materialprogressbar.R$color: int accent_material_dark
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int contentInsetEndWithActions
com.google.firebase.auth.internal.zzz: android.os.Parcelable$Creator CREATOR
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int text2
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzR
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
com.swmansion.reanimated.NativeProxy$AnimationFrameCallback: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$styleable: int[] TextAppearance
me.zhanghai.android.materialprogressbar.R$drawable: int abc_seekbar_tick_mark_material
com.facebook.react.uimanager.UIManagerModule: int mViewManagerConstantsCacheSize
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceListItem
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: boolean mShow
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_height
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_fontFamily
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_splitTrack
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_checked
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND
com.google.android.gms.internal.firebase-auth-api.zzmz: com.google.android.gms.internal.firebase-auth-api.zzmz zzb
com.facebook.react.uimanager.ViewManager: int mRecyclableViewsBufferSize
me.zhanghai.android.materialprogressbar.R$id: int content
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MAX_DIST
com.google.android.gms.internal.firebase-auth-api.zzadf: com.google.android.gms.internal.firebase-auth-api.zzafo zzc
com.facebook.react.config.ReactFeatureFlags: boolean useOverflowInset
com.google.android.gms.internal.firebase-auth-api.zzlj: int zze
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressTint
me.zhanghai.android.materialprogressbar.R$attr: int tooltipFrameBackground
me.zhanghai.android.materialprogressbar.R$attr: int voiceIcon
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_MANUAL_ACTIVATION
me.zhanghai.android.materialprogressbar.R$attr: int paddingTopNoTitle
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.google.android.gms.internal.measurement.zzgd: boolean zzz
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$dimen: int abc_edit_text_inset_horizontal_material
me.zhanghai.android.materialprogressbar.R$styleable: int Spinner_popupTheme
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatTheme
me.zhanghai.android.materialprogressbar.R$drawable: int abc_cab_background_top_material
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_Dialog
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderAuthority
com.google.android.gms.auth.api.credentials.HintRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfh: com.google.android.gms.internal.measurement.zzfh zza
me.zhanghai.android.materialprogressbar.R$attr: int spinnerDropDownItemStyle
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND
com.google.android.gms.internal.measurement.zzfp: int zzd
com.facebook.react.modules.blob.BlobModule: java.lang.String NAME
com.google.android.gms.internal.firebase-auth-api.zzse: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarNeutralButtonStyle
me.zhanghai.android.materialprogressbar.R$layout: int abc_alert_dialog_button_bar_material
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
com.reactnative.ivpusic.imagepicker.PickerModule: android.net.Uri mCameraCaptureURI
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.google.android.gms.internal.firebase-auth-api.zzmg: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
me.zhanghai.android.materialprogressbar.R$attr: int trackTint
com.google.android.gms.internal.measurement.zzgd: long zzl
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_RatingBar
com.google.android.gms.internal.firebase-auth-api.zzow: java.lang.String zzd
me.zhanghai.android.materialprogressbar.R$id: int action_bar_subtitle
com.google.android.gms.internal.firebase-auth-api.zzon: int zzd
com.firebase.ui.auth.IdpResponse: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_title_material
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
me.zhanghai.android.materialprogressbar.R$string: int abc_shareactionprovider_share_with
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzkr zzd
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
me.zhanghai.android.materialprogressbar.R$attr: int actionBarTabStyle
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder customClientBuilder
com.facebook.react.views.slider.ReactSliderManager: int STYLE
com.google.android.gms.internal.measurement.zzfx: double zzi
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.util.HashMap emulatorConfigs
com.airbnb.android.react.lottie.LottieAnimationViewManager: int COMMAND_PAUSE
me.zhanghai.android.materialprogressbar.R$color: int material_grey_800
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_ENABLED
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.facebook.react.animated.NativeAnimatedModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_shadowDy
me.zhanghai.android.materialprogressbar.R$attr: int thumbTint
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int PADDED_INTRINSIC_HEIGHT_DP
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
me.zhanghai.android.materialprogressbar.R$drawable: int notification_tile_bg
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_multiChoiceItemLayout
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.google.android.gms.internal.firebase-auth-api.zzlm: com.google.android.gms.internal.firebase-auth-api.zzacc zze
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaa
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowMinWidthMinor
me.zhanghai.android.materialprogressbar.R$style: int Base_DialogWindowTitleBackground_AppCompat
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowNoTitle
me.zhanghai.android.materialprogressbar.R$attr: int indeterminateProgressStyle
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
com.google.android.gms.internal.firebase-auth-api.zzre: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$string: int abc_shareactionprovider_share_with_application
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X: android.view.animation.Interpolator INSTANCE
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
me.zhanghai.android.materialprogressbar.R$drawable: int abc_cab_background_top_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_android_maxWidth
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_subtitleTextStyle
me.zhanghai.android.materialprogressbar.R$attr: int multiChoiceItemLayout
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
me.zhanghai.android.materialprogressbar.R$layout: int abc_cascading_menu_item_layout
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: float mScaleX
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dialogPreferredPadding
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
me.zhanghai.android.materialprogressbar.R$attr: int actionModeStyle
com.facebook.react.config.ReactFeatureFlags: boolean enableAtomicRegisterSegment
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzkm zzf
me.zhanghai.android.materialprogressbar.R$layout: int abc_list_menu_item_checkbox
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mCheckedPadding
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
me.zhanghai.android.materialprogressbar.R$attr: int backgroundSplit
me.zhanghai.android.materialprogressbar.Interpolators$LINEAR: android.view.animation.Interpolator INSTANCE
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.google.android.gms.internal.firebase-auth-api.zzmw: com.google.android.gms.internal.firebase-auth-api.zzmw zzb
com.google.android.gms.internal.measurement.zzft: int zzi
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mHasTintList
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
me.zhanghai.android.materialprogressbar.R$string: int abc_menu_function_shortcut_label
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int mProgressIntrinsicHeight
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_switchPadding
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListPopupWindow
me.zhanghai.android.materialprogressbar.R$color: int abc_background_cache_hint_selector_material_light
me.zhanghai.android.materialprogressbar.R$attr: int navigationIcon
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String mCurrentMediaPath
me.zhanghai.android.materialprogressbar.R$dimen: int abc_list_item_padding_horizontal_material
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mHasColorFilter
me.zhanghai.android.materialprogressbar.R$styleable: int[] CoordinatorLayout_Layout
com.facebook.react.bridge.ReadableNativeMap$1$1: int val$index
com.google.android.gms.internal.measurement.zzet: boolean zzj
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_check_to_on_mtrl_000
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.google.android.gms.internal.measurement.zzgy: int zze
me.zhanghai.android.materialprogressbar.R$id: int line1
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_setBothDrawables
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textStyle
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_material_light
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
me.zhanghai.android.materialprogressbar.R$styleable: int MenuGroup_android_visible
me.zhanghai.android.materialprogressbar.R$drawable: int tooltip_frame_light
me.zhanghai.android.materialprogressbar.R$color: int foreground_material_light
me.zhanghai.android.materialprogressbar.R$drawable: int abc_cab_background_internal_bg
com.facebook.react.modules.dialog.DialogModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int action_mode_bar_stub
com.google.android.gms.internal.firebase-auth-api.zzso: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int custom
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzP
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_Theme_AppCompat
me.zhanghai.android.materialprogressbar.R$attr: int fontProviderCerts
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzh
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
me.zhanghai.android.materialprogressbar.R$attr: int buttonTintMode
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.facebook.react.fabric.FabricUIManager: boolean mShouldDeallocateEventDispatcher
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.google.android.gms.internal.firebase-auth-api.zzmw: int zze
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object mObject
com.reactcommunity.rndatetimepicker.TimePickerModule: java.lang.String NAME
com.facebook.react.turbomodule.core.TurboModuleManager: boolean sIsSoLibraryLoaded
com.google.android.gms.internal.firebase-auth-api.zzmt: com.google.android.gms.internal.firebase-auth-api.zzmz zze
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
me.zhanghai.android.materialprogressbar.R$color: int abc_search_url_text_selected
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.content.res.Resources mSourceRes
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListView
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_Dark
me.zhanghai.android.materialprogressbar.R$style: int Widget_Compat_NotificationActionText
me.zhanghai.android.materialprogressbar.R$color: int abc_hint_foreground_material_light
com.google.android.gms.internal.firebase-auth-api.zznx: com.google.android.gms.internal.firebase-auth-api.zzacc zze
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$attr: int background
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_endY
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mMutated
com.google.android.gms.internal.firebase-auth-api.zznh: int zzd
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXT_STORAGE_DIRECTORY
me.zhanghai.android.materialprogressbar.R$attr: int alertDialogButtonGroupStyle
me.zhanghai.android.materialprogressbar.R$layout: int abc_expanded_menu_layout
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.google.android.gms.internal.measurement.zzfb: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzra: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_emojiCompatEnabled
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ImageButton
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.google.android.gms.internal.firebase-auth-api.zzmj: com.google.android.gms.internal.firebase-auth-api.zzmj zzb
me.zhanghai.android.materialprogressbar.R$style: int Base_V28_Theme_AppCompat
me.zhanghai.android.materialprogressbar.R$attr: int tickMarkTintMode
com.google.android.gms.internal.measurement.zzgm: long zze
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState mAnimationScaleListState
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableStartCompat
me.zhanghai.android.materialprogressbar.R$id: int blocking
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_android_fontStyle
me.zhanghai.android.materialprogressbar.R$drawable: int abc_list_longpressed_holo
me.zhanghai.android.materialprogressbar.R$attr: int mpb_showProgressBackground
me.zhanghai.android.materialprogressbar.R$style: int Widget_Support_CoordinatorLayout
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Display3
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarStyle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dropdownitem_text_padding_left
me.zhanghai.android.materialprogressbar.R$id: int submenuarrow
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ImageButton
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_imageButtonStyle
me.zhanghai.android.materialprogressbar.R$style: int Platform_AppCompat
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
me.zhanghai.android.materialprogressbar.R$attr: int mpb_progressTint
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActivityChooserView
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModuleManagerCallbackCleanupScope
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_elevation
me.zhanghai.android.materialprogressbar.R$id: int horizontal
me.zhanghai.android.materialprogressbar.R$styleable: int[] SearchView
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Display2
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X: android.view.animation.Interpolator INSTANCE
me.zhanghai.android.materialprogressbar.R$color: int notification_action_color_filter
me.zhanghai.android.materialprogressbar.R$color: int bright_foreground_disabled_material_light
com.google.android.gms.internal.measurement.zzgy: double zzj
me.zhanghai.android.materialprogressbar.R$dimen: int notification_big_circle_margin
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMarginStart
me.zhanghai.android.materialprogressbar.R$id: int search_plate
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.google.android.gms.internal.measurement.zzek: int zze
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_selectableItemBackground
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.google.firebase.auth.internal.zzag: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzabm: int zza
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_track
me.zhanghai.android.materialprogressbar.R$attr: int paddingBottomNoButtons
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzW
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean DEFAULT_DITHER
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_SHOULD_CANCEL_WHEN_OUTSIDE
com.google.android.gms.internal.firebase-auth-api.zzsm: android.os.Parcelable$Creator CREATOR
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HEIGHT
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int mAlpha
me.zhanghai.android.materialprogressbar.R$anim: int abc_slide_out_top
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
me.zhanghai.android.materialprogressbar.R$id: int notification_main_column
com.google.android.gms.internal.firebase-auth-api.zzoj: int zzg
com.google.android.gms.internal.firebase-auth-api.zzkc: com.google.android.gms.internal.firebase-auth-api.zzkc zzb
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_activated_mtrl_alpha
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzu
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
me.zhanghai.android.materialprogressbar.R$attr: int buttonPanelSideLayout
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_precise_anchor_extra_offset
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
me.zhanghai.android.materialprogressbar.R$id: int screen
me.zhanghai.android.materialprogressbar.R$styleable: int ViewBackgroundHelper_backgroundTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_progressBarStyle
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_thumbTintMode
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.RectF RECT_BOUND
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
me.zhanghai.android.materialprogressbar.R$attr: int fontStyle
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_iconTintMode
me.zhanghai.android.materialprogressbar.R$id: int search_close_btn
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_SeekBar
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzt
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Large_Inverse
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int DETERMINATE_CIRCULAR_PROGRESS_STYLE_NORMAL
com.facebook.react.config.ReactFeatureFlags: boolean enableEagerRootViewAttachment
me.zhanghai.android.materialprogressbar.R$attr: int measureWithLargestChild
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Body2
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgd: int zzY
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX mRect1TransformX
me.zhanghai.android.materialprogressbar.R$id: int progress_circular
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$layout: int notification_template_icon_group
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasSecondaryProgressTintMode
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$id: int action_bar
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int PROGRESS_STYLE_HORIZONTAL
me.zhanghai.android.materialprogressbar.R$attr: int logoDescription
me.zhanghai.android.materialprogressbar.R$styleable: int ViewStubCompat_android_layout
com.google.android.gms.internal.measurement.zzgd: long zzB
me.zhanghai.android.materialprogressbar.R$attr: int windowFixedWidthMajor
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_orientation
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_divider
com.google.android.gms.internal.firebase-auth-api.zzmz: int zze
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Widget_AppCompat_EditText
com.google.firebase.auth.GoogleAuthCredential: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: float mTrimPathEnd
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActionBar
me.zhanghai.android.materialprogressbar.R$attr: int actionModePasteDrawable
com.google.android.gms.internal.firebase-auth-api.zzph: int zzd
me.zhanghai.android.materialprogressbar.R$attr: int buttonTint
me.zhanghai.android.materialprogressbar.R$string: int abc_searchview_description_submit
com.google.android.gms.internal.measurement.zzgm: int zzd
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarManager$Companion Companion
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Menu
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: android.graphics.Matrix mMatrix
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int mProgressStyle
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.google.android.gms.internal.measurement.zzgm: double zzj
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
me.zhanghai.android.materialprogressbar.R$styleable: int[] AppCompatTextView
me.zhanghai.android.materialprogressbar.R$styleable: int MenuView_subMenuArrow
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: int mAnimatableDrawableIndex
com.google.android.gms.internal.measurement.zzfr: int zzd
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
me.zhanghai.android.materialprogressbar.R$attr: int paddingEnd
me.zhanghai.android.materialprogressbar.R$attr: int autoSizeMaxTextSize
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_checkedTextViewStyle
me.zhanghai.android.materialprogressbar.R$attr: int mpb_secondaryProgressTintMode
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mLayoutDirection
com.google.android.gms.internal.measurement.zzft: int zzd
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
me.zhanghai.android.materialprogressbar.R$color: int dim_foreground_material_light
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaf
me.zhanghai.android.materialprogressbar.R$attr: int editTextStyle
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_bar_title_item
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorControlActivated
com.google.android.gms.internal.measurement.zzkc: com.google.android.gms.internal.measurement.zzjw zza
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowMinWidthMajor
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_android_windowIsFloating
com.google.android.gms.internal.firebase-auth-api.zzkl: com.google.android.gms.internal.firebase-auth-api.zzkr zze
me.zhanghai.android.materialprogressbar.R$id: int customPanel
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
me.zhanghai.android.materialprogressbar.R$attr: int actionBarSplitStyle
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_titleMargin
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
com.google.android.gms.internal.firebase-auth-api.zzadf: java.util.Map zzb
com.google.android.gms.internal.firebase-auth-api.zzjw: com.google.android.gms.internal.firebase-auth-api.zzjw zzb
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Spinner_Underlined
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.reactnative.ivpusic.imagepicker.PickerModule: boolean showCropFrame
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
me.zhanghai.android.materialprogressbar.R$id: int checkbox
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListMenuView
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizeStepGranularity
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_body_2_material
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter mRCTEventEmitter
me.zhanghai.android.materialprogressbar.R$attr: int contentDescription
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MOVIES_DIRECTORY
com.google.android.gms.internal.firebase-auth-api.zzaae: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int searchViewStyle
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzi
me.zhanghai.android.materialprogressbar.R$color: int material_grey_900
me.zhanghai.android.materialprogressbar.R$styleable: int[] Spinner
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ListView_Menu
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: boolean sValueAnimatorGetDurationScaleMethodInitialized
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzft zza
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT1_SCALE_X
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowFixedWidthMajor
me.zhanghai.android.materialprogressbar.R$attr: int font
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.PorterDuff$Mode mTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableItem_android_drawable
me.zhanghai.android.materialprogressbar.R$string: int search_menu_title
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int mPaddedIntrinsicSize
me.zhanghai.android.materialprogressbar.R$drawable: int notification_template_icon_low_bg
me.zhanghai.android.materialprogressbar.R$styleable: int ButtonBarLayout_allowStacking
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: android.graphics.Path mPath
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: boolean sIsSoLibraryLoaded
me.zhanghai.android.materialprogressbar.R$dimen: int notification_large_icon_height
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: int[] mThemeAttrs
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.ReadableMap options
me.zhanghai.android.materialprogressbar.R$id: int scrollIndicatorUp
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_material_dark
me.zhanghai.android.materialprogressbar.R$id: int action_container
com.google.android.gms.internal.measurement.zzfn: com.google.android.gms.internal.measurement.zzfn zza
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_Compat_Notification_Line2
me.zhanghai.android.materialprogressbar.R$styleable: int[] ColorStateListItem
com.google.android.gms.internal.firebase-auth-api.zzld: int zzd
com.google.android.gms.internal.measurement.zzey: int zze
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mCheckedStateful
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: int mProgressIntrinsicSize
com.google.android.gms.internal.firebase-auth-api.zznk: int zzd
me.zhanghai.android.materialprogressbar.R$attr: int showText
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkl zzd
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_title_divider_material
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
me.zhanghai.android.materialprogressbar.R$drawable: int abc_action_bar_item_background_material
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatImageView_tintMode
com.google.android.gms.internal.auth-api.zbp: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Horizontal
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzn
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_NUMBER_OF_TAPS
me.zhanghai.android.materialprogressbar.R$drawable: int notify_panel_notification_icon_bg
me.zhanghai.android.materialprogressbar.R$id: int titleDividerNoCustom
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_tooltipFrameBackground
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button
me.zhanghai.android.materialprogressbar.R$styleable: int ActivityChooserView_initialActivityCount
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ActivityChooserView
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_alertDialogStyle
me.zhanghai.android.materialprogressbar.R$dimen: int abc_floating_window_z
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_CompoundButton_Switch
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.reactnativecommunity.picker.ReactPickerManager: com.facebook.react.bridge.ReadableArray EMPTY_ARRAY
me.zhanghai.android.materialprogressbar.R$dimen: int notification_small_icon_background_padding
me.zhanghai.android.materialprogressbar.R$anim: int abc_popup_enter
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_caption_material
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NUMBER_OF_POINTERS
me.zhanghai.android.materialprogressbar.R$color: int accent_material_light
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_LIBRARY_PERMISSION_KEY
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_RatingBar
me.zhanghai.android.materialprogressbar.R$attr: int dividerHorizontal
me.zhanghai.android.materialprogressbar.R$id: int action_mode_close_button
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_tileMode
com.swmansion.reanimated.nodes.Node: com.swmansion.reanimated.UpdateContext mUpdateContext
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_panelMenuListWidth
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_windowActionBarOverlay
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_numericShortcut
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_centerX
me.zhanghai.android.materialprogressbar.R$dimen: int hint_alpha_material_dark
com.google.android.gms.internal.firebase-auth-api.zzzy: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzlg: com.google.android.gms.internal.firebase-auth-api.zzlg zzb
com.google.android.gms.internal.firebase-auth-api.zzzr: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_PopupWindow
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_DarkActionBar
me.zhanghai.android.materialprogressbar.R$layout: int abc_popup_menu_item_layout
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
me.zhanghai.android.materialprogressbar.R$anim: int abc_fade_out
me.zhanghai.android.materialprogressbar.R$id: int actions
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ActionButton_Overflow
com.google.android.gms.internal.firebase-auth-api.zzri: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.Animators: android.graphics.Path PATH_INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X
com.facebook.react.bridge.ReadableNativeMap$1$1: com.facebook.react.bridge.ReadableNativeMap$1 this$1
me.zhanghai.android.materialprogressbar.R$dimen: int hint_alpha_material_light
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_normal_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
com.google.android.gms.internal.firebase-auth-api.zzns: com.google.android.gms.internal.firebase-auth-api.zzacc zze
com.facebook.react.config.ReactFeatureFlags: boolean dispatchPointerEvents
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_contentInsetStart
me.zhanghai.android.materialprogressbar.R$attr: int autoSizePresetSizes
com.reactnative.ivpusic.imagepicker.PickerModule: boolean showCropGuidelines
me.zhanghai.android.materialprogressbar.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
com.google.android.gms.internal.measurement.zzfz: int zzd
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_radio_to_on_mtrl_015
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_navigationIcon
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_START
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_END: android.view.animation.Interpolator INSTANCE
com.facebook.react.uimanager.UIManagerModule: java.util.Map mViewManagerConstantsCache
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.google.android.gms.internal.firebase-auth-api.zzmj: int zzd
com.google.android.gms.internal.firebase-auth-api.zzoe: com.google.android.gms.internal.firebase-auth-api.zzns zzd
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
com.facebook.react.config.ReactFeatureFlags: boolean useMapBufferProps
me.zhanghai.android.materialprogressbar.R$style: int Base_V21_Theme_AppCompat_Light
me.zhanghai.android.materialprogressbar.R$attr: int toolbarNavigationButtonStyle
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_CAMERA_PERMISSION_KEY
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.content.res.ColorStateList mIndeterminateTint
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
com.google.android.gms.internal.measurement.zzgm: float zzi
com.google.android.gms.internal.measurement.zzgr: java.lang.String zze
com.google.android.gms.safetynet.SafeBrowsingData: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int[] ViewStubCompat
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_DOCUMENT_DIRECTORY
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActivityChooserView
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_menu_layout
me.zhanghai.android.materialprogressbar.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.google.android.gms.internal.measurement.zzgk: int zze
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_subtitle_material_toolbar
com.google.android.gms.internal.measurement.zzgk: int zzd
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_default_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$attr: int checkboxStyle
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
me.zhanghai.android.materialprogressbar.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeShareDrawable
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_textColor
me.zhanghai.android.materialprogressbar.R$id: int home
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean mShowBackground
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.PorterDuffColorFilter mTintFilter
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzff zza
com.google.android.gms.internal.firebase-auth-api.zzoj: com.google.android.gms.internal.firebase-auth-api.zzoj zzb
me.zhanghai.android.materialprogressbar.R$style: int ThemeOverlay_AppCompat_ActionBar
me.zhanghai.android.materialprogressbar.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
me.zhanghai.android.materialprogressbar.R$attr: int layout_keyline
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: boolean mHasIndeterminateTintMode
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
com.google.android.gms.internal.firebase-auth-api.zzpe: com.google.android.gms.internal.firebase-auth-api.zzpe zzb
com.google.android.gms.internal.measurement.zzfp: int zze
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_buttonBarStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY
me.zhanghai.android.materialprogressbar.R$style: int Animation_AppCompat_Tooltip
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
me.zhanghai.android.materialprogressbar.R$attr: int buttonBarPositiveButtonStyle
com.google.android.gms.internal.firebase-auth-api.zznn: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
me.zhanghai.android.materialprogressbar.R$styleable: int GradientColor_android_startY
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
me.zhanghai.android.materialprogressbar.R$color: int abc_btn_colored_borderless_text_material
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
me.zhanghai.android.materialprogressbar.R$drawable: int abc_vector_test
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_CAMERA_IS_NOT_AVAILABLE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_Small
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mPreOperations
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int PROGRESS_INTRINSIC_HEIGHT_DP
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.google.android.gms.internal.firebase-auth-api.zzmw: com.google.android.gms.internal.firebase-auth-api.zzmz zzd
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_voice_search_api_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ProgressBar
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzkm zze
me.zhanghai.android.materialprogressbar.R$integer: int cancel_button_image_alpha
me.zhanghai.android.materialprogressbar.R$dimen: int tooltip_corner_radius
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_spinnerStyle
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Dialog_MinWidth
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_tooltipText
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzO
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_editTextColor
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzjt zzf
com.reactnativecommunity.picker.ReactPickerManager: int FOCUS_PICKER
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.reactnative.ivpusic.imagepicker.PickerModule: boolean useFrontCamera
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_progressTintMode
com.google.android.gms.internal.firebase-auth-api.zzaac: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$dimen: int abc_search_view_preferred_width
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$eventListener$1 eventListener
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_START: android.view.animation.Interpolator INSTANCE
me.zhanghai.android.materialprogressbar.R$styleable: int StateListDrawableItem_android_drawable
com.google.android.gms.internal.firebase-auth-api.zzku: com.google.android.gms.internal.firebase-auth-api.zzku zzb
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamilyFont_fontWeight
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzh
me.zhanghai.android.materialprogressbar.R$attr: int barLength
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
me.zhanghai.android.materialprogressbar.R$id: int contentPanel
com.google.android.gms.internal.firebase-auth-api.zzrq: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_mode_bar
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzem: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.text.SimpleDateFormat ISO_8601_FORMATTER
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
me.zhanghai.android.materialprogressbar.R$color: int tooltip_background_light
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.google.android.gms.internal.firebase-auth-api.zzkx: com.google.android.gms.internal.firebase-auth-api.zzkx zzb
me.zhanghai.android.materialprogressbar.R$attr: int color
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dialogTheme
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
me.zhanghai.android.materialprogressbar.R$layout: int abc_action_menu_item_layout
me.zhanghai.android.materialprogressbar.R$color: int abc_secondary_text_material_light
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_medium_material
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_LOGS
me.zhanghai.android.materialprogressbar.R$layout: int support_simple_spinner_dropdown_item
me.zhanghai.android.materialprogressbar.R$styleable: int ActionMode_backgroundSplit
me.zhanghai.android.materialprogressbar.R$attr: int ratingBarStyleIndicator
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_EditText
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
me.zhanghai.android.materialprogressbar.R$attr: int actionModePopupWindowStyle
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Title
com.google.android.gms.internal.firebase-auth-api.zzry: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int thumbTintMode
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
me.zhanghai.android.materialprogressbar.R$color: int abc_tint_seek_thumb
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_onClick
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_alertDialogCenterButtons
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizeTextType
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
com.facebook.react.bridge.NativeModuleRegistry: java.lang.String TAG
com.google.android.gms.internal.firebase-auth-api.zzkc: int zzd
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.google.android.gms.internal.measurement.zzfz: java.lang.String zzf
me.zhanghai.android.materialprogressbar.R$color: int foreground_material_dark
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$color: int dim_foreground_disabled_material_dark
com.google.android.gms.internal.measurement.zzek: boolean zzl
me.zhanghai.android.materialprogressbar.R$color: int ripple_material_light
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
me.zhanghai.android.materialprogressbar.R$attr: int goIcon
me.zhanghai.android.materialprogressbar.R$id: int submit_area
me.zhanghai.android.materialprogressbar.R$attr: int height
me.zhanghai.android.materialprogressbar.R$dimen: int compat_notification_large_icon_max_width
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_actionLayout
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
me.zhanghai.android.materialprogressbar.R$id: int uniform
com.google.android.gms.internal.measurement.zzer: java.lang.String zzg
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzkm zzf
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_ListPopupWindow
me.zhanghai.android.materialprogressbar.R$attr: int homeLayout
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int mPaddedIntrinsicHeight
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.google.android.gms.internal.measurement.zzgy: boolean zzi
com.google.android.gms.internal.firebase-auth-api.zzoa: java.lang.String zzd
me.zhanghai.android.materialprogressbar.R$color: int abc_search_url_text_pressed
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.google.android.gms.internal.firebase-auth-api.zzkx: int zzd
me.zhanghai.android.materialprogressbar.R$attr: int subtitleTextColor
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionMenuTextColor
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: android.graphics.PorterDuff$Mode mSecondaryProgressTintMode
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_divider
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String TAG
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
me.zhanghai.android.materialprogressbar.R$styleable: int View_paddingStart
me.zhanghai.android.materialprogressbar.R$color: int background_material_dark
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
me.zhanghai.android.materialprogressbar.R$drawable: int notification_bg
me.zhanghai.android.materialprogressbar.R$attr: int listDividerAlertDialog
me.zhanghai.android.materialprogressbar.MaterialProgressBar: me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo mProgressTintInfo
com.facebook.react.bridge.ReadableNativeMap$1: int currentIndex
me.zhanghai.android.materialprogressbar.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
me.zhanghai.android.materialprogressbar.R$id: int radio
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_track_mtrl_alpha
me.zhanghai.android.materialprogressbar.R$style: int Base_DialogWindowTitle_AppCompat
kotlinx.coroutines.CompletedExceptionally: int _handled
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.reactnative.ivpusic.imagepicker.PickerModule: boolean hideBottomControls
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.google.android.gms.internal.firebase-auth-api.zzmg: int zzd
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.facebook.react.fabric.events.FabricEventEmitter: java.lang.String TAG
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.google.android.gms.internal.measurement.zzgd: long zzk
com.facebook.react.bridge.ReadableNativeMap$1: com.facebook.react.bridge.ReadableNativeMap this$0
me.zhanghai.android.materialprogressbar.R$id: int action_context_bar
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_switch_to_on_mtrl_00012
me.zhanghai.android.materialprogressbar.R$styleable: int ActionBar_subtitle
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_gravity
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
me.zhanghai.android.materialprogressbar.R$color: int primary_text_disabled_material_dark
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextHelper_android_textAppearance
me.zhanghai.android.materialprogressbar.R$layout: int abc_screen_content_include
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionBarDivider
com.google.android.gms.internal.firebase-auth-api.zzjt: int zzd
me.zhanghai.android.materialprogressbar.R$dimen: int compat_button_inset_horizontal_material
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.google.android.gms.common.data.DataHolder: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$styleable: int TextAppearance_android_shadowRadius
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean mCheckedOpacity
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_editTextBackground
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.google.android.gms.internal.firebase-auth-api.zznh: int zze
me.zhanghai.android.materialprogressbar.R$styleable: int Toolbar_subtitle
me.zhanghai.android.materialprogressbar.R$styleable: int AlertDialog_showTitle
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_switchStyle
com.google.android.gms.internal.firebase-auth-api.zztm: android.os.Parcelable$Creator CREATOR
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
me.zhanghai.android.materialprogressbar.R$attr: int switchMinWidth
me.zhanghai.android.materialprogressbar.R$id: int buttonPanel
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$drawable: int abc_control_background_material
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzkl zzf
me.zhanghai.android.materialprogressbar.R$color: int secondary_text_default_material_dark
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
me.zhanghai.android.materialprogressbar.R$drawable: int abc_btn_radio_material
com.google.android.gms.internal.firebase-auth-api.zzma: com.google.android.gms.internal.firebase-auth-api.zzmj zzd
com.google.android.gms.internal.firebase-auth-api.zzmj: com.google.android.gms.internal.firebase-auth-api.zzacc zzf
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables
me.zhanghai.android.materialprogressbar.R$style: int Theme_AppCompat_Light_Dialog
me.zhanghai.android.materialprogressbar.R$attr: int subtitle
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.google.android.gms.internal.measurement.zzgd: long zzU
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_Y
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
me.zhanghai.android.materialprogressbar.R$color: int primary_text_default_material_light
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_switchMinWidth
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
me.zhanghai.android.materialprogressbar.R$attr: int dialogCornerRadius
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzko zzb
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
me.zhanghai.android.materialprogressbar.R$styleable: int MenuItem_android_menuCategory
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String FIREBASE_TEST_LAB
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
me.zhanghai.android.materialprogressbar.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
me.zhanghai.android.materialprogressbar.R$styleable: int CoordinatorLayout_Layout_layout_anchor
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat
me.zhanghai.android.materialprogressbar.R$layout: int abc_activity_chooser_view
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorAccent
me.zhanghai.android.materialprogressbar.R$styleable: int[] ActivityChooserView
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int mChangingConfigurations
me.zhanghai.android.materialprogressbar.R$attr: int actionOverflowMenuStyle
com.google.android.gms.internal.measurement.zzfv: java.lang.String zze
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricRenderer
me.zhanghai.android.materialprogressbar.R$styleable: int FontFamily_fontProviderPackage
com.google.android.gms.internal.firebase-auth-api.zzlm: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
me.zhanghai.android.materialprogressbar.R$color: int dim_foreground_disabled_material_light
com.google.android.gms.internal.measurement.zzer: java.lang.String zzh
me.zhanghai.android.materialprogressbar.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
me.zhanghai.android.materialprogressbar.R$dimen: int abc_cascading_menus_min_smallest_width
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: float mStartAngleMax
me.zhanghai.android.materialprogressbar.R$style: int TextAppearance_AppCompat_Title
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.google.android.gms.internal.measurement.zzfr: int zze
com.google.android.gms.internal.firebase-auth-api.zzlj: int zzd
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
me.zhanghai.android.materialprogressbar.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
me.zhanghai.android.materialprogressbar.R$id: int src_over
me.zhanghai.android.materialprogressbar.R$attr: int firstBaselineToTopHeight
me.zhanghai.android.materialprogressbar.R$dimen: int abc_dialog_padding_top_material
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTextView_drawableBottomCompat
me.zhanghai.android.materialprogressbar.R$id: int info
com.google.android.gms.measurement.internal.zzau: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_Light_ActionBar
me.zhanghai.android.materialprogressbar.R$drawable: int abc_ic_menu_overflow_material
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_AVG_TOUCHES
me.zhanghai.android.materialprogressbar.R$attr: int spinBars
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.google.android.gms.internal.measurement.zzem: java.lang.String zzh
me.zhanghai.android.materialprogressbar.R$styleable: int SwitchCompat_trackTint
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
me.zhanghai.android.materialprogressbar.R$attr: int textAppearanceSearchResultTitle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
me.zhanghai.android.materialprogressbar.R$id: int split_action_bar
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzG
com.google.android.gms.internal.firebase-auth-api.zzpb: java.lang.String zzd
me.zhanghai.android.materialprogressbar.R$styleable: int LinearLayoutCompat_android_baselineAligned
me.zhanghai.android.materialprogressbar.R$attr: int colorPrimaryDark
me.zhanghai.android.materialprogressbar.R$id: int title
com.facebook.react.bridge.ReadableNativeMap$3: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.google.android.gms.internal.firebase-auth-api.zzmd: int zzd
me.zhanghai.android.materialprogressbar.R$style: int Base_Widget_AppCompat_SeekBar
me.zhanghai.android.materialprogressbar.R$dimen: int abc_text_size_small_material
me.zhanghai.android.materialprogressbar.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.firebase.ui.auth.data.model.CountryInfo: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$color: int switch_thumb_disabled_material_light
me.zhanghai.android.materialprogressbar.R$attr: int actionBarSize
com.google.android.gms.internal.measurement.zzgd: long zzj
me.zhanghai.android.materialprogressbar.R$styleable: int ViewStubCompat_android_inflatedId
me.zhanghai.android.materialprogressbar.R$styleable: int MaterialProgressBar_mpb_indeterminateTintMode
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mOperations
com.google.android.gms.internal.firebase-auth-api.zzrk: android.os.Parcelable$Creator CREATOR
me.zhanghai.android.materialprogressbar.R$attr: int actionProviderClass
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_dialogCornerRadius
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
me.zhanghai.android.materialprogressbar.R$styleable: int SearchView_searchIcon
me.zhanghai.android.materialprogressbar.BuildConfig: boolean DEBUG
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean DEBUG
me.zhanghai.android.materialprogressbar.R$layout: int abc_list_menu_item_icon
me.zhanghai.android.materialprogressbar.R$attr: int listPreferredItemHeight
me.zhanghai.android.materialprogressbar.R$attr: int elevation
me.zhanghai.android.materialprogressbar.R$color: int primary_dark_material_dark
me.zhanghai.android.materialprogressbar.R$attr: int queryBackground
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: float mTrimPathStart
com.google.android.gms.internal.measurement.zzgd: int zzs
me.zhanghai.android.materialprogressbar.R$id: int text
me.zhanghai.android.materialprogressbar.R$dimen: int notification_subtext_size
me.zhanghai.android.materialprogressbar.R$dimen: int abc_panel_menu_list_width
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.config.ReactFeatureFlags: int turboModuleBindingMode
me.zhanghai.android.materialprogressbar.R$dimen: int notification_main_column_padding_top
me.zhanghai.android.materialprogressbar.R$attr: int actionBarTabTextStyle
me.zhanghai.android.materialprogressbar.R$attr: int collapseContentDescription
me.zhanghai.android.materialprogressbar.R$attr: int fontVariationSettings
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
me.zhanghai.android.materialprogressbar.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
me.zhanghai.android.materialprogressbar.R$styleable: int AnimatedStateListDrawableItem_android_id
me.zhanghai.android.materialprogressbar.R$attr: int coordinatorLayoutStyle
me.zhanghai.android.materialprogressbar.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData hybridData
me.zhanghai.android.materialprogressbar.R$attr: int actionModeWebSearchDrawable
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.google.android.gms.internal.firebase-auth-api.zzne: com.google.android.gms.internal.firebase-auth-api.zzne zzb
me.zhanghai.android.materialprogressbar.R$style: int Base_V7_Theme_AppCompat_Dialog
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperToolbarColor
me.zhanghai.android.materialprogressbar.R$string: int status_bar_notification_info_overflow
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
me.zhanghai.android.materialprogressbar.R$style: int Widget_MaterialProgressBar_ProgressBar_Small_NoPadding
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsNotifyReady(java.lang.Boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
com.facebook.react.bridge.CatalystInstance: void destroy()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$signInWithEmailLink$9(com.facebook.react.bridge.Promise,java.lang.Exception)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropogateToDescendantsJNI(long)
com.yalantis.ucrop.view.TransformImageView: com.yalantis.ucrop.model.ExifInfo getExifInfo()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setDither(boolean)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void updatePhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.soloader.SysUtil$Api14Utils: SysUtil$Api14Utils()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.reactnativecommunity.picker.ReactPickerManager: com.reactnativecommunity.picker.ReactPickerShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: BaseDrawable$DummyConstantState(me.zhanghai.android.materialprogressbar.BaseDrawable)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.GestureCropImageView getCropImageView()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.reactnativecommunity.picker.ReactPickerManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.yalantis.ucrop.view.TransformImageView: void setScaleType(android.widget.ImageView$ScaleType)
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void signOut(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.google.android.gms.internal.measurement.zzaw: zzaw()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void setRemoveClippedSubviews(boolean)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String getName()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
com.google.android.gms.measurement.internal.zzah: com.google.android.gms.measurement.internal.zzah[] values()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getOpacity()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(android.view.View,java.lang.String)
com.firebase.ui.auth.data.remote.GenericIdpAnonymousUpgradeLinkingHandler: GenericIdpAnonymousUpgradeLinkingHandler(android.app.Application)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
com.google.android.material.card.MaterialCardView: void setProgress(float)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidResolutionForPlayServices()
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.firebase.ui.auth.viewmodel.phone.PhoneProviderResponseHandler: PhoneProviderResponseHandler(android.app.Application)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean getPadding(android.graphics.Rect)
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForNativeAnimatedEvent(com.swmansion.gesturehandler.react.RNGestureHandlerEvent)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.facebook.react.modules.blob.BlobModule: java.lang.String getName()
com.swmansion.reanimated.NativeProxy: int subscribeForKeyboardEvents(com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater)
com.facebook.imagepipeline.image.CloseableImage: CloseableImage()
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: int getIntrinsicWidth()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int getChangingConfigurations()
com.yalantis.ucrop.view.CropImageView: float getMaxScale()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.SearchBarView: void setHeaderIconColor(java.lang.Integer)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getSupportSecondaryProgressTintMode()
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] values()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.reactcommunity.rndatetimepicker.RNDatePickerDisplay: com.reactcommunity.rndatetimepicker.RNDatePickerDisplay[] values()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcf)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.picker.ReactPickerManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.gms.internal.firebase-auth-api.zzkr: zzkr()
com.google.firebase.auth.MultiFactorSession: MultiFactorSession()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void updatePassword(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBounds(boolean)
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String getName()
com.swmansion.reanimated.NativeProxy: boolean isAnyHandlerWaitingForEvent(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: com.airbnb.android.react.lottie.LottieAnimationViewPropertyManager access$100(com.airbnb.android.react.lottie.LottieAnimationViewManager,com.airbnb.lottie.LottieAnimationView)
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.swmansion.rnscreens.CustomToolbar: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
okhttp3.Protocol: okhttp3.Protocol[] values()
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: boolean onStateChange(int[])
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
me.zhanghai.android.materialprogressbar.R$dimen: R$dimen()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
me.zhanghai.android.materialprogressbar.BasePaintDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.modules.websocket.WebSocketModule: void invalidate()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.Map getConstants()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.NumberFormat: java.lang.String format(double)
com.facebook.react.uimanager.BaseViewManager: void setTouchMove(android.view.View,boolean)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String access$000(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: boolean getUseIntrinsicPadding()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.yalantis.ucrop.view.CropImageView: void setCropBoundsChangeListener(com.yalantis.ucrop.callback.CropBoundsChangeListener)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
com.facebook.react.modules.network.NetworkingModule: void invalidate()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void sendOnAnimationFinishEvent(com.airbnb.lottie.LottieAnimationView,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long)
com.swmansion.reanimated.Scheduler: void scheduleOnUI()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.google.android.gms.internal.firebase-auth-api.zzkb: zzkb()
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: void setShowBackground(boolean)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void verifyPasswordResetCode(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.facebook.react.views.slider.ReactSlider: void setMaxValue(double)
androidx.transition.Transition: Transition()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setProgress(float)
com.swmansion.rnscreens.ScreenStack: boolean getGoingForward()
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.google.android.gms.internal.measurement.zzfp: zzfp()
com.google.android.gms.internal.firebase-auth-api.zzyh: zzyh()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers)
com.yalantis.ucrop.view.TransformImageView: TransformImageView(android.content.Context,android.util.AttributeSet)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.swmansion.rnscreens.CustomSearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType valueOf(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: void cameraPickerResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.bridge.Dynamic: int asInt()
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.google.android.gms.internal.measurement.zzjy: zzjy()
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(android.view.View,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.Compression access$900(com.reactnative.ivpusic.imagepicker.PickerModule)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
com.swmansion.rnscreens.SearchBarManager: void setInputType(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
kotlin.collections.IntIterator: IntIterator()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.swmansion.reanimated.ReanimatedModule: void detachEvent(int,java.lang.String,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: HeifExifUtil$HeifExifUtilAndroidN()
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String getName()
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void invalidateDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzom: zzom()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] values()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void animate(boolean)
me.zhanghai.android.materialprogressbar.BaseProgressDrawable: void setUseIntrinsicPadding(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
com.google.android.gms.internal.measurement.zzjm: zzjm()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.swmansion.reanimated.nodes.EventNode: java.util.List processMapping(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.views.slider.ReactSliderManager: ReactSliderManager()
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAccessible(com.facebook.react.views.text.ReactTextView,boolean)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
com.google.android.gms.internal.firebase-auth-api.zzph: zzph()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.yalantis.ucrop.view.OverlayView: OverlayView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.core.TimingModule: void initialize()
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.yalantis.ucrop.view.OverlayView: int getFreestyleCropMode()
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostDestroy()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor(com.facebook.react.bridge.JavaMethodWrapper$1)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaan: zzaan()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getValue()
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.facebook.jni.DestructorThread$Terminus: void destruct()
com.google.android.gms.internal.firebase-auth-api.zzkf: zzkf()
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollection(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean canApplyTheme()
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getSupportProgressTintList()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
me.zhanghai.android.materialprogressbar.BasePaintDrawable: BasePaintDrawable()
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getProgressBackgroundTintList()
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.Map getConstants()
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
com.facebook.react.modules.camera.ImageStoreManager: void access$200(java.io.Closeable)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
com.facebook.react.common.mapbuffer.WritableMapBuffer: int[] getKeys()
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfig: android.widget.TextView getTitleTextView()
com.facebook.react.views.text.TextLayoutManagerMapBuffer: TextLayoutManagerMapBuffer()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
com.facebook.react.uimanager.ComponentNameResolverManager: ComponentNameResolverManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setTintList(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.google.android.gms.internal.firebase-auth-api.zzmf: zzmf()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.firebase.ui.auth.viewmodel.idp.LinkingSocialProviderResponseHandler: LinkingSocialProviderResponseHandler(android.app.Application)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.reactnative.ivpusic.imagepicker.PickerModule: void permissionsCheck(android.app.Activity,com.facebook.react.bridge.Promise,java.util.List,java.util.concurrent.Callable)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.google.android.gms.internal.firebase-auth-api.zzon: zzon()
com.google.android.gms.internal.firebase-auth-api.zznh: zznh()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.constraintlayout.solver.widgets.HelperWidget: HelperWidget()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.reactcommunity.rndatetimepicker.TimePickerModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay valueOf(java.lang.String)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.google.firebase.auth.AuthCredential getCredentialForProvider(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateRotation(java.lang.Object)
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(com.facebook.react.views.slider.ReactSlider,boolean)
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: CircularProgressBackgroundDrawable()
com.swmansion.gesturehandler.core.ManualGestureHandler: ManualGestureHandler()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(android.view.View,boolean)
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.airbnb.android.react.lottie.LottieAnimationViewManager: LottieAnimationViewManager()
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: int getProgressStyle()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleClearJSResponder()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setExitFadeDuration(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int getAlpha()
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
android.support.v4.media.session.MediaControllerCompat$Callback: MediaControllerCompat$Callback()
com.swmansion.rnscreens.SearchBarView: void setAutoFocus(boolean)
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map getExportedViewConstants()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void startCreatingModule()
com.google.android.gms.safetynet.SafeBrowsingData: SafeBrowsingData()
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.swmansion.reanimated.ReanimatedModule: void getValue(int,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
com.firebase.ui.auth.ui.email.RegisterEmailFragment: RegisterEmailFragment()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: void setTrimPathOffset(float)
me.zhanghai.android.materialprogressbar.BaseDrawable: void draw(android.graphics.Canvas)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.reactnativecommunity.picker.ReactPickerManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
com.google.android.material.shape.CutCornerTreatment: CutCornerTreatment()
com.facebook.react.fabric.SurfaceHandlerBinding: void startNative()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
okhttp3.HttpUrl$Companion: HttpUrl$Companion()
com.google.android.gms.internal.firebase-auth-api.zzafn: zzafn()
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
me.zhanghai.android.materialprogressbar.TintableDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidMakePlayServicesAvailable()
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.BaseDrawable: void setAlpha(int)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode()
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.BaseViewManager: void setPointerEventsFlag(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetBool(java.lang.String,boolean,com.facebook.react.bridge.Promise)
okio.AsyncTimeout: AsyncTimeout()
com.reactcommunity.rndatetimepicker.TimePickerModule: java.lang.String getName()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzci)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getProgressBackgroundTintMode()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(android.view.View,java.lang.String)
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactcommunity.rndatetimepicker.DatePickerModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.reactcommunity.rndatetimepicker.DatePickerModule)
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropEnabled(boolean)
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.Long access$700(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void maybeLoadSoLibrary()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.gms.internal.measurement.zzem: zzem()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
androidx.cardview.widget.CardView: void setRadius(float)
com.firebase.ui.auth.util.FirebaseAuthError: com.firebase.ui.auth.util.FirebaseAuthError valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.google.android.gms.internal.measurement.zzei: zzei()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleColor(java.lang.Integer)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.firebase.ui.auth.viewmodel.OperableViewModel: OperableViewModel(android.app.Application)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyPrimaryProgressTint()
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
com.google.firebase.auth.FirebaseAuthRegistrar: java.util.List getComponents()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void verifyPhoneNumberWithMultiFactorInfo(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableArray: int getInt(int)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.reactcommunity.rndatetimepicker.DatePickerModule: DatePickerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollEventThrottle()
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.google.firebase.auth.internal.zzbm: zzbm()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getOpacity()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: void setRotation(float)
com.reactnative.ivpusic.imagepicker.PickerModule: void initiateCamera(android.app.Activity)
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapJNI(long,int,float)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.firebase.ui.auth.viewmodel.email.EmailLinkSendEmailHandler: EmailLinkSendEmailHandler(android.app.Application)
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.google.android.material.button.MaterialButton: int getIconPadding()
com.swmansion.reanimated.NativeProxy: void configureProps(com.facebook.react.bridge.ReadableNativeArray,com.facebook.react.bridge.ReadableNativeArray)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.google.android.gms.internal.measurement.zzlg: zzlg()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.firebase.ui.auth.viewmodel.ViewModelBase: ViewModelBase(android.app.Application)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.jni.UnknownCppException: UnknownCppException()
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: void draw(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: boolean canApplyTheme()
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode()
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.swmansion.gesturehandler.react.RNGestureHandlerEvent: RNGestureHandlerEvent()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.facebook.react.uimanager.ReanimatedUIManager: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
me.zhanghai.android.materialprogressbar.R$bool: R$bool()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.collection.ArraySet: ArraySet()
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.facebook.hermes.intl.PlatformCollatorAndroid: PlatformCollatorAndroid()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setAlpha(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule access$800(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.swmansion.reanimated.nodes.Node: void findAndUpdateNodes(com.swmansion.reanimated.nodes.Node,java.util.Set,java.util.Stack)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: ValueAnimatorCompat()
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: boolean getUseIntrinsicPadding()
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: boolean getUseIntrinsicPadding()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int getIntrinsicWidth()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void removeRootView(int)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
io.invertase.firebase.common.ReactNativeFirebaseModule: android.app.Activity getActivity()
okhttp3.Headers$Builder: Headers$Builder()
com.facebook.react.uimanager.BaseViewManager: void setPointerEnterCapture(android.view.View,boolean)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setImageAssetsFolder(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReadableMap getInspectorDataForInstance(int,android.view.View)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
com.facebook.react.turbomodule.core.TurboModuleManager: void maybeLoadSoLibrary()
com.facebook.imagepipeline.cache.StagingArea: StagingArea()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void onAfterUpdateTransaction(android.view.View)
com.google.firebase.auth.PhoneAuthProvider$OnVerificationStateChangedCallbacks: PhoneAuthProvider$OnVerificationStateChangedCallbacks()
com.google.android.material.card.MaterialCardView: void setRadius(float)
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetString(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidPromptForPlayServices()
com.yalantis.ucrop.view.OverlayView: void setCropFrameStrokeWidth(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getTmpDir(android.app.Activity)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSupportIndeterminateTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean getShowBackground()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
com.reactnativecommunity.picker.ReactDropdownPickerManager: ReactDropdownPickerManager()
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: java.io.File createImageFile()
com.facebook.react.uimanager.ReanimatedUIManager: void setJSResponder(int,boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.google.android.gms.internal.firebase-auth-api.zzzp: zzzp()
com.facebook.hermes.intl.Collator: java.util.Map resolvedOptions()
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.facebook.react.modules.toast.ToastModule: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.swmansion.reanimated.ReanimatedModule: void addListener(java.lang.String)
com.google.android.gms.internal.measurement.zzgk: zzgk()
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(android.view.View,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.reactnativecommunity.picker.ReactPicker: void setSelectionWithSuppressEvent(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.airbnb.lottie.utils.MeanCalculator: MeanCalculator()
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
me.zhanghai.android.materialprogressbar.R$id: R$id()
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: void onPreparePaint(android.graphics.Paint)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] values()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.swmansion.reanimated.nodes.Node: java.lang.Object evaluate()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setTintList(android.content.res.ColorStateList)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getChangingConfigurations()
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] values()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.facebook.common.internal.Closeables: Closeables()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void checkActionCode(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
com.firebase.ui.auth.ui.email.EmailLinkCatcherActivity: EmailLinkCatcherActivity()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.airbnb.lottie.LottieAnimationView: void setCacheComposition(boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeMap$1: boolean hasNext()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule)
com.swmansion.rnscreens.ScreenStackViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.facebook.react.bridge.WritableMap firebaseUserToMap(com.google.firebase.auth.FirebaseUser)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: int getCurrentDrawableIndexBasedOnScale()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDirectEvent(com.facebook.react.uimanager.events.Event)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: int getInputType()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$signInWithCredential$22(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void clearMutated()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.airbnb.lottie.model.animatable.AnimatableTransform: AnimatableTransform()
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
com.google.android.material.chip.Chip: void setChipIconResource(int)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] values()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.swmansion.reanimated.nodes.Node: void removeChild(com.swmansion.reanimated.nodes.Node)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void getHotspotBounds(android.graphics.Rect)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.gms.internal.measurement.zzek: zzek()
com.swmansion.reanimated.NativeProxy: void requestRender(com.swmansion.reanimated.NativeProxy$AnimationFrameCallback)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter()
com.swmansion.reanimated.NativeProxy$EventHandler: void receiveEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
me.zhanghai.android.materialprogressbar.BaseDrawable: boolean updateTintFilter()
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
okhttp3.Response$Builder: Response$Builder()
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
com.google.firebase.auth.FirebaseAuthRegistrar: com.google.firebase.auth.FirebaseAuth lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.swmansion.reanimated.ReanimatedModule: void animateNextTransition(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.firebase.ui.auth.ui.HelperActivityBase: HelperActivityBase()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(android.view.View,com.facebook.react.bridge.ReadableMap)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.graphics.Rect getConstantPadding()
com.facebook.react.bridge.Arguments$1: int size()
com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
io.invertase.firebase.common.ReactNativeFirebaseInitProvider: ReactNativeFirebaseInitProvider()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.constraintlayout.solver.widgets.Barrier: Barrier()
com.swmansion.rnscreens.Screen: java.lang.Integer getNavigationBarColor()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.google.android.gms.internal.measurement.zzam: zzam()
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.views.slider.ReactSliderManager: void setStep(android.view.View,double)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean onLayoutDirectionChanged(int)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
com.reactnativecommunity.picker.ReactPickerManager: void onAfterUpdateTransaction(com.reactnativecommunity.picker.ReactPicker)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.google.android.gms.internal.firebase-auth-api.zzpb: zzpb()
com.yalantis.ucrop.view.CropImageView: void setMaxScaleMultiplier(float)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String getName()
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.google.android.gms.internal.firebase-auth-api.zzabf: zzabf()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void init(android.util.AttributeSet,int,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void drawRing(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: BaseDrawable$DummyConstantState(me.zhanghai.android.materialprogressbar.BaseDrawable,me.zhanghai.android.materialprogressbar.BaseDrawable$1)
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageOutputPath()
com.facebook.react.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
com.yalantis.ucrop.view.CropImageView: void setTargetAspectRatio(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.swmansion.reanimated.nodes.Node: void onDrop()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void registerRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
okhttp3.internal.platform.Platform$Companion: Platform$Companion()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer resolveResourcePath(android.content.Context,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.fabric.events.EventBeatManager)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: com.facebook.react.bridge.WritableMap getPlayServicesStatusMap()
com.google.android.gms.internal.firebase-auth-api.zzzm: com.google.android.gms.internal.firebase-auth-api.zzzm[] values()
com.google.android.gms.common.api.internal.zzb: zzb()
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: HorizontalProgressWheelView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] values()
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getExecutor()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.google.android.gms.internal.firebase-auth-api.zzabr: zzabr()
com.facebook.common.references.OOMSoftReference: OOMSoftReference()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onHandlerUpdate(com.swmansion.gesturehandler.core.GestureHandler)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
androidx.appcompat.widget.SearchView: int getMaxWidth()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$sendSignInLinkToEmail$13(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.yalantis.ucrop.view.OverlayView: void setCropGridStrokeWidth(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzjw: zzjw()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
me.zhanghai.android.materialprogressbar.R$styleable: R$styleable()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.CustomToolbar getToolbar()
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(android.view.View,boolean)
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: boolean getShowBackground()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void addListener(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: boolean hasNextKey()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.facebook.react.bridge.Dynamic: boolean isNull()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleRadius()
com.airbnb.android.react.lottie.LottieAnimationViewManager: com.airbnb.android.react.lottie.LottieAnimationViewPropertyManager getOrCreatePropertyManager(com.airbnb.lottie.LottieAnimationView)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.google.android.gms.internal.firebase-auth-api.zzpe: zzpe()
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: ReactPackageTurboModuleManagerDelegate$Builder()
com.google.android.gms.internal.firebase-auth-api.zzq: zzq()
com.yalantis.ucrop.view.TransformImageView: void setImageMatrix(android.graphics.Matrix)
com.google.android.gms.internal.firebase-auth-api.zzko: zzko()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String getName()
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.swmansion.reanimated.nodes.Node: void runUpdates(com.swmansion.reanimated.UpdateContext)
com.google.android.gms.internal.firebase-auth-api.zzaav: zzaav()
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: void setTrimPathEnd(float)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setUseIntrinsicPadding(boolean)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String resolveRealPath(android.app.Activity,android.net.Uri,boolean)
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String getName()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: float access$200(me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation)
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSupportProgressBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.nodes.EventNode: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: void onDrawRing(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
androidx.cardview.widget.CardView: float getRadius()
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.google.android.gms.internal.measurement.zzfx: zzfx()
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper findRootHelperForViewAncestor(int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
androidx.constraintlayout.widget.Barrier: int getType()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.facebook.react.views.slider.ReactSliderManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec: NativeModuleDatePickerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
com.facebook.react.uimanager.UIManagerModule: void initialize()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.google.android.gms.internal.firebase-auth-api.zzlx: zzlx()
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.google.android.gms.internal.measurement.zzgi: zzgi()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: void onDrawRing(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType valueOf(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
com.firebase.ui.auth.ui.email.WelcomeBackEmailLinkPrompt: WelcomeBackEmailLinkPrompt()
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setShowBackground(boolean)
com.yalantis.ucrop.view.CropImageView: void setCropRect(android.graphics.RectF)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clearSensitiveData()
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
androidx.lifecycle.ReportFragment: ReportFragment()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
com.swmansion.rnscreens.ScreenStack: void setGoingForward(boolean)
com.google.android.gms.internal.measurement.zzig: zzig()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.firebase.ui.auth.data.model.State: com.firebase.ui.auth.data.model.State valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
io.invertase.firebase.common.ReactNativeFirebaseModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] values()
com.google.android.gms.internal.measurement.zzhz: zzhz()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
com.google.android.gms.internal.firebase-auth-api.zzoj: zzoj()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean selectDrawable(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] values()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void onBoundsChange(android.graphics.Rect)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
com.facebook.react.views.textinput.ReactEditText: java.lang.String getSubmitBehavior()
com.facebook.react.uimanager.ViewManager: void onSurfaceStopped(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: ResourceDrawableIdHelper()
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void jumpToCurrentState()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.bridge.NativeModule: java.lang.String getName()
com.facebook.react.uimanager.events.Event: Event()
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.WritableMap getCroppedRectMap(android.content.Intent)
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
okhttp3.RequestBody: RequestBody()
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
com.swmansion.reanimated.ReanimatedModule: void removeListeners(java.lang.Integer)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] values()
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.Screen: void setNavigationBarHidden(java.lang.Boolean)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.google.android.gms.internal.safetynet.zzk: zzk()
androidx.recyclerview.widget.GapWorker: GapWorker()
com.google.android.material.chip.Chip: void setLines(int)
com.reactnative.ivpusic.imagepicker.PickerModule: void getVideo(android.app.Activity,java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
okio.Timeout: Timeout()
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
com.google.android.gms.internal.firebase-auth-api.zzmd: zzmd()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.gms.internal.firebase-auth-api.zzcg: zzcg()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object next()
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
com.airbnb.lottie.model.DocumentData: DocumentData()
com.reactnativecommunity.picker.ReactPickerManager: void setDropdownIconColor(com.reactnativecommunity.picker.ReactPicker,int)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.google.android.gms.auth.api.credentials.CredentialRequestResponse: CredentialRequestResponse()
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.reactnative.ivpusic.imagepicker.PickerModule: void openCropper(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.SearchBarView: void setShouldShowHintSearchIcon(boolean)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
com.yalantis.ucrop.view.OverlayView: void setOverlayViewChangeListener(com.yalantis.ucrop.callback.OverlayViewChangeListener)
com.airbnb.lottie.LottieAnimationView: long getDuration()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
kotlinx.coroutines.CancelHandler: CancelHandler()
com.google.android.gms.internal.firebase-auth-api.zzof: zzof()
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzgp: zzgp()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
com.carservicemanagement.MainApplication: MainApplication()
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken access$202(io.invertase.firebase.auth.ReactNativeFirebaseAuthModule,com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.reactnative.ivpusic.imagepicker.PickerModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setTouchEnd(android.view.View,boolean)
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyTintForDrawable(android.graphics.drawable.Drawable,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode,boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.google.android.gms.internal.measurement.zzfw: zzfw()
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.google.android.gms.internal.firebase-auth-api.zzabm: zzabm()
com.facebook.react.bridge.GuardedRunnable: void run()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] values()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$linkWithCredential$30(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: void setTranslateX(float)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.google.android.gms.internal.measurement.zzfq: zzfq()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.airbnb.lottie.LottieAnimationView: int getFrame()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHintTextColor()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int getAlpha()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.reactcommunity.rndatetimepicker.TimePickerModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.reactcommunity.rndatetimepicker.TimePickerModule)
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData initHybrid(long,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.reanimated.Scheduler,com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.reactnative.ivpusic.imagepicker.PickerModule: void imagePickerResult(android.app.Activity,int,int,android.content.Intent)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
com.facebook.react.ReactInstancePackage: ReactInstancePackage()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.google.android.gms.internal.safetynet.zzc: zzc()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.reactnativecommunity.picker.CheckedTextViewImpl: void setHorizontallyScrolling(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.picker.ReactPicker: java.lang.Integer getPrimaryColor()
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.airbnb.lottie.LottieAnimationView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar: FirebaseAnalyticsKtxRegistrar()
kotlinx.coroutines.JobNode: JobNode()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(android.view.View,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$confirmPasswordReset$27(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.google.android.gms.internal.firebase-auth-api.zzaae: zzaae()
com.facebook.react.devsupport.LogBoxModule: void hide()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void removeAuthStateListener(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(android.view.View,java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign valueOf(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunningNative()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$sendPasswordResetEmail$12(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(android.view.View,boolean)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager(com.facebook.react.views.text.ReactTextViewManagerCallback)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setShowBackground(boolean)
com.airbnb.lottie.LottieAnimationView: void setMinFrame(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String getName()
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void updateEmail(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.BaseViewManager: void setPointerOver(android.view.View,boolean)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String getName()
com.airbnb.lottie.LottieAnimationView: void setAnimation(int)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$600(com.facebook.react.animated.NativeAnimatedModule)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: IndeterminateCircularProgressDrawable(android.content.Context)
com.facebook.react.uimanager.LayoutShadowNode: LayoutShadowNode()
com.swmansion.reanimated.ReanimatedModule: void connectNodeToView(int,int)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceJson(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.hermes.intl.DateTimeFormat: java.lang.String format(double)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleRadius(java.lang.Integer)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void receiveCommand(com.airbnb.lottie.LottieAnimationView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getConstantWidth()
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: void draw(android.graphics.Canvas)
com.facebook.jni.HybridData$Destructor: void destruct()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
com.airbnb.lottie.LottieAnimationView: void setMinAndMaxFrame(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.SearchBarView)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBuffer()
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline access$100(com.facebook.react.modules.image.ImageLoaderModule)
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
kotlinx.coroutines.YieldContext: YieldContext()
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void fetchSignInMethodsForEmail(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNode: YogaNode()
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType[] values()
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.picker.ReactDropdownPickerManager: java.lang.String getName()
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize[] values()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.yalantis.ucrop.view.OverlayView: void setCircleDimmedLayer(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void verifyPhoneNumberForMultiFactor(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.firebase.ui.auth.data.remote.AnonymousSignInHandler: AnonymousSignInHandler(android.app.Application)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setTintList(android.content.res.ColorStateList)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
com.google.android.gms.internal.measurement.zzlh: zzlh()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.android.gms.internal.measurement.zzag: zzag()
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setTextFilters(com.airbnb.lottie.LottieAnimationView,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.yalantis.ucrop.view.TransformImageView: float getCurrentAngle()
com.reactnative.ivpusic.imagepicker.PickerModule: android.graphics.Bitmap access$600(com.reactnative.ivpusic.imagepicker.PickerModule,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(android.view.View,float)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.yalantis.ucrop.view.GestureCropImageView: void setScaleEnabled(boolean)
com.facebook.jni.DestructorThread: DestructorThread()
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.view.ReactViewGroup)
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] values()
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
com.google.android.gms.internal.firebase-auth-api.zzlc: zzlc()
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void jsonGetAll(com.facebook.react.bridge.Promise)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean isRunning()
com.swmansion.reanimated.NativeProxy$AnimationFrameCallback: NativeProxy$AnimationFrameCallback(com.facebook.jni.HybridData)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackFragment getScreenStackFragment()
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaep: zzaep()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.carservicemanagement.MainActivity: MainActivity()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year valueOf(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.gms.common.api.Api$ApiOptions$NoOptions: Api$ApiOptions$NoOptions()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String getName()
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: void draw(android.graphics.Canvas)
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLinesMapBuffer(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: void maybeLoadSoLibrary()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int getOpacity()
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.firebase.ui.auth.ui.email.WelcomeBackPasswordPrompt: void onClick(android.view.View)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.ReactTextView)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder()
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.reactnativecommunity.picker.ReactPickerShadowNode: ReactPickerShadowNode()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.reactnative.ivpusic.imagepicker.PickerModule: void openCamera(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.internal.firebase-auth-api.zzlw: zzlw()
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.facebook.react.uimanager.OnLayoutEvent: OnLayoutEvent()
com.google.android.gms.internal.firebase-auth-api.zzjt: zzjt()
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleNameNative()
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzla: zzla()
me.zhanghai.android.materialprogressbar.TintableDrawable: void setTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl)
com.swmansion.rnscreens.SearchBarView: void setSearchViewListeners(androidx.appcompat.widget.SearchView)
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler(com.facebook.jni.HybridData)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
com.facebook.jni.CppException: CppException(java.lang.String)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
org.reactnative.maskedview.RNCMaskedViewManager: RNCMaskedViewManager()
com.facebook.react.modules.core.TimingModule: java.lang.String getName()
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.airbnb.lottie.parser.KeyframeParser: KeyframeParser()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.reactnativecommunity.picker.ReactDropdownPickerManager: com.reactnativecommunity.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setAlpha(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
okhttp3.Cookie$Companion: Cookie$Companion()
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: NativeDatePickerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.firebase.ui.auth.ui.email.RecoverPasswordActivity: RecoverPasswordActivity()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.Guideline: Guideline()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(com.facebook.jni.HybridData)
io.invertase.firebase.common.ReactNativeFirebaseModule: void initialize()
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.firebase.ui.auth.ui.email.RecoverPasswordActivity: void onClick(android.view.View)
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(android.view.View,int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(android.view.View,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.yalantis.ucrop.view.OverlayView: void setShowCropFrame(boolean)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void initialize()
com.facebook.react.bridge.ReactContext$1: void run()
com.google.android.gms.internal.firebase-auth-api.zzmc: zzmc()
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getSupportProgressBackgroundTintMode()
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
com.swmansion.reanimated.NativeProxy$EventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void verifyPhoneNumber(java.lang.String,java.lang.String,java.lang.String,int,boolean)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setTintList(android.content.res.ColorStateList)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void measure(int,com.facebook.react.bridge.Callback)
com.reactnative.ivpusic.imagepicker.PickerModule: boolean isCameraAvailable(android.app.Activity)
com.facebook.react.uimanager.ReanimatedUIManager: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.uimanager.BaseViewManager: void setTouchStart(android.view.View,boolean)
com.google.android.gms.internal.measurement.zzey: zzey()
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void getOutline(android.graphics.Outline)
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension[] values()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.Binding)
me.zhanghai.android.materialprogressbar.BaseDrawable: boolean onStateChange(int[])
com.swmansion.rnscreens.SearchBarView: void setTintColor(java.lang.Integer)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.lifecycle.ViewModel: ViewModel()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.google.android.gms.internal.measurement.zzjr: zzjr()
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void signInWithCredential(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollView: int getScrollEventThrottle()
com.firebase.ui.auth.ui.phone.CountryListSpinner: CountryListSpinner(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setUseIntrinsicPadding(boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.facebook.react.views.slider.ReactSlider: void setMinValue(double)
com.airbnb.android.react.lottie.LottieAnimationViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
okhttp3.internal.http2.Settings: Settings()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHeaderIconColor()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
com.facebook.react.bridge.Inspector: java.util.List getPages()
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
com.facebook.jni.IteratorHelper: boolean hasNext()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void getSession(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect1(java.lang.Object)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(android.view.View,double)
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: android.graphics.drawable.Drawable newDrawable()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.google.firebase.auth.internal.zzag: zzag()
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
com.google.android.material.chip.Chip: void setMinLines(int)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.google.firebase.auth.MultiFactorResolver: MultiFactorResolver()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.reactnativecommunity.picker.ReactPickerManager: void setColor(com.reactnativecommunity.picker.ReactPicker,java.lang.Integer)
com.google.android.gms.common.api.internal.zzd: zzd()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getIntrinsicSize()
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminate(java.lang.Object)
com.facebook.soloader.nativeloader.NativeLoader: NativeLoader()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
com.airbnb.lottie.LottieComposition: LottieComposition()
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void unlink(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: ReactNativeFirebaseAppRegistrar()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.facebook.react.uimanager.BaseViewManager: void setPointerOutCapture(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.google.android.gms.internal.firebase-auth-api.zzlm: zzlm()
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.swmansion.reanimated.ReanimatedModule: void onCatalystInstanceDestroy()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: int getIntrinsicSize()
com.google.android.gms.internal.firebase-auth-api.zzek: zzek()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.google.android.gms.internal.measurement.zzfu: zzfu()
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.react.modules.network.NetworkingModule: boolean access$000(long,long)
com.reactnativecommunity.picker.ReactPickerManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getAlpha()
com.google.android.gms.internal.measurement.zzne: com.google.android.gms.internal.measurement.zzne[] values()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getSupportProgressTintMode()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.firebase.ui.auth.util.ui.SupportVectorDrawablesButton: SupportVectorDrawablesButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(com.swmansion.rnscreens.Screen,boolean)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$getIdToken$33(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.yalantis.ucrop.view.CropImageView: float getTargetAspectRatio()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.RenderMode getRenderMode()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: HorizontalProgressDrawable(android.content.Context)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue access$400(com.facebook.react.animated.NativeAnimatedModule)
com.google.android.gms.internal.measurement.zzbn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
com.airbnb.lottie.LottieAnimationView: void setApplyingOpacityToLayersEnabled(boolean)
com.airbnb.lottie.LottieAnimationView: void setClipToCompositionBounds(boolean)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.uimanager.BaseViewManager: void setTouchCancel(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: DispatchCommandMountItem()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void updateDensity(android.content.res.Resources)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void metaGetAll(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager: void initialize()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.swmansion.reanimated.NativeProxy: void installJSIBindings()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes valueOf(java.lang.String)
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void useDeviceLanguage(java.lang.String)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
com.facebook.jni.NativeRunnable: void run()
com.google.android.gms.internal.firebase-auth-api.zzow: zzow()
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.yalantis.ucrop.view.CropImageView: CropImageView(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.nodes.Node: void addChild(com.swmansion.reanimated.nodes.Node)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.yalantis.ucrop.view.GestureCropImageView: float getDoubleTapTargetScale()
com.google.firebase.auth.FirebaseAuthRegistrar: FirebaseAuthRegistrar()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$unlink$31(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
androidx.cardview.widget.CardView: int getContentPaddingRight()
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zzjv: zzjv()
com.facebook.react.uimanager.ViewManager: void trimMemory()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.facebook.react.uimanager.ReanimatedUIManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
org.reactnative.maskedview.RNCMaskedViewManager: java.lang.String getName()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.oblador.vectoricons.VectorIconsModule: java.lang.String createGlyphImagePath(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.google.android.gms.internal.firebase-auth-api.zzms: zzms()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher access$000(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: ReactNativeFirebaseAppModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: IndeterminateCircularProgressDrawable$RingPathTransform(me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$1)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String getName()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
com.facebook.drawee.debug.DebugControllerOverlayDrawable: DebugControllerOverlayDrawable()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void promiseWithUser(com.google.firebase.auth.FirebaseUser,com.facebook.react.bridge.Promise)
com.reactcommunity.rndatetimepicker.TimePickerModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.reactcommunity.rndatetimepicker.TimePickerModule)
com.facebook.hermes.intl.Collator: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void logProgressBarTintWarning()
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
com.facebook.react.modules.fresco.FrescoModule: void initialize()
androidx.core.os.CancellationSignal: CancellationSignal()
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,float)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void access$300(io.invertase.firebase.auth.ReactNativeFirebaseAuthModule,com.google.firebase.auth.PhoneAuthCredential,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.firebase.auth.AuthCredential: AuthCredential()
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void signInAnonymously(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
com.facebook.react.uimanager.ReactShadowNodeImpl: ReactShadowNodeImpl()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback: DrawableContainerCompat$BlockInvalidateCallback()
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.picker.ReactPickerManager: void setItems(com.reactnativecommunity.picker.ReactPicker,com.facebook.react.bridge.ReadableArray)
com.google.android.gms.internal.firebase-auth-api.zzzb: zzzb()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.google.android.gms.internal.firebase-auth-api.zzzh: zzzh()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setEnterFadeDuration(int)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
com.google.android.gms.internal.firebase-auth-api.zzlz: zzlz()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.ColorFilter getColorFilter()
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
com.facebook.react.fabric.FabricUIManager: java.lang.Object getEventDispatcher()
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzhy getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.JSExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.devsupport.HMRClient: void enable()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean getShowBackground()
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: long getLastScrollDispatchTime()
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode()
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
com.google.android.gms.internal.firebase-auth-api.zzafo: zzafo()
com.facebook.jni.HybridData: HybridData()
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
com.facebook.react.fabric.Binding: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.reactcommunity.rndatetimepicker.TimePickerModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
me.zhanghai.android.materialprogressbar.R$attr: R$attr()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.google.android.gms.internal.measurement.zzlb: zzlb()
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.BaseJavaModule: void initialize()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int getIntrinsicHeight()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: MaterialProgressBar(android.content.Context)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
com.airbnb.lottie.LottieAnimationView: void setMinProgress(float)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.firebase.ui.auth.viewmodel.email.WelcomeBackPasswordHandler: WelcomeBackPasswordHandler(android.app.Application)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void access$000(com.airbnb.android.react.lottie.LottieAnimationViewManager,com.airbnb.lottie.LottieAnimationView,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.Long getVideoDuration(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] values()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsAddListener(java.lang.String)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
com.facebook.react.modules.dialog.DialogModule: void initialize()
com.facebook.react.bridge.WritableArray: void pushDouble(double)
com.swmansion.reanimated.ReanimatedModule: java.lang.String getName()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieComposition getComposition()
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getName()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void draw(android.graphics.Canvas)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.reactnative.ivpusic.imagepicker.PickerModule: void clean(com.facebook.react.bridge.Promise)
com.facebook.react.common.mapbuffer.WritableMapBuffer: WritableMapBuffer()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$200(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] values()
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$signInWithEmailLink$8(com.facebook.react.bridge.Promise,com.google.firebase.auth.AuthResult)
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.google.android.gms.internal.measurement.zzes: zzes()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
com.facebook.react.bridge.ModuleHolder: void destroy()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
okhttp3.Headers$Companion: Headers$Companion()
androidx.cardview.widget.CardView: int getContentPaddingTop()
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.CustomSearchView: void setOverrideBackAction(boolean)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.react.modules.network.NetworkingModule: java.lang.String getName()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageInputPath()
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void onAttachedToWindow()
com.yalantis.ucrop.view.widget.AspectRatioTextView: AspectRatioTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.facebook.react.animated.NativeAnimatedModule: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.swmansion.rnscreens.SearchBarManager: java.lang.String getName()
com.google.android.material.chip.Chip: float getTextStartPadding()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.firebase.ui.auth.ui.phone.CheckPhoneNumberFragment: CheckPhoneNumberFragment()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter[] values()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getProgressTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider: ReactNativeFirebaseAppInitProvider()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getSupportIndeterminateTintList()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandler(java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] values()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSpeed(com.airbnb.lottie.LottieAnimationView,double)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.picker.ReactDialogPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.firebase.ui.auth.data.remote.FacebookSignInHandler: FacebookSignInHandler(android.app.Application)
com.google.android.material.shape.RoundedCornerTreatment: RoundedCornerTreatment()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.swmansion.reanimated.ReanimatedModule: void dropNode(int)
com.swmansion.rnscreens.SearchBarView: void setPlaceholder(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion()
com.google.firebase.installations.remote.InstallationResponse: InstallationResponse()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void onHostPause()
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.google.android.gms.internal.firebase-auth-api.zzfp: zzfp()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setProgress(com.airbnb.lottie.LottieAnimationView,float)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean needsMirroring()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$400(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity,android.net.Uri)
com.facebook.react.modules.dialog.DialogModule: java.lang.String getName()
com.reactnative.ivpusic.imagepicker.PickerModule: void croppingResult(android.app.Activity,int,int,android.content.Intent)
com.google.android.gms.internal.measurement.zzhb: zzhb()
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.uimanager.RootViewManager: RootViewManager()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.airbnb.lottie.LottieAnimationView: void setImageAssetDelegate(com.airbnb.lottie.ImageAssetDelegate)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.picker.ReactPicker: int getMode()
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(com.swmansion.rnscreens.Screen,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
com.facebook.imageutils.TiffUtil: TiffUtil()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type valueOf(java.lang.String)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.CatalystInstance: void initialize()
okhttp3.CacheControl$Companion: CacheControl$Companion()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
me.zhanghai.android.materialprogressbar.internal.DrawableCompat: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.CppComponentRegistry: com.facebook.jni.HybridData initHybrid()
okhttp3.internal.http2.Http2: Http2()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: android.graphics.drawable.Drawable mutate()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.airbnb.lottie.LottieAnimationView: void setRepeatMode(int)
com.facebook.react.bridge.JavaOnlyArray: int size()
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
com.google.android.gms.internal.firebase-auth-api.zzaar: zzaar()
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.android.gms.internal.firebase-auth-api.zzlu: zzlu()
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getIndeterminateTintMode()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.firebase.ui.auth.ui.email.EmailLinkCrossDeviceLinkingFragment: EmailLinkCrossDeviceLinkingFragment()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.google.firebase.auth.PhoneAuthCredential getPhoneAuthCredential(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollView: boolean getScrollEnabled()
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType[] values()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.google.android.gms.internal.firebase-auth-api.zzmj: zzmj()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
com.facebook.react.bridge.ReactContext: void onHostPause()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void signInWithEmailAndPassword(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String getName()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: void initialize()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(android.view.View,boolean)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation valueOf(java.lang.String)
com.firebase.ui.auth.data.remote.SignInKickstarter: SignInKickstarter(android.app.Application)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
com.google.android.gms.internal.measurement.zzmo: zzmo()
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
me.zhanghai.android.materialprogressbar.BaseDrawable: void setTint(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
com.firebase.ui.auth.ui.email.EmailLinkFragment: EmailLinkFragment()
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.google.android.gms.internal.firebase-auth-api.zzadc: zzadc()
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setTouched(boolean)
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: PlatformBitmapFactory()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.react.fabric.Binding: void uninstallFabricUIManager()
com.facebook.react.fabric.FabricUIManager: int getColor(int,java.lang.String[])
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void verifyBeforeUpdateEmail(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.HMRClient: void disable()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setIndeterminate(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminationRequest(android.view.View,boolean)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
androidx.cardview.widget.CardView: void setCardElevation(float)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$signInAnonymously$2(com.facebook.react.bridge.Promise,com.google.firebase.auth.AuthResult)
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setColorFilter(android.graphics.ColorFilter)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void drawBackgroundRect(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$reload$15(com.google.firebase.auth.FirebaseAuth,com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.firebase.ui.auth.KickoffActivity: KickoffActivity()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.reactnative.ivpusic.imagepicker.PickerModule: void getAsyncSelection(android.app.Activity,android.net.Uri,boolean)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void logDrawableTintWarning()
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
me.zhanghai.android.materialprogressbar.BasePaintDrawable: void onPreparePaint(android.graphics.Paint)
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.airbnb.lottie.LottieAnimationView: void setOutlineMasksAndMattes(boolean)
com.firebase.ui.auth.data.model.State: com.firebase.ui.auth.data.model.State[] values()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: boolean getUseIntrinsicPadding()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: ChoreographerCompat$FrameCallback()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode[] values()
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDeviceEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.gms.common.internal.zzj: zzj()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: boolean isStarted()
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.google.android.gms.internal.measurement.zzlr: zzlr()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateMapBufferDataImpl()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.google.android.gms.internal.measurement.zzjw: zzjw()
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.facebook.react.fabric.ReactNativeConfig: long getInt64(java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setFailureListener(com.airbnb.lottie.LottieListener)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(android.view.View,java.lang.String)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getConstantMinimumWidth()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.lang.String nextKey()
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.firebase.ui.auth.ui.FragmentBase: FragmentBase()
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.gms.internal.measurement.zzeh: zzeh()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData initHybrid(int,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzoc: zzoc()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
com.swmansion.reanimated.nodes.Node: java.lang.Object value()
com.google.android.gms.internal.firebase-auth-api.zzkz: zzkz()
com.firebase.ui.auth.ui.credentials.CredentialSaveActivity: CredentialSaveActivity()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponder(android.view.View,boolean)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: void draw(android.graphics.Canvas)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: boolean getShowBackground()
com.google.android.gms.internal.firebase-auth-api.zzadz: zzadz()
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
com.facebook.react.uimanager.BaseViewManager: void setResponderGrant(android.view.View,boolean)
com.facebook.react.modules.intent.IntentModule: java.lang.String getName()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
com.google.android.gms.internal.firebase-auth-api.zziu: zziu()
com.facebook.react.animated.AnimatedNode: AnimatedNode()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$updatePassword$19(com.google.firebase.auth.FirebaseAuth,com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.fabric.SurfaceHandler,android.view.View)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType[] values()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzmo: zzmo()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applySecondaryProgressTint()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.facebook.react.views.text.ReactRawTextShadowNode: ReactRawTextShadowNode()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
com.facebook.react.fabric.Binding: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfc: zzfc()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.bridge.NativeModule: void initialize()
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$100(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
com.facebook.react.views.slider.ReactSliderManager: void setStep(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
com.google.android.gms.internal.measurement.zzfn: zzfn()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.reactnative.ivpusic.imagepicker.PickerModule: void onNewIntent(android.content.Intent)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
com.google.android.gms.internal.firebase-auth-api.zznd: zznd()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: ReactSliderManager$ReactSliderShadowNode()
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.slider.ReactSliderManager: void setTestID(com.facebook.react.views.slider.ReactSlider,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.google.android.gms.internal.firebase-auth-api.zzec: zzec()
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.yalantis.ucrop.view.OverlayView: void setCropGridColumnCount(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.reactnativecommunity.picker.CheckedTextViewImpl: CheckedTextViewImpl(android.content.Context,android.util.AttributeSet)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.facebook.react.uimanager.ReanimatedUIManager: void dismissPopupMenu()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setSelection(com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(android.view.View,float)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setEnableMergePaths(com.airbnb.lottie.LottieAnimationView,boolean)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.google.android.gms.internal.measurement.zzgm: zzgm()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.swmansion.reanimated.NativeProxy$AnimationFrameCallback: void onAnimationFrame(double)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBoundsAnimDuration(long)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void clearMutated()
com.reactnative.ivpusic.imagepicker.PickerModule: void cleanSingle(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.facebook.react.views.text.TextLayoutManager: TextLayoutManager()
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
me.zhanghai.android.materialprogressbar.AnimationScaleIndeterminateCircularProgressDrawable: boolean getUseIntrinsicPadding()
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: SafeAreaViewShadowNode()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.airbnb.lottie.LottieAnimationView: void setAnimationFromJson(java.lang.String)
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token[] values()
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.swmansion.reanimated.nodes.TransformNode$TransformConfig: TransformNode$TransformConfig()
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.google.android.gms.internal.firebase-auth-api.zzjn: zzjn()
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.swmansion.reanimated.NativeProxy$SensorSetter: void sensorSetter(float[])
com.google.android.gms.internal.firebase-auth-api.zzld: zzld()
com.google.android.gms.internal.firebase-auth-api.zzns: zzns()
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getExtension(android.content.Context,android.net.Uri)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
com.facebook.react.uimanager.BaseViewManager: void setResponderReject(android.view.View,boolean)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getSupportProgressBackgroundTintList()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void access$000(io.invertase.firebase.auth.ReactNativeFirebaseAuthModule,com.facebook.react.bridge.Promise,java.lang.Exception)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.nodes.Node: void forceUpdateMemoizedValue(java.lang.Object)
com.reactnativecommunity.picker.ReactPickerManager: void setNumberOfLines(com.reactnativecommunity.picker.ReactPicker,int)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.swmansion.reanimated.NativeProxy$EventHandler: NativeProxy$EventHandler(com.facebook.jni.HybridData)
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void updateProfile(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
com.google.android.gms.internal.firebase-auth-api.zzkl: zzkl()
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.gms.internal.measurement.zzmy: zzmy()
com.facebook.react.fabric.SurfaceHandlerBinding: void setPropsNative(com.facebook.react.bridge.NativeMap)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$addAuthStateListener$0(java.lang.String,com.google.firebase.auth.FirebaseAuth)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.facebook.react.bridge.WritableMap multiFactorInfoToMap(com.google.firebase.auth.MultiFactorInfo)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int getOpacity()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
com.google.android.gms.internal.firebase-auth-api.zzadg: zzadg()
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
com.google.android.gms.internal.base.zac: zac()
com.firebase.ui.auth.ui.phone.SubmitConfirmationCodeFragment: SubmitConfirmationCodeFragment()
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.swmansion.rnscreens.SearchBarView: java.lang.String getPlaceholder()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: boolean getShowProgressBackground()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.google.android.material.internal.FlowLayout: int getRowCount()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void start()
com.airbnb.lottie.model.CubicCurveData: CubicCurveData()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.airbnb.lottie.LottieAnimationView: void setCompositionTask(com.airbnb.lottie.LottieTask)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.firebase.ui.auth.ui.email.WelcomeBackPasswordPrompt: WelcomeBackPasswordPrompt()
androidx.cardview.widget.CardView: float getCardElevation()
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: void setConstantState(me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState)
com.google.android.gms.dynamite.zzn: zzn()
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
okhttp3.ResponseBody$Companion: ResponseBody$Companion()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] values()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: AppMeasurement$ConditionalUserProperty()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSupportProgressTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
com.google.android.gms.internal.measurement.zzgg: zzgg()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setColorFilter(android.graphics.ColorFilter)
okhttp3.Request$Builder: Request$Builder()
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl: void access$300(com.facebook.react.bridge.CatalystInstanceImpl)
me.zhanghai.android.materialprogressbar.BaseDrawable: BaseDrawable()
com.yalantis.ucrop.view.TransformImageView: android.graphics.Bitmap getViewBitmap()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.views.slider.ReactSliderManager: void setValue(android.view.View,double)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.constraintlayout.widget.Barrier: void setType(int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.airbnb.lottie.LottieAnimationView: void setImageResource(int)
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
com.airbnb.lottie.LottieAnimationView: void setMaxProgress(float)
com.google.android.gms.internal.firebase-auth-api.zzjq: zzjq()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater: void keyboardEventDataUpdater(int,int)
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.yalantis.ucrop.view.CropImageView: com.yalantis.ucrop.callback.CropBoundsChangeListener getCropBoundsChangeListener()
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.android.gms.internal.measurement.zzfe: zzfe()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.ResultCollector access$800(com.reactnative.ivpusic.imagepicker.PickerModule)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.google.firebase.auth.FirebaseUser: FirebaseUser()
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setScrollingListener(com.yalantis.ucrop.view.widget.HorizontalProgressWheelView$ScrollingListener)
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.swmansion.reanimated.ReanimatedModule: void onHostResume()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzaay: zzaay()
com.google.android.material.chip.Chip: float getTextEndPadding()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.firebase.ui.auth.ui.email.EmailLinkErrorRecoveryActivity: EmailLinkErrorRecoveryActivity()
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(android.view.View,java.lang.String)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion()
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(android.view.View,boolean)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
com.google.android.material.datepicker.OnSelectionChangedListener: OnSelectionChangedListener()
com.swmansion.rnscreens.SearchBarManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.uimanager.ReanimatedUIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType[] values()
com.facebook.react.bridge.Arguments: Arguments()
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean onLevelChange(int)
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.google.android.gms.internal.measurement.zzjx: com.google.android.gms.internal.measurement.zzjx[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
com.firebase.ui.auth.ui.email.WelcomeBackEmailLinkPrompt: void onClick(android.view.View)
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
com.swmansion.reanimated.nodes.Node: void markUpdated()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.swmansion.rnscreens.SearchBarView: void setTextColor(java.lang.Integer)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$verifyBeforeUpdateEmail$17(com.google.firebase.auth.FirebaseAuth,com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
com.facebook.react.fabric.FabricUIManager: void onHostPause()
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.uimanager.ReanimatedUIManager: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.yalantis.ucrop.view.OverlayView: void setTargetAspectRatio(float)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayModeNative(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: SingleHorizontalProgressDrawable(android.content.Context)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
kotlin.jvm.internal.Intrinsics: Intrinsics()
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(java.util.EnumSet)
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceIdNative(int)
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
com.facebook.react.bridge.ReadableNativeMap$1: java.util.Map$Entry next()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.facebook.hermes.intl.IntlTextUtils: IntlTextUtils()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.Boolean isRunningInTestLab()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.firebase.ui.auth.ui.phone.PhoneActivity: PhoneActivity()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void promiseNoUser(com.facebook.react.bridge.Promise,java.lang.Boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.facebook.react.fabric.Binding: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData access$1000(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: RNGestureHandlerRootViewManager()
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.google.android.gms.internal.firebase-auth-api.zznw: zznw()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String,com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.BaseDrawable: void setTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.facebook.jni.DestructorThread$1: void run()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.lang.String access$102(io.invertase.firebase.auth.ReactNativeFirebaseAuthModule,java.lang.String)
com.google.firebase.installations.remote.TokenResult: TokenResult()
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: boolean isRunning()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onTouchEvent(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzaap: zzaap()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: IndeterminateCircularProgressDrawable$RingRotation(me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$1)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.facebook.react.bridge.ReactBridge: ReactBridge()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.react.bridge.ReactContext: void destroy()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
com.facebook.hermes.intl.Collator: Collator(java.util.List,java.util.Map)
com.google.android.gms.internal.firebase-auth-api.zzmw: zzmw()
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$createUserWithEmailAndPassword$4(com.facebook.react.bridge.Promise,com.google.firebase.auth.AuthResult)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: void setConfiguration(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
androidx.collection.LongSparseArray: LongSparseArray()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(android.view.View,boolean)
com.google.android.gms.internal.firebase-auth-api.zzdw: zzdw()
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.swmansion.reanimated.ReanimatedModule: ReanimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.swmansion.rnscreens.SearchBarView: boolean getAutoFocus()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(android.view.View,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
com.google.firebase.auth.internal.GenericIdpActivity: GenericIdpActivity()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$confirmationResultConfirm$26(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setLastScrollDispatchTime(long)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: void drawRing(android.graphics.Canvas,android.graphics.Paint,float,float)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.firebase.ui.auth.ui.InvisibleFragmentBase: InvisibleFragmentBase()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.views.modal.ModalHostShadowNode: ModalHostShadowNode()
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostResume()
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.firebase.ui.auth.data.remote.GoogleSignInHandler: GoogleSignInHandler(android.app.Application)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.facebook.hermes.intl.LocaleIdentifier: LocaleIdentifier()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X: Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: ObjectAnimatorCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.facebook.react.animated.AnimationDriver: AnimationDriver()
com.facebook.react.uimanager.ComponentNameResolverManager: void staticInit()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void finalizeMultiFactorEnrollment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.reactnative.ivpusic.imagepicker.PickerModule: void deleteRecursive(java.io.File)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.firebase.ui.auth.viewmodel.email.EmailLinkSignInHandler: EmailLinkSignInHandler(android.app.Application)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
me.zhanghai.android.materialprogressbar.internal.ThemeUtils: int getColorFromAttrRes(int,int,android.content.Context)
com.google.android.gms.internal.measurement.zzbl: com.google.android.gms.internal.measurement.zzbl[] values()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.yalantis.ucrop.view.TransformImageView: void setTransformImageListener(com.yalantis.ucrop.view.TransformImageView$TransformImageListener)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(android.view.View,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zznx: zznx()
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: BottomSheetBehavior$BottomSheetCallback()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] values()
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.google.android.gms.internal.firebase-auth-api.zzmn: zzmn()
com.facebook.react.modules.debug.AnimationsDebugModule: void invalidate()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$resolveMultiFactorCredential$25(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.google.android.gms.internal.firebase-auth-api.zzmt: zzmt()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.gms.internal.auth-api.zbc: zbc()
com.reactcommunity.rndatetimepicker.DatePickerModule: java.lang.String getName()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void start()
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
com.firebase.ui.auth.ui.idp.WelcomeBackIdpPrompt: WelcomeBackIdpPrompt()
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
com.facebook.react.fabric.events.EventEmitterWrapper: EventEmitterWrapper()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
me.zhanghai.android.materialprogressbar.internal.ThemeUtils: float getFloatFromAttrRes(int,float,android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsGetListeners(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
com.reactnativecommunity.picker.ReactPickerManager: void updateExtraData(com.reactnativecommunity.picker.ReactPicker,java.lang.Object)
com.facebook.react.turbomodule.core.TurboModuleManager$1: TurboModuleManager$1(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.firebase.ui.auth.ui.idp.SingleSignInActivity: SingleSignInActivity()
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: void calculateXYValues(android.graphics.Path,float[],float[])
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.facebook.react.uimanager.ReanimatedUIManager: void onBatchComplete()
me.zhanghai.android.materialprogressbar.ShowBackgroundDrawable: boolean getShowBackground()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getIntrinsicWidth()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: ObjectAnimatorCompatBase()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.facebook.react.views.text.ReactTextInlineImageShadowNode: ReactTextInlineImageShadowNode()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getSecondaryProgressTintMode()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminate(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void onPreparePaint(android.graphics.Paint)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
com.yalantis.ucrop.UCropActivity: UCropActivity()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.ViewGroup)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.facebook.react.bridge.ReadableArray: int size()
com.google.android.gms.internal.measurement.zzkq: com.google.android.gms.internal.measurement.zzkq[] values()
com.google.android.gms.internal.auth-api-phone.zzc: zzc()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier access$100(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList access$300(com.facebook.react.fabric.FabricUIManager)
com.google.android.gms.internal.firebase-auth-api.zzne: zzne()
com.google.android.gms.tasks.Task: Task()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setTint(int)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] values()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zznm: zznm()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100()
com.facebook.react.fabric.FabricUIManager: void onCatalystInstanceDestroy()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.firebase.ui.auth.ui.email.EmailActivity: EmailActivity()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
com.google.android.gms.internal.firebase-auth-api.zzzr: zzzr()
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
com.facebook.react.uimanager.ReanimatedUIManager: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.swmansion.reanimated.CopiedEvent$1: CopiedEvent$1(com.swmansion.reanimated.CopiedEvent)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
com.google.android.gms.internal.measurement.zzje: zzje()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.google.android.material.shape.ShapePath$ShadowCompatOperation: ShapePath$ShadowCompatOperation()
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData initHybrid()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
kotlin.internal.PlatformImplementations: PlatformImplementations()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setIndeterminateTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: TurboModuleManager$TurboModuleHolder()
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.google.firebase.auth.OAuthCredential: OAuthCredential()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean setLayoutDirection(int,int)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: ObjectAnimatorCompatLollipop()
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$finalizeMultiFactorEnrollment$24(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.reactnativecommunity.picker.ReactPickerManager: void setSelected(com.reactnativecommunity.picker.ReactPicker,int)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
com.facebook.react.uimanager.ReanimatedUIManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: android.graphics.ColorFilter getColorFilter()
com.swmansion.rnscreens.SearchBarManager: void setAutoFocus(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: int addDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzfj: zzfj()
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: int getIntrinsicHeight()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$checkActionCode$29(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.turbomodule.core.TurboModuleManager$2: TurboModuleManager$2(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.facebook.react.uimanager.events.PointerEvent: PointerEvent()
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.facebook.react.bridge.JavaScriptContextHolder: long get()
com.facebook.jni.DestructorThread$Destructor: void destruct()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropMode(int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesGetAll(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.google.android.gms.internal.firebase-auth-api.zzbd: zzbd()
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: void onPreparePaint(android.graphics.Paint)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.facebook.react.uimanager.LayoutShadowNode: void setGap(float)
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSupportProgressTintList(android.content.res.ColorStateList)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.google.android.gms.internal.measurement.zzgc: zzgc()
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
com.airbnb.lottie.LottieAnimationView: void setSafeMode(boolean)
com.facebook.react.ReactRootView: int getRootViewTag()
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.google.android.gms.internal.firebase-auth-api.zzabh: zzabh()
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.lang.String,int,java.util.List,com.facebook.react.animated.ValueAnimatedNode)
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void removeListeners(java.lang.Integer)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$300(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(android.view.View,java.lang.Integer)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] values()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
com.facebook.react.common.futures.SimpleSettableFuture: SimpleSettableFuture()
com.facebook.react.modules.core.ReactChoreographer: ReactChoreographer()
com.google.android.gms.internal.measurement.zzha: zzha()
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.google.android.gms.internal.firebase-auth-api.zzacz: zzacz()
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
com.reactcommunity.rndatetimepicker.TimePickerModule: android.os.Bundle access$300(com.reactcommunity.rndatetimepicker.TimePickerModule,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: void setShowBackground(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.google.android.gms.internal.measurement.zzfh: zzfh()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
com.google.android.gms.internal.firebase-auth-api.zzoh: zzoh()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.google.android.gms.internal.measurement.zzkt: zzkt()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubview createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: void calculateXYValues(android.graphics.Path,int[],int[])
com.google.android.gms.internal.firebase-auth-api.zzjs: zzjs()
com.facebook.jni.HybridClassBase: HybridClassBase()
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.reactcommunity.rndatetimepicker.DatePickerModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.reactcommunity.rndatetimepicker.DatePickerModule)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.views.progressbar.ProgressBarShadowNode: ProgressBarShadowNode()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.reactnativecommunity.picker.ReactPicker: void setOnFocusListener(com.reactnativecommunity.picker.ReactPicker$OnFocusListener)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: void stop()
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidGetPlayServicesStatus(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void logNotAvailable(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.airbnb.lottie.LottieAnimationView: float getProgress()
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.swmansion.rnscreens.SearchBarView: void setShouldOverrideBackButton(boolean)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] values()
com.facebook.yoga.YogaNative: void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(long,boolean)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.facebook.react.uimanager.ViewManager: ViewManager()
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
androidx.startup.InitializationProvider: InitializationProvider()
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void removeIdTokenListener(java.lang.String)
com.google.android.material.button.MaterialButton: void setElevation(float)
androidx.constraintlayout.solver.widgets.ConstraintWidget: ConstraintWidget()
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec: void dismiss(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.google.android.gms.internal.measurement.zzc: zzc()
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] values()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$signInWithEmailAndPassword$7(com.facebook.react.bridge.Promise,java.lang.Exception)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setUseIntrinsicPadding(boolean)
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int getModuleId()
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
com.facebook.jni.HybridData: boolean isValid()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
me.zhanghai.android.materialprogressbar.Interpolators: Interpolators()
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes getInputType()
androidx.collection.SparseArrayCompat: SparseArrayCompat()
com.airbnb.lottie.LottieAnimationView: float getSpeed()
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
androidx.constraintlayout.widget.R$id: R$id()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.recyclerview.widget.GapWorker$Task: GapWorker$Task()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: void start()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setColorFilter(android.graphics.ColorFilter)
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.reactnativecommunity.picker.ReactDialogPickerManager: com.reactnativecommunity.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: void configureCropperColors(com.yalantis.ucrop.UCrop$Options)
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.reactnativecommunity.picker.ReactPickerManager: void receiveCommand(com.reactnativecommunity.picker.ReactPicker,int,com.facebook.react.bridge.ReadableArray)
com.google.android.gms.internal.firebase-auth-api.zzzx: zzzx()
com.facebook.react.modules.core.TimingModule: void onHostPause()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: RNGestureHandlerButtonViewManager()
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.firebase.ui.auth.ui.email.TroubleSigningInFragment: TroubleSigningInFragment()
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.reactcommunity.rndatetimepicker.DatePickerModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.facebook.hermes.intl.DateTimeFormat: java.util.List formatToParts(double)
com.swmansion.rnscreens.SearchBarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: android.graphics.drawable.Drawable newDrawable()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.facebook.yoga.YogaNative: void jni_YGNodeFreeJNI(long)
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable: void setUseIntrinsicPadding(boolean)
com.google.android.gms.internal.firebase-auth-api.zzxl: zzxl()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(android.view.View,java.lang.String)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setUseIntrinsicPadding(boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithExceptionMap(com.facebook.react.bridge.Promise,java.lang.Exception)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void startAnimationForTag(int,java.lang.String,java.util.Map)
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzgl: zzgl()
com.google.android.gms.internal.common.zzc: zzc()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean isConstantSize()
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: NativeDevSplitBundleLoaderSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.google.android.gms.internal.measurement.zzff: zzff()
com.swmansion.reanimated.ReanimatedModule: void attachEvent(int,java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean setVisible(boolean,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.react.animated.NativeAnimatedModule: java.lang.String getName()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void updateDensity(android.content.res.Resources)
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesClearAll(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String nextKey()
com.google.firebase.auth.internal.zzw: zzw()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void setAutoRetrievedSmsCodeForPhoneNumber(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: ReactNativeFirebaseAuthModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.gms.internal.firebase-auth-api.zzku: zzku()
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.swmansion.rnscreens.Screen: void setNavigationBarColor(java.lang.Integer)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$applyActionCode$28(com.google.firebase.auth.FirebaseAuth,com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] values()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getExclusive()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onCatalystInstanceDestroy()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.google.android.gms.internal.firebase-auth-api.zzagd: com.google.android.gms.internal.firebase-auth-api.zzagd[] values()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.yalantis.ucrop.view.CropImageView: float getMinScale()
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.OverlayView getOverlayView()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.gms.internal.firebase-auth-api.zzos: zzos()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable: boolean getUseIntrinsicPadding()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.yalantis.ucrop.view.GestureCropImageView: void setDoubleTapScaleSteps(int)
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: AnimationScaleListDrawableCompat(me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState,android.content.res.Resources,me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$1)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager$ViewState: com.swmansion.reanimated.layoutReanimation.AnimationsManager$ViewState valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.reactnativecommunity.picker.ReactDropdownPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragment getFragment()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.gms.internal.firebase-auth-api.zzki: zzki()
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.yalantis.ucrop.view.TransformImageView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.facebook.react.bridge.ReadableNativeArray: int size()
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(android.view.View,int)
com.google.android.gms.internal.firebase-auth-api.zzbz: zzbz()
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour valueOf(java.lang.String)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
com.swmansion.rnscreens.SearchBarView: void setInputType(com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor(java.lang.String)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.Scheduler: void triggerUI()
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] values()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.events.TouchEvent: TouchEvent()
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: void startCropping(android.app.Activity,android.net.Uri)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setTint(int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setTint(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$signInWithCustomToken$10(com.facebook.react.bridge.Promise,com.google.firebase.auth.AuthResult)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.yalantis.ucrop.view.GestureCropImageView: void setRotateEnabled(boolean)
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: void access$400(com.facebook.react.bridge.CatalystInstanceImpl)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void setConstantSize(boolean)
com.reactcommunity.rndatetimepicker.DatePickerModule: void dismiss(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback access$700(com.facebook.react.fabric.FabricUIManager)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
com.swmansion.reanimated.NativeProxy: float[] measure(int)
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzaba: zzaba()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: DrawableContainerCompat$DrawableContainerState(me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState,me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat,android.content.res.Resources)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void setExitFadeDuration(int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback: me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
io.invertase.firebase.common.ReactNativeFirebaseModule: void removeEventListeningExecutor(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void setAutomaticDataCollectionEnabled(java.lang.String,java.lang.Boolean)
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.google.android.material.chip.Chip: float getCloseIconSize()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.bridge.WritableArray: void pushNull()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.google.android.gms.internal.firebase-auth-api.zzzt: zzzt()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: int getOpacity()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceIdNative()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] values()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: IndeterminateHorizontalProgressDrawable$RectTransformX(me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX)
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
com.airbnb.lottie.LottieAnimationView: boolean getMaintainOriginalImageBounds()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.common.time.MonotonicClock: long now()
com.google.android.gms.internal.firebase-auth-api.zzke: zzke()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.airbnb.lottie.LottieAnimationView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
okhttp3.Cookie$Builder: Cookie$Builder()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.airbnb.lottie.LottieDrawable: LottieDrawable()
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
me.zhanghai.android.materialprogressbar.ShowBackgroundDrawable: void setShowBackground(boolean)
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_START: Interpolators$TRIM_PATH_START()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider)
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void confirmPasswordReset(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.reactnativecommunity.picker.ReactPickerManager: ReactPickerManager()
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
com.google.android.gms.internal.measurement.zzcb: com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getScrollEnabled()
com.facebook.react.animated.ValueAnimatedNode: ValueAnimatedNode()
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.swmansion.rnscreens.CustomSearchView: boolean getOverrideBackAction()
com.reactnative.ivpusic.imagepicker.PickerModule: java.io.File createVideoFile()
com.google.android.gms.internal.firebase-auth-api.zzaef: zzaef()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.Barrier: int getMargin()
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions()
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.util.Map getConstants()
com.facebook.react.modules.appstate.AppStateModule: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: void onHostResume()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor(java.lang.String)
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: java.lang.reflect.Method getValueAnimatorGetDurationScaleMethod()
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.facebook.yoga.YogaConfigJNIBase: YogaConfigJNIBase()
com.facebook.react.uimanager.ReanimatedUIManager: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.fabric.SurfaceHandlerBinding: void stopNative()
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
com.firebase.ui.auth.viewmodel.email.RecoverPasswordHandler: RecoverPasswordHandler(android.app.Application)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.perflogger.NativeModulePerfLogger: NativeModulePerfLogger()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setMiddleLineColor(int)
com.facebook.react.bridge.JSIModule: void initialize()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void draw(android.graphics.Canvas)
androidx.constraintlayout.solver.ArrayRow: ArrayRow()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getExitFadeDuration()
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec: void dismiss(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
me.zhanghai.android.materialprogressbar.BaseDrawable: int getAlpha()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getName()
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.facebook.react.uimanager.ComponentNameResolverManager: void installJSIBindings()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.ColorFilter getColorFilter()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.reactcommunity.rndatetimepicker.DatePickerModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.reactcommunity.rndatetimepicker.DatePickerModule)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setTint(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.google.android.gms.internal.firebase-auth-api.zzzw: zzzw()
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: MaterialProgressBar$TintInfo(me.zhanghai.android.materialprogressbar.MaterialProgressBar$1)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.google.android.gms.internal.measurement.zzio: zzio()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.uimanager.ViewGroupManager: boolean shouldPromoteGrandchildren()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.facebook.react.bridge.Promise)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactVirtualTextShadowNode: ReactVirtualTextShadowNode()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.google.android.gms.internal.measurement.zzhn: zzhn()
com.swmansion.reanimated.ReanimatedModule: void connectNodes(int,int)
com.facebook.react.views.slider.ReactSliderManager: void setValue(com.facebook.react.views.slider.ReactSlider,double)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String,java.lang.Throwable)
com.yalantis.ucrop.view.OverlayView: com.yalantis.ucrop.callback.OverlayViewChangeListener getOverlayViewChangeListener()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.swmansion.rnscreens.SearchBarView: boolean getShouldOverrideBackButton()
com.facebook.soloader.SoLoader: SoLoader()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.facebook.react.views.slider.ReactSlider: void setStep(double)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean isAutoMirrored()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: void setTintList(android.content.res.ColorStateList)
com.facebook.hermes.intl.NumberFormat: java.util.Map resolvedOptions()
com.facebook.react.views.scroll.ReactScrollView: void setScrollEventThrottle(int)
com.google.android.gms.internal.firebase-auth-api.zzlp: zzlp()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzabc: zzabc()
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.reactnativecommunity.picker.TextViewImpl: TextViewImpl(android.content.Context,android.util.AttributeSet)
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: ModuleDescriptor()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity valueOf(java.lang.String)
com.swmansion.reanimated.NativeProxy: long getCurrentTime()
com.google.android.gms.internal.firebase-auth-api.zzoi: zzoi()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(android.view.View,java.lang.String)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
com.facebook.react.views.text.ReactFontManager$AssetFontFamily: ReactFontManager$AssetFontFamily()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$getIdTokenResult$34(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.google.firebase.StartupTime: StartupTime()
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setUseIntrinsicPadding(boolean)
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
me.zhanghai.android.materialprogressbar.AnimationScaleIndeterminateCircularProgressDrawable: me.zhanghai.android.materialprogressbar.IntrinsicPaddingDrawable getIntrinsicPaddingDrawable()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(android.view.View,java.lang.String)
com.facebook.react.devsupport.LogBoxModule: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponderCapture(android.view.View,boolean)
com.airbnb.lottie.LottieAnimationView$UserActionTaken: com.airbnb.lottie.LottieAnimationView$UserActionTaken valueOf(java.lang.String)
com.reactnativecommunity.picker.ReactPickerManager: void setPrompt(com.reactnativecommunity.picker.ReactPicker,java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.reactcommunity.rndatetimepicker.TimePickerModule: TimePickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleUpperCase(java.util.List,java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void resolveMultiFactorCredential(com.google.firebase.auth.PhoneAuthCredential,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.soloader.SoSource: SoSource()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
com.google.android.gms.internal.firebase-auth-api.zzoy: com.google.android.gms.internal.firebase-auth-api.zzoy[] values()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
com.reactnativecommunity.picker.ReactPickerManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlin.jvm.internal.PropertyReference: PropertyReference()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.uimanager.BaseViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.google.android.gms.internal.firebase-auth-api.zznj: zznj()
com.facebook.react.devsupport.DoubleTapReloadRecognizer: DoubleTapReloadRecognizer()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseBorderlessDrawable()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(android.view.View,java.lang.Integer)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$delete$14(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.facebook.react.uimanager.LayoutShadowNode: void setColumnGap(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(android.view.View,boolean)
com.facebook.hermes.intl.NumberFormat: NumberFormat(java.util.List,java.util.Map)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.gms.internal.firebase-auth-api.zzacx: zzacx()
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: NativeCodeInitializer()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.facebook.hermes.intl.NumberFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
com.swmansion.gesturehandler.core.GestureHandler: GestureHandler()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setResizeMode(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.drawee.components.DraweeEventTracker: DraweeEventTracker()
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
com.google.android.gms.internal.firebase-auth-api.zzkk: zzkk()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.facebook.react.uimanager.ViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
com.facebook.react.modules.core.TimingModule: void invalidate()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
com.airbnb.lottie.LottieAnimationView: void setMaxFrame(int)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: int getAlpha()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.PerformanceTracker getPerformanceTracker()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle valueOf(java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.fabric.SurfaceHandler,android.content.Context,android.view.View)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: int getIntrinsicHeight()
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long)
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void computeConstantSize()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.google.android.material.textfield.CutoutDrawable: CutoutDrawable()
com.airbnb.lottie.LottieAnimationView: void setSpeed(float)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.internal.measurement.zzfs: zzfs()
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
com.reactnativecommunity.picker.ReactPickerManager: void setBackgroundColor(com.reactnativecommunity.picker.ReactPicker,int)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.gms.internal.firebase-auth-api.zzacy: com.google.android.gms.internal.firebase-auth-api.zzacy[] values()
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.String getKey()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.appcompat.widget.Toolbar: void setTitle(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getSecondaryProgressTintList()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: boolean isRunning()
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.ReanimatedModule: void createNode(int,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getNativeCallInvokerHolder()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int getMinimumWidth()
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: AndroidInfoHelpers()
com.reactnativecommunity.picker.ReactPickerManager: void updateExtraData(android.view.View,java.lang.Object)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
okhttp3.ResponseBody: ResponseBody()
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.airbnb.lottie.LottieAnimationView: float getMaxFrame()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void attachGestureHandler(int,int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.facebook.react.bridge.ReactContext: void setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.slider.ReactSlider: double getStepValue()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponder(android.view.View,boolean)
com.reactnativecommunity.picker.ReactPicker: void setDropdownIconRippleColor(int)
com.google.android.gms.internal.firebase-auth-api.zzadf: zzadf()
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void getIdTokenResult(java.lang.String,java.lang.Boolean,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleSetJSResponder(int,boolean)
com.facebook.react.uimanager.BaseViewManager: void setPointerOverCapture(android.view.View,boolean)
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
me.zhanghai.android.materialprogressbar.AnimationScaleIndeterminateCircularProgressDrawable: AnimationScaleIndeterminateCircularProgressDrawable(android.content.Context)
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setAspectRatio(com.yalantis.ucrop.model.AspectRatio)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzng: zzng()
com.google.firebase.auth.internal.zzbf: zzbf()
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void reload(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: ReactNativeFirebaseModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
me.zhanghai.android.materialprogressbar.BaseDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(android.view.View,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean getUseIntrinsicPadding()
com.google.android.gms.internal.firebase-auth-api.zzact: zzact()
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.gms.internal.firebase-auth-api.zzkq: zzkq()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.dialog.DialogModule: boolean access$000(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void clearJSResponder()
me.zhanghai.android.materialprogressbar.BaseDrawable: void setColorFilter(android.graphics.ColorFilter)
com.reactcommunity.rndatetimepicker.DatePickerModule: android.os.Bundle access$300(com.reactcommunity.rndatetimepicker.DatePickerModule,com.facebook.react.bridge.ReadableMap)
me.zhanghai.android.materialprogressbar.internal.DrawableCompat: DrawableCompat()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean access$000(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyProgressBackgroundTint()
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.firebase.ui.auth.data.client.AuthUiInitProvider: AuthUiInitProvider()
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onStateChange(com.swmansion.gesturehandler.core.GestureHandler,int,int)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.drawee.backends.pipeline.Fresco: Fresco()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getExceptionHandler()
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(com.swmansion.gesturehandler.react.RNGestureHandlerRootView)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater: NativeProxy$KeyboardEventDataUpdater(com.facebook.jni.HybridData)
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType valueOf(java.lang.String)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: AnimationScaleListDrawableCompat(me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState,android.content.res.Resources)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.airbnb.lottie.LottieAnimationView: void setAnimationFromUrl(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.google.android.gms.internal.measurement.zzej: zzej()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onHandlerUpdate(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcf)
com.facebook.react.devsupport.LogBoxModule: void invalidate()
com.facebook.react.fabric.FabricUIManager: void preInitializeViewManagers(java.util.List)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleLowerCase(java.util.List,java.lang.String)
com.google.android.gms.internal.measurement.zzbn: android.os.IBinder asBinder()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.google.android.gms.internal.firebase-auth-api.zznk: zznk()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.lifecycle.ViewModelStore: ViewModelStore()
com.google.android.material.shape.ShapePath$PathOperation: ShapePath$PathOperation()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setCurrentIndex(int)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: boolean getShowBackground()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.uimanager.BaseViewManager: void setResponderEnd(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setHotspot(float,float)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseBorderlessDrawable(boolean)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.google.android.material.chip.Chip: float getChipIconSize()
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.lifecycle.SavedStateHandle: SavedStateHandle()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void fixCanvasScalingAndColorFilterWhenHardwareAccelerated()
com.google.android.gms.internal.measurement.zzge: zzge()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void drawProgressRect(android.graphics.Canvas,me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX,android.graphics.Paint)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.fabric.CppViewMutationsWrapper: void runCppViewMutations()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.reactcommunity.rndatetimepicker.RNTimePickerDisplay: com.reactcommunity.rndatetimepicker.RNTimePickerDisplay[] values()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
okhttp3.Cache$Companion: Cache$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.gms.internal.measurement.zzfd: zzfd()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry getRegistry()
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate access$000(com.facebook.react.devsupport.LogBoxModule)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.firebase.ui.auth.AuthMethodPickerLayout: AuthMethodPickerLayout()
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSecondaryProgressTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void setGestureHandlerState(int,int)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding access$600(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.firebase.ui.auth.ui.email.CheckEmailFragment: CheckEmailFragment()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.google.firebase.auth.PhoneAuthCredential access$402(io.invertase.firebase.auth.ReactNativeFirebaseAuthModule,com.google.firebase.auth.PhoneAuthCredential)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: ReactNativeFirebaseUtilsModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.gms.internal.firebase-auth-api.zzot: zzot()
androidx.transition.TransitionSet: TransitionSet()
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewManager: android.view.View recycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.airbnb.lottie.LottieAnimationView: void setMaintainOriginalImageBounds(boolean)
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification[] values()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSupportIndeterminateTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
okhttp3.CipherSuite$Companion: CipherSuite$Companion()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCheckable(boolean)
androidx.collection.ArrayMap: ArrayMap()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute valueOf(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.google.android.gms.internal.firebase-auth-api.zzadr: zzadr()
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: void setShowBackground(boolean)
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(android.view.View,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
me.zhanghai.android.materialprogressbar.R$anim: R$anim()
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
com.airbnb.lottie.LottieAnimationView: void setTextDelegate(com.airbnb.lottie.TextDelegate)
com.yalantis.ucrop.view.GestureCropImageView: int getDoubleTapScaleSteps()
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTextColor()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String)
com.swmansion.rnscreens.SearchBarView: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void signInWithCustomToken(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] values()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_END: Interpolators$TRIM_PATH_END()
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateDataImpl()
com.google.android.gms.internal.measurement.zzgr: zzgr()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: java.util.Map getConstants()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$1: DrawableContainerCompat$1(me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode[] values()
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(android.view.View,boolean)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void addAuthStateListener(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: void setUseIntrinsicPadding(boolean)
com.airbnb.lottie.LottieAnimationView: int getRepeatCount()
com.facebook.react.ReactInstanceManager: void handleCxxError(java.lang.Exception)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.turbomodule.core.TurboModuleManager: void installJSIBindings()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.yalantis.ucrop.view.OverlayView: void setCropGridRowCount(int)
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
okhttp3.OkHttpClient: OkHttpClient()
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.firebase.ui.auth.data.remote.EmailSignInHandler: EmailSignInHandler(android.app.Application)
io.invertase.firebase.common.ReactNativeFirebaseModule: com.facebook.react.bridge.ReactContext getContext()
com.reactcommunity.rndatetimepicker.RNDatePickerDisplay: com.reactcommunity.rndatetimepicker.RNDatePickerDisplay valueOf(java.lang.String)
com.facebook.react.fabric.CppViewMutationsWrapper: CppViewMutationsWrapper()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.Dynamic: double asDouble()
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.facebook.react.bridge.WritableArray convertProviderData(java.util.List,com.google.firebase.auth.FirebaseUser)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setAutoMirrored(boolean)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setLoop(com.airbnb.lottie.LottieAnimationView,boolean)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void sendSignInLinkToEmail(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isDoneCreatingModule()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
me.zhanghai.android.materialprogressbar.R$color: R$color()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.ColorFilter getColorFilter()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(android.view.View,java.lang.Integer)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.reanimated.NativeProxy: void unregisterSensor(int)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$fetchSignInMethodsForEmail$35(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$sendEmailVerification$16(com.google.firebase.auth.FirebaseAuth,com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.facebook.react.bridge.CatalystInstanceImpl: void warnOnLegacyNativeModuleSystemUse()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type valueOf(java.lang.String)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$updateProfile$21(com.google.firebase.auth.FirebaseAuth,com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.swmansion.rnscreens.SearchBarView: void setHintTextColor(java.lang.Integer)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getChildCount()
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.firebase.auth.internal.zzbj: zzbj()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: AnimationScaleListDrawableCompat$AnimationScaleListState(me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState,me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat,android.content.res.Resources)
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
me.zhanghai.android.materialprogressbar.R$string: R$string()
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.google.android.gms.internal.firebase-auth-api.zzacn: zzacn()
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.gms.internal.firebase-auth-api.zzkc: zzkc()
com.facebook.imagepipeline.systrace.FrescoSystrace: FrescoSystrace()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: ViewInfoStore$InfoRecord()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: ResourceManagerInternal$DrawableDelegate()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.DefaultJSExceptionHandler: void handleException(java.lang.Exception)
com.reactnativecommunity.picker.ReactPicker: void setOnSelectListener(com.reactnativecommunity.picker.ReactPicker$OnSelectListener)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
me.zhanghai.android.materialprogressbar.R$drawable: R$drawable()
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object setValue(java.lang.Object)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void confirmationResultConfirm(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
kotlin.random.Random: Random()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.views.slider.ReactSliderManager: java.lang.Class getShadowNodeClass()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(android.view.View,java.lang.String)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean isStateful()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.animated.NativeAnimatedModule: void access$900(com.facebook.react.animated.NativeAnimatedModule,int)
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzzl: zzzl()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.google.firebase.heartbeatinfo.HeartBeatResult: HeartBeatResult()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setShouldBlockNativeResponder(android.view.View,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseDrawableOnForeground(boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: void addTurboModuleManagerDelegate(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: void init(android.content.Context)
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher access$000(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
me.zhanghai.android.materialprogressbar.BaseDrawable: android.graphics.ColorFilter getColorFilterForDrawing()
com.facebook.react.modules.network.NetworkingModule: void access$200(com.facebook.react.modules.network.NetworkingModule,int)
com.reactcommunity.rndatetimepicker.RNTimePickerDialogFragment: RNTimePickerDialogFragment()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
com.google.android.material.shape.ShapeAppearanceModel: ShapeAppearanceModel()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String getName()
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.facebook.react.modules.debug.DevSettingsModule: void reload()
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.facebook.react.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder)
com.reactnative.ivpusic.imagepicker.PickerModule: android.graphics.BitmapFactory$Options validateImage(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void applyTheme(android.content.res.Resources$Theme)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void removeConfigForTag(int)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.reactnativecommunity.picker.ReactDialogPickerManager: java.lang.String getName()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode valueOf(java.lang.String)
com.facebook.hermes.intl.Intl: Intl()
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: boolean isStateful()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(android.view.View,double)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
androidx.activity.ComponentActivity: ComponentActivity()
com.google.android.gms.internal.firebase-auth-api.zzkn: zzkn()
com.google.android.gms.internal.firebase-auth-api.zzacp: zzacp()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type[] values()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$signInAnonymously$3(com.facebook.react.bridge.Promise,java.lang.Exception)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.facebook.react.uimanager.ReanimatedUIManager: boolean canOverrideExistingModule()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.swmansion.reanimated.NativeProxy$EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver access$002(com.swmansion.reanimated.NativeProxy$EventHandler,com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver)
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBackgroundColor(int)
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: ReactSwitchManager$ReactSwitchShadowNode()
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.facebook.react.devsupport.LogBoxModule: void show()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,int)
com.google.android.gms.internal.firebase-auth-api.zzod: zzod()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
com.facebook.react.bridge.DynamicFromArray: int asInt()
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.reactnativecommunity.picker.ReactPicker: void setDropdownIconColor(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
com.google.android.material.shape.EdgeTreatment: EdgeTreatment()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName valueOf(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm valueOf(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X: Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck)
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyIndeterminateTint()
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType[] values()
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
kotlin.text.Charsets: Charsets()
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: int getIntrinsicHeight()
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
com.firebase.ui.auth.ui.email.EmailLinkPromptEmailFragment: EmailLinkPromptEmailFragment()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
com.facebook.react.modules.network.NetworkingModule: java.util.List access$400(com.facebook.react.modules.network.NetworkingModule)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void dropGestureHandler(int)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.WritableMap getImage(android.app.Activity,java.lang.String)
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: boolean getUseIntrinsicPadding()
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
com.facebook.react.uimanager.ReanimatedUIManager: void replaceExistingNonRootView(int,int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentPrefersCrossFadeTransitionsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.constraintlayout.solver.widgets.WidgetContainer: WidgetContainer()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
me.zhanghai.android.materialprogressbar.R$style: R$style()
com.google.android.gms.internal.firebase-auth-api.zzlj: zzlj()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSupportProgressBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: boolean getShowBackground()
com.facebook.react.fabric.CppViewMutationsWrapper: com.facebook.jni.HybridData initHybrid()
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
io.invertase.firebase.common.ReactNativeFirebaseModule: android.content.Context getApplicationContext()
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: SingleCircularProgressDrawable(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void createAllFutures()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerStateChangeEvent: RNGestureHandlerStateChangeEvent()
com.facebook.react.bridge.Dynamic: void recycle()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
com.google.android.material.chip.Chip: void setMaxLines(int)
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: void start()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackViewManager: void startTransitionRecursive(android.view.ViewGroup)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext)
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
com.facebook.react.bridge.ReactContext: void resetPerfStats()
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.ReactRootView: void setRootViewTag(int)
com.facebook.react.fabric.FabricUIManager: boolean access$500(com.facebook.react.fabric.FabricUIManager)
com.reactnativecommunity.picker.ReactPicker: void setStagedSelection(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$updateEmail$18(com.google.firebase.auth.FirebaseAuth,com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.hermes.intl.NumberFormat: java.util.List formatToParts(double)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.animated.NativeAnimatedModule: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadSoLibrary()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.swmansion.reanimated.NativeProxy: void updateProps(int,java.util.Map)
com.facebook.react.uimanager.ReanimatedUIManager: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.firebase.ui.auth.viewmodel.smartlock.SmartLockHandler: SmartLockHandler(android.app.Application)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
com.google.firebase.installations.local.PersistedInstallationEntry: PersistedInstallationEntry()
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.airbnb.lottie.LottieAnimationView$UserActionTaken: com.airbnb.lottie.LottieAnimationView$UserActionTaken[] values()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
me.zhanghai.android.materialprogressbar.MaterialProgressBar: MaterialProgressBar(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: void onDrawRect(android.graphics.Canvas,android.graphics.Paint)
com.google.android.gms.internal.ads_identifier.zzc: zzc()
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.google.android.gms.internal.measurement.zzjs: zzjs()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
androidx.emoji2.text.MetadataRepo$Node: MetadataRepo$Node()
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setShowBackground(boolean)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzx: zzx()
com.google.android.gms.internal.firebase-auth-api.zzll: zzll()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
com.airbnb.lottie.LottieAnimationView: boolean getClipToCompositionBounds()
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: java.util.List getComponents()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceName(com.airbnb.lottie.LottieAnimationView,java.lang.String)
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: void onDrawRect(android.graphics.Canvas,android.graphics.Paint)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzcb: zzcb()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeMap$2: boolean hasNextKey()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder access$900(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: void setAlpha(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: DrawableContainerCompat()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.facebook.react.modules.dialog.DialogModule: void invalidate()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.google.android.gms.internal.firebase-auth-api.zzlt: zzlt()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.google.android.gms.internal.firebase-auth-api.zzkx: zzkx()
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: boolean access$100(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.bridge.DefaultJSExceptionHandler: DefaultJSExceptionHandler()
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
com.google.android.material.chip.Chip: void setChecked(boolean)
androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
com.swmansion.gesturehandler.core.TapGestureHandler: TapGestureHandler()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(android.view.View,java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.firebase.ui.auth.viewmodel.ProviderSignInBase: ProviderSignInBase(android.app.Application)
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
com.yalantis.ucrop.view.OverlayView: android.graphics.RectF getCropViewRect()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void createUserWithEmailAndPassword(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
com.facebook.hermes.reactexecutor.HermesExecutor: boolean canLoadFile(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
com.google.android.gms.internal.firebase-auth-api.zzaaw: zzaaw()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onCatalystInstanceDestroy()
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String getName()
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.swmansion.reanimated.NativeProxy: void scrollTo(int,double,double,boolean)
com.swmansion.rnscreens.SearchBarManager: SearchBarManager()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: ReactScrollViewAccessibilityDelegate()
com.facebook.react.bridge.UIManager: void preInitializeViewManagers(java.util.List)
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void useEmulator(java.lang.String,java.lang.String,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling(int)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.facebook.react.TurboReactPackage: TurboReactPackage()
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getBase64StringFromFile(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setLastScrollDispatchTime(long)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForReanimated(com.facebook.react.uimanager.events.Event)
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.facebook.drawee.view.SimpleDraweeView: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyProgressTints()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.uimanager.UIManagerHelper: UIManagerHelper()
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: BaseProgressLayerDrawable(android.graphics.drawable.Drawable[],android.content.Context)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: int getIntrinsicHeight()
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.gms.internal.firebase-auth-api.zzxd: zzxd()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.emoji2.text.flatbuffer.MetadataItem: MetadataItem()
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void deleteApp(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X: Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState cloneConstantState()
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: IndeterminateHorizontalProgressDrawable(android.content.Context)
com.reactnative.ivpusic.imagepicker.PickerModule: PickerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.google.android.gms.internal.measurement.zzit: zzit()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void growArray(int,int)
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
me.zhanghai.android.materialprogressbar.BaseProgressDrawable: boolean getUseIntrinsicPadding()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int getMinimumHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.google.android.gms.internal.measurement.zzet: zzet()
com.google.android.gms.internal.firebase-auth-api.zzzj: zzzj()
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingRotation: IndeterminateCircularProgressDrawable$RingRotation()
com.google.android.gms.internal.measurement.zzfr: zzfr()
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.Binding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,java.lang.Object,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,java.lang.Object,com.facebook.react.fabric.CppComponentRegistry)
com.google.android.gms.internal.measurement.zzfb: zzfb()
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X: Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X()
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$updatePhoneNumber$20(com.google.firebase.auth.FirebaseAuth,com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setAlpha(int)
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.hermes.intl.DateTimeFormat: DateTimeFormat(java.util.List,java.util.Map)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTintColor()
com.firebase.ui.auth.ui.phone.SpacedEditText: SpacedEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.reactnativecommunity.picker.TextViewImpl: void setHorizontallyScrolling(boolean)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: void onDrawRing(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.airbnb.lottie.LottieAnimationView: float getMinFrame()
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.BaseViewManager: void setPointerMoveCapture(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: java.lang.reflect.Field getValueAnimatorSDurationScaleField()
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)
com.yalantis.ucrop.view.TransformImageView: float getCurrentScale()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.google.android.gms.internal.firebase-auth-api.zzpd: zzpd()
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
com.google.android.gms.internal.firebase-auth-api.zzaat: zzaat()
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.google.android.gms.internal.measurement.zzfo: zzfo()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setSubmitBehavior(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(com.swmansion.rnscreens.SearchBarView,java.lang.String)
okio.Options$Companion: Options$Companion()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$addIdTokenListener$1(java.lang.String,com.google.firebase.auth.FirebaseAuth)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.firebase.ui.auth.ui.InvisibleActivityBase: InvisibleActivityBase()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.swmansion.reanimated.CopiedEvent$1: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$signInWithCustomToken$11(com.facebook.react.bridge.Promise,java.lang.Exception)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressBackgroundTintList(android.content.res.ColorStateList)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
com.yalantis.ucrop.view.OverlayView: void setCropGridCornerColor(int)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactActivity: ReactActivity()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.google.android.gms.internal.firebase-auth-api.zzmz: zzmz()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
com.airbnb.lottie.LottieAnimationView: void setIgnoreDisabledSystemAnimations(boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.blob.BlobModule: void initialize()
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.reactnativecommunity.picker.ReactPickerManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.gms.internal.measurement.zzmp: zzmp()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void setEnterFadeDuration(int)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManager: java.util.Stack getRecyclableViewStack(int)
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.facebook.react.bridge.ReadableNativeMap$1$1: ReadableNativeMap$1$1(com.facebook.react.bridge.ReadableNativeMap$1,int)
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
org.reactnative.maskedview.RNCMaskedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setRenderMode(com.airbnb.lottie.LottieAnimationView,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.constraintlayout.widget.ConstraintSet$Constraint: ConstraintSet$Constraint()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.gms.internal.measurement.zzgj: zzgj()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
com.facebook.react.bridge.DynamicFromObject: void recycle()
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig[] values()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.firebase.ui.auth.viewmodel.email.EmailProviderResponseHandler: EmailProviderResponseHandler(android.app.Application)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.firebase.ui.auth.ui.idp.AuthMethodPickerActivity: AuthMethodPickerActivity()
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
com.facebook.react.uimanager.ReanimatedUIManager: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: void setResponderStart(android.view.View,boolean)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.swmansion.reanimated.ReanimatedModule: void disconnectNodes(int,int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleColor()
com.reactnative.ivpusic.imagepicker.PickerModule: java.io.File createExternalStoragePrivateFile(android.content.Context,android.net.Uri)
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
com.firebase.ui.auth.viewmodel.SignInViewModelBase: SignInViewModelBase(android.app.Application)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: void setTrimPathStart(float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
com.swmansion.rnscreens.SearchBarManager: void setTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$BlockInvalidateCallback: void invalidateDrawable(android.graphics.drawable.Drawable)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getMimeType(java.lang.String)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.facebook.react.bridge.JavaJSExecutor: void close()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.reactnativecommunity.picker.ReactPicker: void setBackgroundColor(int)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.swmansion.gesturehandler.react.RNGestureHandlerTouchEvent: RNGestureHandlerTouchEvent()
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeY(int)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
com.airbnb.lottie.LottieAnimationView: void setFallbackResource(int)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.google.android.material.button.MaterialButton: int getIconSize()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.google.android.gms.internal.measurement.zzer: zzer()
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setUseIntrinsicPadding(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
com.swmansion.reanimated.nodes.EventNode: java.lang.Object evaluate()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.google.android.gms.internal.measurement.zzgy: zzgy()
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
com.reactcommunity.rndatetimepicker.TimePickerModule: void dismiss(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: com.airbnb.lottie.LottieAnimationView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.google.android.gms.internal.firebase-auth-api.zzmg: zzmg()
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: boolean isStateful()
com.swmansion.reanimated.NativeProxy$SensorSetter: NativeProxy$SensorSetter(com.facebook.jni.HybridData)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.BaseProgressDrawable: BaseProgressDrawable()
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable$RingPathTransform: IndeterminateCircularProgressDrawable$RingPathTransform()
com.google.android.material.chip.Chip: void setElevation(float)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getCapacity()
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setExclusive(boolean)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void setAppVerificationDisabledForTesting(java.lang.String,boolean,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.swmansion.reanimated.layoutReanimation.AnimationsManager$ViewState: com.swmansion.reanimated.layoutReanimation.AnimationsManager$ViewState[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.firebase.ui.auth.data.remote.GenericIdpSignInHandler: GenericIdpSignInHandler(android.app.Application)
me.zhanghai.android.materialprogressbar.BasePaintDrawable: void onDraw(android.graphics.Canvas,int,int)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl)
com.airbnb.lottie.LottieAnimationView: void setMinFrame(int)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
me.zhanghai.android.materialprogressbar.BaseDrawable: boolean isStateful()
com.facebook.react.fabric.FabricUIManager: boolean access$400(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: void setTint(int)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.debug.DevSettingsModule)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void dismissActionSheet()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.swmansion.reanimated.ReanimatedModule: void setValue(int,java.lang.Double)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.yalantis.ucrop.view.TransformImageView: void setMaxBitmapSize(int)
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.facebook.react.fabric.Binding: void setPixelDensity(float)
com.swmansion.reanimated.ReanimatedModule: void disconnectNodeFromView(int,int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.google.android.gms.signin.internal.zaa: zaa()
com.google.android.gms.internal.firebase-auth-api.zzado: com.google.android.gms.internal.firebase-auth-api.zzado[] values()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean isStateful()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode[] values()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.facebook.react.uimanager.ReanimatedUIManager: void removeSubviewsFromContainerWithID(int)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setGravity(int)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month valueOf(java.lang.String)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
com.swmansion.gesturehandler.core.NativeViewGestureHandler: NativeViewGestureHandler()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void promiseWithAuthResult(com.google.firebase.auth.AuthResult,com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.reactnativecommunity.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseDrawableOnForeground()
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponderCapture(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec: NativeModuleTimePickerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
com.facebook.react.modules.websocket.WebSocketModule: void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.google.android.gms.internal.firebase-auth-api.zzoa: zzoa()
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
com.facebook.react.fabric.Binding: void stopSurface(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableNativeMap$1: ReadableNativeMap$1(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[],java.lang.Object[])
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.reactcommunity.rndatetimepicker.RNDatePickerDialogFragment: RNDatePickerDialogFragment()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void onAfterUpdateTransaction(com.airbnb.lottie.LottieAnimationView)
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.WritableMap getSelection(android.app.Activity,android.net.Uri,boolean)
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: void stop()
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: CircularRevealWidget$RevealInfo()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void setLanguageCode(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource getImageSource()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: BackgroundExecutor$NamedThreadFactory(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$reauthenticateWithCredential$32(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.SearchBarView: boolean getShouldShowHintSearchIcon()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: android.graphics.drawable.Drawable getCurrent()
com.airbnb.lottie.LottieAnimationView: void setComposition(com.airbnb.lottie.LottieComposition)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
org.reactnative.maskedview.RNCMaskedViewManager: org.reactnative.maskedview.RNCMaskedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.gms.internal.firebase-auth-api.zzok: zzok()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback access$200(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView,java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.swmansion.reanimated.Scheduler: com.facebook.jni.HybridData initHybrid()
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.firebase.ui.auth.util.FirebaseAuthError: com.firebase.ui.auth.util.FirebaseAuthError[] values()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
com.swmansion.reanimated.NativeProxy: void unsubscribeFromKeyboardEvents(int)
com.yalantis.ucrop.view.OverlayView: void setShowCropGrid(boolean)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat$AnimationScaleListState: void mutate()
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
okhttp3.RequestBody$Companion: RequestBody$Companion()
me.zhanghai.android.materialprogressbar.R$integer: R$integer()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory: RNGestureHandlerModule$HandlerFactory()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue access$300(com.facebook.react.animated.NativeAnimatedModule)
com.google.android.gms.internal.measurement.zzkc: zzkc()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
okhttp3.EventListener: EventListener()
com.google.android.gms.internal.firebase-auth-api.zznp: zznp()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
com.facebook.react.fabric.StateWrapperImpl: StateWrapperImpl()
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$createUserWithEmailAndPassword$5(com.facebook.react.bridge.Promise,java.lang.Exception)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
me.zhanghai.android.materialprogressbar.BaseDrawable: int getOpacity()
com.google.android.gms.internal.measurement.zzjz: zzjz()
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String getName()
com.reactnative.ivpusic.imagepicker.IvpusicImagePickerFileProvider: IvpusicImagePickerFileProvider()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void access$500(io.invertase.firebase.auth.ReactNativeFirebaseAuthModule,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)
com.firebase.ui.auth.viewmodel.idp.SocialProviderResponseHandler: SocialProviderResponseHandler(android.app.Application)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.google.android.gms.safetynet.SafetyNetApi$AttestationResponse: SafetyNetApi$AttestationResponse()
com.swmansion.reanimated.nodes.EventNode: java.lang.Double evaluate()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.airbnb.lottie.LottieAnimationView: void setRenderMode(com.airbnb.lottie.RenderMode)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize getAutoCapitalize()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
com.firebase.ui.auth.ui.phone.PhoneNumberVerificationHandler: PhoneNumberVerificationHandler(android.app.Application)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzafx: zzafx()
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges valueOf(java.lang.String)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long,boolean)
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.bridge.BaseJavaModule: boolean hasConstants()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.facebook.react.bridge.WritableMap getJSError(java.lang.Exception)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: void setScaleX(float)
androidx.emoji2.text.EmojiCompat$InitCallback: EmojiCompat$InitCallback()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSupportSecondaryProgressTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.firebase.ui.auth.data.remote.PhoneSignInHandler: PhoneSignInHandler(android.app.Application)
me.zhanghai.android.materialprogressbar.TintableDrawable: void setTint(int)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void sendPasswordResetEmail(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zzlg: zzlg()
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactInstanceManagerBuilder: ReactInstanceManagerBuilder()
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(android.view.View,java.lang.String)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.react.modules.blob.BlobModule: byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.google.android.gms.internal.firebase-auth-api.zzjm: zzjm()
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzjz: zzjz()
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.google.android.gms.common.internal.LibraryVersion: LibraryVersion()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressTintList(android.content.res.ColorStateList)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void signInWithEmailLink(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void setModule(com.facebook.react.turbomodule.core.interfaces.TurboModule)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.airbnb.lottie.value.ScaleXY: ScaleXY()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String getName()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
kotlinx.coroutines.EventLoop: EventLoop()
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
androidx.lifecycle.AndroidViewModel: AndroidViewModel(android.app.Application)
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] values()
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
com.swmansion.reanimated.nodes.EventNode: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
com.swmansion.reanimated.nodes.Node: Node(int,com.facebook.react.bridge.ReadableMap,com.swmansion.reanimated.NodesManager)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setPerformanceTrackingEnabled(boolean)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,boolean,boolean)
com.swmansion.reanimated.ReanimatedModule: void installTurboModule()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.google.android.gms.internal.measurement.zzks: zzks()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion()
com.google.android.gms.internal.firebase-auth-api.zzzy: zzzy()
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.defaults.DefaultComponentsRegistry$Companion: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
androidx.constraintlayout.solver.widgets.VirtualLayout: VirtualLayout()
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$800(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void sendPhoneStateEvent(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
com.firebase.ui.auth.viewmodel.AuthViewModelBase: AuthViewModelBase(android.app.Application)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
com.google.android.gms.internal.measurement.zzkf: zzkf()
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsPing(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.gms.internal.firebase-auth-api.zzkw: zzkw()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.facebook.react.bridge.WritableMap access$600(io.invertase.firebase.auth.ReactNativeFirebaseAuthModule,java.lang.Exception)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.ReadableMap access$500(com.reactnative.ivpusic.imagepicker.PickerModule)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.firebase.ui.auth.ui.phone.SpacedEditText: void setSelection(int)
com.facebook.react.ReactRootView: int getUIManagerType()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
com.facebook.react.bridge.CatalystInstanceImpl: void access$1100(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$100(com.reactnative.ivpusic.imagepicker.PickerModule,java.io.File)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener: AbstractDraweeController$InternalForwardingListener()
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.firebase.auth.internal.zzf: zzf()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation access$100(com.facebook.react.uimanager.UIManagerModule)
okhttp3.CacheControl$Builder: CacheControl$Builder()
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.reanimated.NativeProxy: void setGestureState(int,int)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
com.facebook.react.defaults.DefaultComponentsRegistry: DefaultComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void signInWithPhoneNumber(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Promise)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.swmansion.reanimated.NativeProxy: void registerEventHandler(com.swmansion.reanimated.NativeProxy$EventHandler)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.yalantis.ucrop.view.OverlayView: void setCropFrameColor(int)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderRadius()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void delete(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.google.android.gms.internal.firebase-auth-api.zzjp: zzjp()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.swmansion.reanimated.NativeProxy: int registerSensor(int,int,com.swmansion.reanimated.NativeProxy$SensorSetter)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
com.reactnativecommunity.picker.ReactPickerManager: void setEnabled(com.reactnativecommunity.picker.ReactPicker,boolean)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$getSession$23(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetGapJNI(long,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.facebook.react.bridge.WritableMap resolverToMap(java.lang.String,com.google.firebase.auth.MultiFactorResolver)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.swmansion.reanimated.ReanimatedModule: void initialize()
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: void setTint(int)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.google.android.gms.internal.firebase-auth-api.zzadq: zzadq()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void resolveMultiFactorSignIn(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String)
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
com.reactnativecommunity.picker.ReactDialogPickerManager: ReactDialogPickerManager()
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initializeApp(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.nodes.EventNode: EventNode(int,com.facebook.react.bridge.ReadableMap,com.swmansion.reanimated.NodesManager)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.bridge.ReadableArray: double getDouble(int)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
androidx.fragment.app.Fragment: Fragment()
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.facebook.react.uimanager.UIManagerModule: void preInitializeViewManagers(java.util.List)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.fabric.Binding: Binding()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandler(int,com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void addIdTokenListener(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: float getChipEndPadding()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: RecyclerView$RecycledViewPool$ScrapData()
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.drawable.Drawable getTintTargetFromProgressDrawable(int,boolean)
androidx.loader.content.ModernAsyncTask: ModernAsyncTask()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setShowProgressBackground(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void setVariablePadding(boolean)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void unregisterRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.facebook.react.views.view.ReactViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.hermes.intl.Intl: java.util.List getCanonicalLocales(java.util.List)
com.google.android.material.ripple.RippleUtils: RippleUtils()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.NativeModule: void invalidate()
com.facebook.react.bridge.ContextBaseJavaModule: ContextBaseJavaModule(android.content.Context)
com.firebase.ui.auth.ui.phone.CountryListSpinner: void setDefaultCountryForSpinner(java.util.List)
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.reactnative.ivpusic.imagepicker.PickerModule: void initiatePicker(android.app.Activity)
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: CircularProgressDrawable(int,android.content.Context)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
me.zhanghai.android.materialprogressbar.internal.ValueAnimatorCompat: boolean areAnimatorsEnabled()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
com.facebook.react.modules.vibration.VibrationModule: java.lang.String getName()
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type[] values()
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: StaticIndeterminateCircularProgressDrawable(android.content.Context)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIsAccessibilityLink(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void onHostDestroy()
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: BaseSingleCircularProgressDrawable()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfv: zzfv()
com.google.android.gms.internal.firebase-auth-api.zzli: zzli()
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.firebase.ui.auth.ui.AppCompatBase: AppCompatBase()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.facebook.react.uimanager.BaseViewManager: void setPointerLeaveCapture(android.view.View,boolean)
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.google.android.material.animation.MotionSpec: MotionSpec()
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
androidx.transition.TransitionValues: TransitionValues()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
com.facebook.yoga.YogaNative: void jni_YGNodeClearChildrenJNI(long)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getProgressTintList()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void getIdToken(java.lang.String,java.lang.Boolean,com.facebook.react.bridge.Promise)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollectionItem(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: ReadableNativeMap$ReadableNativeMapKeySetIterator(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(android.view.View,boolean)
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.drawee.generic.RoundingParams: RoundingParams()
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable: void onPreparePaint(android.graphics.Paint)
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter(java.lang.String)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.fabric.SurfaceHandler)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
com.swmansion.gesturehandler.core.RotationGestureHandler: RotationGestureHandler()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes[] values()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftExceptionVerbose(java.lang.String,java.lang.Throwable)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String getName()
me.zhanghai.android.materialprogressbar.R$layout: R$layout()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(com.swmansion.rnscreens.Screen,boolean)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: boolean getUseIntrinsicPadding()
okhttp3.Handshake$Companion: Handshake$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void applyActionCode(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.CopiedEvent$1: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.facebook.react.views.textinput.ReactEditText: void setSubmitBehavior(java.lang.String)
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.airbnb.lottie.model.content.ShapeData: ShapeData()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData initHybrid()
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager getNodesManager()
com.airbnb.lottie.LottieAnimationView: int getRepeatMode()
kotlinx.coroutines.NodeList: NodeList()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.reactnativecommunity.picker.ReactPicker: com.facebook.react.bridge.ReactContext getReactContext()
com.reactcommunity.rndatetimepicker.RNTimePickerDisplay: com.reactcommunity.rndatetimepicker.RNTimePickerDisplay valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
me.zhanghai.android.materialprogressbar.BaseDrawable: void onDraw(android.graphics.Canvas,int,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsRemoveListener(java.lang.String,java.lang.Boolean)
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
me.zhanghai.android.materialprogressbar.BuildConfig: BuildConfig()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: boolean canConstantState()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX: IndeterminateHorizontalProgressDrawable$RectTransformX(float,float)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.google.android.gms.internal.firebase-auth-api.zzaee: zzaee()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
me.zhanghai.android.materialprogressbar.R: R()
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int resolveDensity(android.content.res.Resources,int)
com.reactnative.ivpusic.imagepicker.PickerModule: void openPicker(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceURL(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState: int getChangingConfigurations()
me.zhanghai.android.materialprogressbar.Interpolators$LINEAR: Interpolators$LINEAR()
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(android.view.View,java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map getCommandsMap()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeX(int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
com.google.android.gms.internal.measurement.zzfz: zzfz()
me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo: MaterialProgressBar$TintInfo()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.graphics.PorterDuff$Mode getSupportIndeterminateTintMode()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.google.android.gms.internal.firebase-auth-api.zznr: com.google.android.gms.internal.firebase-auth-api.zznr[] values()
okhttp3.MediaType$Companion: MediaType$Companion()
com.reactcommunity.rndatetimepicker.TimePickerModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.reactcommunity.rndatetimepicker.TimePickerModule)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.facebook.react.bridge.DynamicFromObject: double asDouble()
com.airbnb.lottie.LottieAnimationView: java.lang.String getImageAssetsFolder()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void reauthenticateWithCredential(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setResponderMove(android.view.View,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
okio.Segment: Segment()
kotlinx.coroutines.internal.CtorCache: CtorCache()
com.google.firebase.auth.internal.RecaptchaActivity: RecaptchaActivity()
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
com.reactnativecommunity.picker.ReactPickerManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: int getCurrentIndex()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.views.text.TextInlineImageSpan: TextInlineImageSpan()
com.facebook.react.views.slider.ReactSlider: void setValue(double)
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback: BaseTransientBottomBar$BaseCallback()
com.reactcommunity.rndatetimepicker.DatePickerModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderRadius(float)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.facebook.react.turbomodule.core.TurboModuleManager: void onCatalystInstanceDestroy()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.util.Map getConstants()
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
com.firebase.ui.auth.ui.phone.CheckPhoneHandler: CheckPhoneHandler(android.app.Application)
me.zhanghai.android.materialprogressbar.CircularProgressBackgroundDrawable: boolean getShowBackground()
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
com.swmansion.rnscreens.Screen: void setFragment(com.swmansion.rnscreens.ScreenFragment)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initialize()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isCreatingModule()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
me.zhanghai.android.materialprogressbar.Animators: Animators()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second valueOf(java.lang.String)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
com.facebook.react.views.slider.ReactSliderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void promiseRejectAuthException(com.facebook.react.bridge.Promise,java.lang.Exception)
com.facebook.react.fabric.StateWrapperImpl: void updateStateImpl(com.facebook.react.bridge.NativeMap)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: boolean isStateful()
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(android.view.View,int)
com.google.android.gms.internal.firebase-auth-api.zzaaj: zzaaj()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay valueOf(java.lang.String)
com.yalantis.ucrop.view.GestureCropImageView: GestureCropImageView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.google.android.gms.internal.firebase-auth-api.zzmy: zzmy()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostPause()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: boolean isRunning()
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
com.yalantis.ucrop.task.BitmapCropTask: boolean cropCImg(java.lang.String,java.lang.String,int,int,int,int,float,float,int,int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void draw(android.graphics.Canvas)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.google.android.gms.internal.measurement.zzbo: zzbo()
com.facebook.react.LazyReactPackage: LazyReactPackage()
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setCacheComposition(com.airbnb.lottie.LottieAnimationView,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onStateChange(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$verifyPasswordResetCode$36(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$300(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getSupportSecondaryProgressTintList()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getConstantHeight()
com.google.android.gms.internal.firebase-auth-api.zznn: zznn()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.swmansion.rnscreens.Screen: boolean getNativeBackButtonDismissalEnabled()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
me.zhanghai.android.materialprogressbar.MaterialProgressBar: MaterialProgressBar(android.content.Context,android.util.AttributeSet)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
com.google.android.material.card.MaterialCardView: float getProgress()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.google.android.gms.internal.measurement.zzgb: zzgb()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getKey()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.facebook.react.bridge.ReactContext: java.util.Collection getNativeModules()
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.google.android.gms.internal.measurement.zzjo: zzjo()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
com.google.android.material.card.MaterialCardView: float getRadius()
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.google.android.gms.internal.firebase-auth-api.zzjy: zzjy()
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean isLayoutAnimationEnabled()
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.facebook.react.fabric.Binding: void driveCxxAnimations()
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setHotspotBounds(int,int,int,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String getName()
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.swmansion.reanimated.NativeProxy$EventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: void clearMutated()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean onStateChange(int[])
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.google.android.gms.internal.measurement.zzft: zzft()
com.facebook.hermes.intl.Collator: double compare(java.lang.String,java.lang.String)
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.firebase.ui.auth.ui.phone.SpacedEditText: android.text.Editable getUnspacedText()
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(android.view.View,boolean)
okhttp3.internal.platform.Platform: Platform()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.facebook.imagepipeline.image.CloseableBitmap: CloseableBitmap()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: AnimationScaleListDrawableCompat(android.graphics.drawable.Drawable[])
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void onCatalystInstanceDestroy()
com.swmansion.reanimated.NativeProxy: java.lang.String obtainProp(int,java.lang.String)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.airbnb.lottie.LottieAnimationView: void setAnimation(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void decorateRuntime(long)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
com.swmansion.gesturehandler.core.PinchGestureHandler: PinchGestureHandler()
com.google.android.gms.internal.measurement.zzho: zzho()
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityLinks$AccessibleLink: ReactAccessibilityDelegate$AccessibilityLinks$AccessibleLink()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzgd: zzgd()
me.zhanghai.android.materialprogressbar.BaseSingleHorizontalProgressDrawable: BaseSingleHorizontalProgressDrawable(android.content.Context)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void linkWithCredential(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.google.android.gms.internal.measurement.zznf: com.google.android.gms.internal.measurement.zznf[] values()
com.facebook.react.bridge.ReactBridge: void staticInit()
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.android.gms.internal.measurement.zzkg: zzkg()
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token valueOf(java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.events.EventBeatManager)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: long getLastScrollDispatchTime()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.facebook.react.modules.core.TimingModule: void onHostResume()
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getJavaModule(java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
me.zhanghai.android.materialprogressbar.internal.ThemeUtils: ThemeUtils()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: void setConstantState(me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okio.Buffer: Buffer()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: android.content.res.ColorStateList getIndeterminateTintList()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.facebook.react.uimanager.ReanimatedUIManager: ReanimatedUIManager(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.bridge.ReadableNativeMap$2: ReadableNativeMap$2(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[])
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.lifecycle.MutableLiveData: MutableLiveData()
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: MaterialProgressBar(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.airbnb.lottie.LottieAnimationView: void setFrame(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.google.android.gms.internal.firebase-auth-api.zzkt: zzkt()
com.yalantis.ucrop.view.OverlayView: void setCropGridColor(int)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable: boolean onLevelChange(int)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.reactnativecommunity.picker.ReactPickerManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
com.reactnativecommunity.picker.ReactPickerManager: void setDropdownIconRippleColor(com.reactnativecommunity.picker.ReactPicker,int)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void endCreatingModule()
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.gms.internal.firebase-auth-api.zzage: com.google.android.gms.internal.firebase-auth-api.zzage[] values()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.airbnb.lottie.LottieDrawable$OnVisibleAction: com.airbnb.lottie.LottieDrawable$OnVisibleAction[] values()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$1: void run()
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.firebase.ui.auth.ui.phone.CountryListSpinner: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
com.google.firebase.auth.MultiFactorInfo: MultiFactorInfo()
com.airbnb.lottie.LottieAnimationView: void setFontAssetDelegate(com.airbnb.lottie.FontAssetDelegate)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: ImagePerfState()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: com.google.firebase.auth.ActionCodeSettings buildActionCodeSettings(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
androidx.core.content.FileProvider: FileProvider()
com.swmansion.reanimated.nodes.Node: void dangerouslyRescheduleEvaluate()
com.reactnative.ivpusic.imagepicker.PickerModule: android.graphics.Bitmap validateVideo(java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void setTenantId(java.lang.String,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: void setShowBackground(boolean)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(android.view.View,boolean)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)
com.google.android.material.chip.Chip: void setChipIconSize(float)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: void setResponderRelease(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean canApplyTheme()
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
com.facebook.react.modules.blob.BlobModule: long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,java.lang.Boolean)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.hermes.intl.DateTimeFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.imagepipeline.memory.BitmapCounterProvider: BitmapCounterProvider()
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.google.android.gms.internal.measurement.zzga: zzga()
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getConstantMinimumHeight()
com.facebook.react.views.slider.ReactSlider: int getTotalSteps()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEventThrottle(int)
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
com.google.android.material.chip.Chip: float getIconEndPadding()
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.reactnativecommunity.picker.ReactPicker: com.reactnativecommunity.picker.ReactPicker$OnSelectListener getOnSelectListener()
com.facebook.react.bridge.Inspector$Page: int getId()
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.yalantis.ucrop.view.UCropView: UCropView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.google.android.gms.internal.firebase-auth-api.zzzd: zzzd()
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.StaticIndeterminateCircularProgressDrawable: void setColorFilter(android.graphics.ColorFilter)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setColorFilters(com.airbnb.lottie.LottieAnimationView,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
com.facebook.react.modules.websocket.WebSocketModule: void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
kotlinx.coroutines.scheduling.Task: Task()
me.zhanghai.android.materialprogressbar.AnimationScaleIndeterminateCircularProgressDrawable: void setUseIntrinsicPadding(boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onTouchEvent(com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
com.facebook.react.views.scroll.ScrollEvent: ScrollEvent()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
com.google.android.gms.internal.firebase-auth-api.zzma: zzma()
com.facebook.react.uimanager.BaseViewManager: void setPointerOut(android.view.View,boolean)
com.reactnativecommunity.picker.ReactPicker: com.reactnativecommunity.picker.ReactPicker$OnFocusListener getOnFocusListener()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance(com.google.firebase.FirebaseApp)
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void lambda$signInWithEmailAndPassword$6(com.facebook.react.bridge.Promise,com.google.firebase.auth.AuthResult)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: int isGooglePlayServicesAvailable()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.google.android.material.internal.BaselineLayout: int getBaseline()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.yalantis.ucrop.view.TransformImageView: int getMaxBitmapSize()
me.zhanghai.android.materialprogressbar.HorizontalProgressBackgroundDrawable: HorizontalProgressBackgroundDrawable(android.content.Context)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: RNGestureHandlerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] values()
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(android.view.View,java.lang.Integer)
me.zhanghai.android.materialprogressbar.internal.AnimationScaleListDrawableCompat: android.graphics.drawable.Drawable mutate()
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType valueOf(java.lang.String)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
com.firebase.ui.auth.ui.phone.CountryListSpinner: void setCountriesToDisplay(java.util.List)
com.firebase.ui.auth.ui.email.CheckEmailHandler: CheckEmailHandler(android.app.Application)
com.google.android.gms.internal.firebase-auth-api.zziy: zziy()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.google.android.gms.internal.firebase-auth-api.zzmi: zzmi()
me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void stop()
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.gms.internal.firebase-auth-api.zzlf: zzlf()
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
me.zhanghai.android.materialprogressbar.BaseIndeterminateProgressDrawable: BaseIndeterminateProgressDrawable(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zzoe: zzoe()
com.swmansion.gesturehandler.core.FlingGestureHandler: FlingGestureHandler()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.airbnb.lottie.LottieDrawable$OnVisibleAction: com.airbnb.lottie.LottieDrawable$OnVisibleAction valueOf(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.swmansion.reanimated.nodes.Node: java.lang.Double doubleValue()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
me.zhanghai.android.materialprogressbar.CircularProgressDrawable: void setShowBackground(boolean)
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setActiveColor(int)
com.facebook.hermes.intl.DateTimeFormat: java.util.Map resolvedOptions()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void sendEmailVerification(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.google.android.gms.internal.firebase-auth-api.zzoq: zzoq()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: boolean install()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory findFactoryForHandler(com.swmansion.gesturehandler.core.GestureHandler)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.common.api.GoogleApiClient: GoogleApiClient()
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
com.google.android.gms.internal.firebase-auth-api.zzacc: zzacc()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.reactnativecommunity.picker.ReactPickerManager: void receiveCommand(com.reactnativecommunity.picker.ReactPicker,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.picker.ReactPicker)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void mutate()
com.facebook.react.modules.share.ShareModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setPressed(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzcf)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.reactnativecommunity.picker.ReactPicker: void setPrimaryColor(java.lang.Integer)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: NativeDevSplitBundleLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.airbnb.lottie.LottieAnimationView: void setImageAssetsFolder(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(android.view.View,boolean)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
com.firebase.ui.auth.ui.phone.CountryListSpinner: com.firebase.ui.auth.data.model.CountryInfo getSelectedCountryInfo()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener access$100()
com.facebook.jni.HybridData: void resetNative()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.facebook.react.modules.blob.FileReaderModule: java.lang.String getName()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(android.view.View)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
com.google.android.material.chip.ChipGroup: int getChipCount()
com.facebook.react.uimanager.ReanimatedUIManager: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.facebook.react.uimanager.LayoutShadowNode: void setRowGap(float)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
com.yalantis.ucrop.view.OverlayView: void setDimmedColor(int)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.gms.internal.measurement.zzgh: zzgh()
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String getName()
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.airbnb.lottie.LottieAnimationView: void setRepeatCount(int)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
me.zhanghai.android.materialprogressbar.MaterialProgressBar: void setSupportSecondaryProgressTintList(android.content.res.ColorStateList)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(android.view.View,boolean)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
com.google.android.gms.internal.measurement.zzgt: zzgt()
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] values()
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String)
com.swmansion.rnscreens.CustomSearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object[] getValues()
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
androidx.tracing.TraceApi29Impl: boolean isEnabled()
io.invertase.firebase.auth.ReactNativeFirebaseAuthModule: void initialize()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int,int,int)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData initHybrid()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.google.android.gms.internal.firebase-auth-api.zzkh: zzkh()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.google.android.gms.internal.firebase-auth-api.zzmv: zzmv()
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.airbnb.lottie.LottieAnimationView: void setMaxFrame(java.lang.String)
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void onPreparePaint(android.graphics.Paint)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat: boolean onLevelChange(int)
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
com.google.android.gms.internal.firebase-auth-api.zzaag: zzaag()
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
com.google.android.gms.internal.measurement.zzel: zzel()
com.swmansion.rnscreens.Screen: void setNativeBackButtonDismissalEnabled(boolean)
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.android.gms.internal.measurement.zzae: zzae()
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: int getEnterFadeDuration()
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.BaseProgressLayerDrawable: boolean getShowBackground()
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.facebook.yoga.YogaNative: YogaNative()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges[] values()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
me.zhanghai.android.materialprogressbar.IndeterminateCircularProgressDrawable: void stop()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
me.zhanghai.android.materialprogressbar.internal.DrawableContainerCompat$DrawableContainerState: void invalidateCache()
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
